{"version":3,"sources":["jsx/pages/Registration.js"],"names":["connect","state","errorMessage","auth","successMessage","showLoading","props","_useState","useState","_useState2","_slicedToArray","email","setEmail","errorsObj","password","_useState3","_useState4","errors","setErrors","_useState5","_useState6","setPassword","dispatch","useDispatch","_jsx","className","children","_jsxs","onSubmit","e","preventDefault","error","errorObj","_objectSpread","loadingToggleAction","signupAction","history","type","placeholder","name","value","onChange","target","Link","to"],"mappings":"mKAyHeA,uBARS,SAACC,GACrB,MAAO,CACHC,aAAcD,EAAME,KAAKD,aACzBE,eAAgBH,EAAME,KAAKC,eAC3BC,YAAaJ,EAAME,KAAKE,eAIjBL,EAjHf,SAAkBM,GACd,IAAAC,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAClBI,EAAY,CAAEF,MAAO,GAAIG,SAAU,IACvCC,EAA4BP,mBAASK,GAAUG,EAAAN,YAAAK,EAAA,GAAxCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,EAAgCX,mBAAS,IAAGY,EAAAV,YAAAS,EAAA,GAArCL,EAAQM,EAAA,GAAEC,EAAWD,EAAA,GAEtBE,EAAWC,cAuBnB,OACEC,cAAA,OAAKC,UAAU,8BAA6BC,SACxCF,cAAA,OAAKC,UAAU,kBAAiBC,SAC5BF,cAAA,OAAKC,UAAU,sDAAqDC,SAChEF,cAAA,OAAKC,UAAU,WAAUC,SACrBF,cAAA,OAAKC,UAAU,uBAAsBC,SACjCF,cAAA,OAAKC,UAAU,iBAAgBC,SAC3BF,cAAA,OAAKC,UAAU,YAAWC,SACtBC,eAAA,OAAKF,UAAU,YAAWC,SAAA,CAKtBF,cAAA,MAAIC,UAAU,oBAAmBC,SAAC,yBACjCpB,EAAMJ,cACHsB,cAAA,OAAKC,UAAU,wDAAuDC,SACjEpB,EAAMJ,eAGdI,EAAMF,gBACHoB,cAAA,OAAKC,UAAU,oDAAmDC,SAC7DpB,EAAMF,iBAGfuB,eAAA,QAAMC,SA7CtC,SAAkBC,GACdA,EAAEC,iBACF,IAAIC,GAAQ,EACNC,EAAQC,YAAA,GAAQpB,GACR,KAAVF,IACAqB,EAASrB,MAAQ,oBACjBoB,GAAQ,GAGK,KAAbjB,IACAkB,EAASlB,SAAW,uBACpBiB,GAAQ,GAGZb,EAAUc,GAEND,IACJT,EAASY,aAAoB,IAE7BZ,EAASa,YAAaxB,EAAOG,EAAUR,EAAM8B,YA0BQV,SAAA,CACrBC,eAAA,OAAKF,UAAU,aAAYC,SAAA,CACvBF,cAAA,SAAOC,UAAU,QAAOC,SACtBF,cAAA,UAAAE,SAAQ,eAEVF,cAAA,SAAOa,KAAK,OAAOZ,UAAU,eAAea,YAAY,WAAUC,KAAK,YAE3EZ,eAAA,OAAKF,UAAU,aAAYC,SAAA,CACvBF,cAAA,SAAOC,UAAU,QAAOC,SACtBF,cAAA,UAAAE,SAAQ,YAEVF,cAAA,SAAOa,KAAK,QAAQZ,UAAU,eAC1Be,MAAO7B,EACP8B,SAAU,SAACZ,GAAC,OAAKjB,EAASiB,EAAEa,OAAOF,UAEtCvB,EAAON,OAASa,cAAA,OAAKC,UAAU,oBAAmBC,SAAET,EAAON,WAEhEgB,eAAA,OAAKF,UAAU,aAAYC,SAAA,CACvBF,cAAA,SAAOC,UAAU,QAAOC,SACtBF,cAAA,UAAAE,SAAQ,eAEVF,cAAA,SAAOa,KAAK,WAAWZ,UAAU,eAC7Be,MAAO1B,EACP2B,SAAU,SAACZ,GAAC,OACRR,EAAYQ,EAAEa,OAAOF,aAIhCvB,EAAOH,UAAYU,cAAA,OAAKC,UAAU,oBAAmBC,SAAET,EAAOH,WAC/DU,cAAA,OAAKC,UAAU,mBAAkBC,SAC7BF,cAAA,SAAOa,KAAK,SAASZ,UAAU,mCAGvCD,cAAA,OAAKC,UAAU,oBAAmBC,SAC9BC,eAAA,KAAAD,SAAA,CAAG,2BAC0B,IACzBF,cAACmB,IAAI,CAAClB,UAAU,eAAemB,GAAG,SAAQlB,SAAC","file":"static/js/7.e5e65cad.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect, useDispatch } from 'react-redux';\n//import logo from '../../images/logo-full.png'\nimport {\n    loadingToggleAction,\n    signupAction,\n} from '../../store/actions/AuthActions';\nfunction Register(props) {\n    const [email, setEmail] = useState('');\n    let errorsObj = { email: '', password: '' };\n    const [errors, setErrors] = useState(errorsObj);\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    function onSignUp(e) {\n        e.preventDefault();\n        let error = false;\n        const errorObj = { ...errorsObj };\n        if (email === '') {\n            errorObj.email = 'Email is Required';\n            error = true;\n        }\n\n        if (password === '') {\n            errorObj.password = 'Password is Required';\n            error = true;\n        }\n\n        setErrors(errorObj);\n\n        if (error) return;\n        dispatch(loadingToggleAction(true));\n\n        dispatch(signupAction(email, password, props.history));\n    }\n  return (\n    <div className='authincation h-100 p-meddle'>\n        <div className='container h-100'>\n            <div className='row justify-content-center h-100 align-items-center'>\n                <div className='col-md-6'>\n                    <div className='authincation-content'>\n                        <div className='row no-gutters'>\n                            <div className='col-xl-12'>\n                                <div className='auth-form'>\n                                    {/* <div className='text-center mb-3'>\n                                        <img src={logo} alt=\"\" />\n                                    </div> */}\n\n                                    <h4 className='text-center mb-4 '>Sign up your account</h4>\n                                    {props.errorMessage && (\n                                        <div className='bg-red-300 text-danger border border-red-900 p-1 my-2'>\n                                            {props.errorMessage}\n                                        </div>\n                                    )}\n                                    {props.successMessage && (\n                                        <div className='bg-green-300 text-danger text-green-900  p-1 my-2'>\n                                            {props.successMessage}\n                                        </div>\n                                    )}\n                                    <form onSubmit={onSignUp}>\n                                        <div className='form-group'>\n                                            <label className='mb-1 '>\n                                              <strong>Username</strong>\n                                            </label>\n                                            <input type='text' className='form-control' placeholder='username'name='name' />\n                                        </div>\n                                        <div className='form-group'>\n                                            <label className='mb-1 '>\n                                              <strong>Email</strong>\n                                            </label>\n                                            <input type=\"email\" className=\"form-control\"\n                                                value={email}\n                                                onChange={(e) => setEmail(e.target.value)}\n                                            />\n                                            {errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>}\n                                        </div>\n                                        <div className='form-group'>\n                                            <label className='mb-1 '>\n                                              <strong>Password</strong>\n                                            </label>\n                                            <input type=\"password\" className=\"form-control\"\n                                                value={password}\n                                                onChange={(e) =>\n                                                    setPassword(e.target.value)\n                                                }\n                                            />\n                                        </div>\n                                        {errors.password && <div className=\"text-danger fs-12\">{errors.password}</div>}\n                                        <div className='text-center mt-4'>\n                                            <input type='submit' className='btn btn-primary btn-block'/>\n                                        </div>\n                                    </form>\n                                    <div className='new-account mt-3 '>\n                                        <p>\n                                            Already have an account?{' '}\n                                            <Link className='text-primary' to='/login'>\n                                                Sign in\n                                            </Link>\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        errorMessage: state.auth.errorMessage,\n        successMessage: state.auth.successMessage,\n        showLoading: state.auth.showLoading,\n    };\n};\n\nexport default connect(mapStateToProps)(Register);\n"],"sourceRoot":""}