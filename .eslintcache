[{"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\index.js":"1","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\App.js":"2","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\context\\ThemeContext.js":"4","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\store\\store.js":"5","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\store\\selectors\\AuthSelectors.js":"6","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\pages\\Registration.js":"7","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\services\\AuthService.js":"8","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\pages\\Error404.js":"9","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\pages\\ForgotPassword.js":"10","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\pages\\Login.js":"11","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\store\\reducers\\PostsReducer.js":"12","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\store\\reducers\\Reducers.js":"13","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\store\\reducers\\AuthReducer.js":"14","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\index.jsx":"15","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\PushScreen.jsx":"16","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Layout.jsx":"17","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\store\\actions\\AuthActions.js":"18","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\web-player\\index.jsx":"19","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\store\\actions\\PostTypes.js":"20","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\TestDaySchudele.js":"21","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\DaySchedule.js":"22","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\SecondMonth.js":"23","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\DesignMonthSchedule.js":"24","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\TestDay.js":"25","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\ScrollToTop.js":"26","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\SequenceEdit.js":"27","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\Footer.js":"28","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\utils\\api.js":"29","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\ChooseLayout.jsx":"30","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\SelectComparison.jsx":"31","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\CopyTestDay.jsx":"32","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\CopyMonthSchedule.jsx":"33","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\MonthSchedule.jsx":"34","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\viewSchedule.jsx":"35","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\screen\\details.jsx":"36","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Composition\\CreateComposition.jsx":"37","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\reports\\reportsList.jsx":"38","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Composition\\EditComposition.jsx":"39","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Composition\\listComposition.jsx":"40","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\nav\\index.js":"41","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\screen\\index.jsx":"42","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\utils\\UtilsService.js":"43","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\integrations\\index.jsx":"44","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\media\\index.jsx":"45","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\reports\\index.jsx":"46","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\PublishMediaModal.jsx":"47","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\DeleteConfirmation.jsx":"48","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\settings\\index.jsx":"49","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\QuickPlayModal.jsx":"50","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\WindowsModal.jsx":"51","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\UpdateModal.jsx":"52","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\reports\\Audit.jsx":"53","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\reports\\Media.jsx":"54","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\generateReportModal.jsx":"55","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\reports\\Uptime.jsx":"56","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Composition\\Common.jsx":"57","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Composition\\CompositionActions.jsx":"58","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AddNewTagModal.jsx":"59","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\ChatBox.js":"60","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\nav\\Header.js":"61","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\nav\\NavHader.js":"62","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\nav\\SideBar.js":"63","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\YoutubeAppModal.jsx":"64","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\QrCodeModal.jsx":"65","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AirQualityAppModal.jsx":"66","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\BulletinBoardAppModal.jsx":"67","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\TableLoader.jsx":"68","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\StocksAppModal.jsx":"69","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\settings\\profile.jsx":"70","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\settings\\group.jsx":"71","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AddDeviceProfile.jsx":"72","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\settings\\roles.jsx":"73","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AddGroup.jsx":"74","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AddUserModal.jsx":"75","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\settings\\User.jsx":"76","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\settings\\defaultComposition.jsx":"77","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\nav\\Logout.js":"78","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\UploadMediaFileModal.jsx":"79","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\chatBox\\Alerts.js":"80","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\chatBox\\Notes.js":"81","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\chatBox\\Chat.js":"82","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\duplicateComposition.jsx":"83","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\layouts\\viewDetails.jsx":"84","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\saveCompositionName.jsx":"85","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Composition\\ZoneInfoTable.jsx":"86","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Composition\\CompositionTable.jsx":"87","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\previewComposition.jsx":"88","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\SelecteMedia.jsx":"89","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\SelectScreenModal.jsx":"90","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\DragMove.jsx":"91","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AddMedia.jsx":"92","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\DefaultCompositionModal.jsx":"93","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\chatBox\\MsgBox.js":"94","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\media\\fileUploadWithPreview.jsx":"95","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\editSelectedComposition.jsx":"96","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\web-player\\WebVideoPlayer.jsx":"97","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\RssFeedAppModal.jsx":"98","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\WeatherAppModal.jsx":"99","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\TextAppModal.jsx":"100","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\ScrollerTextAppModal.jsx":"101","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\UrlAppModal.jsx":"102","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\cropImage\\cropImage.jsx":"103","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\cropImage\\index.jsx":"104","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\Clock.js":"105","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\FilterModal.jsx":"106","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AddScreenModal.jsx":"107","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\screen\\listScreens.jsx":"108","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\CompolistionListModel.jsx":"109","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\screen\\tagInputField.jsx":"110","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\utils\\fetchClient.js":"111","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\web-player\\main.jsx":"112","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\web-player\\compositionPlayer.jsx":"113","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\web-player\\Zone2.jsx":"114","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\web-player\\Zone1.jsx":"115","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\web-player\\Zone3.jsx":"116","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\pages\\LockScreen.js":"117","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\CustomNoRowsOverlay.js":"118","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\QuickSearchToolbar.js":"119","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\media\\listMedia.jsx":"120","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\pages\\Verification.jsx":"121","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\ResetPassword.jsx":"122","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\ClockApp.jsx":"123","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\ChangePassword.jsx":"124","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\integrations\\PeopleSpace.jsx":"125","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\integrations\\Createtemplate.jsx":"126","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\EditTemplate.jsx":"127","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\TemplateAddContent.jsx":"128","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\GoogleSlideAppModal.jsx":"129","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\QuoteModel.jsx":"130","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AllNewsAppModal.jsx":"131","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\integrations\\PeopleSpacePreview.jsx":"132","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\pages\\VerificationBkp.jsx":"133","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\nav\\MfaPage.jsx":"134","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\ScheduleList.jsx":"135","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\QuickPlayList.jsx":"136","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\DefComplist.jsx":"137","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\cropImage\\ImageRotation.jsx":"138"},{"size":1396,"mtime":1688586140504,"results":"139","hashOfConfig":"140"},{"size":4502,"mtime":1695699066228,"results":"141","hashOfConfig":"140"},{"size":375,"mtime":1683793012246,"results":"142","hashOfConfig":"140"},{"size":1906,"mtime":1683793002186,"results":"143","hashOfConfig":"140"},{"size":777,"mtime":1683793014367,"results":"144","hashOfConfig":"140"},{"size":245,"mtime":1694700274760,"results":"145","hashOfConfig":"140"},{"size":5838,"mtime":1683793012175,"results":"146","hashOfConfig":"140"},{"size":3324,"mtime":1694700274745,"results":"147","hashOfConfig":"140"},{"size":1036,"mtime":1683793012167,"results":"148","hashOfConfig":"140"},{"size":2091,"mtime":1683793012170,"results":"149","hashOfConfig":"140"},{"size":12398,"mtime":1695699077569,"results":"150","hashOfConfig":"140"},{"size":1739,"mtime":1683793014359,"results":"151","hashOfConfig":"140"},{"size":1054,"mtime":1683793014360,"results":"152","hashOfConfig":"140"},{"size":3037,"mtime":1694700274760,"results":"153","hashOfConfig":"140"},{"size":5313,"mtime":1695699073683,"results":"154","hashOfConfig":"140"},{"size":22332,"mtime":1696399488683,"results":"155","hashOfConfig":"140"},{"size":4423,"mtime":1696399488678,"results":"156","hashOfConfig":"140"},{"size":9410,"mtime":1695699077694,"results":"157","hashOfConfig":"140"},{"size":2805,"mtime":1687284325124,"results":"158","hashOfConfig":"140"},{"size":513,"mtime":1683793014353,"results":"159","hashOfConfig":"140"},{"size":5556,"mtime":1687204651404,"results":"160","hashOfConfig":"140"},{"size":9537,"mtime":1687204651389,"results":"161","hashOfConfig":"140"},{"size":26986,"mtime":1687283721923,"results":"162","hashOfConfig":"140"},{"size":16483,"mtime":1692523196674,"results":"163","hashOfConfig":"140"},{"size":16710,"mtime":1695699071806,"results":"164","hashOfConfig":"140"},{"size":256,"mtime":1683793012106,"results":"165","hashOfConfig":"140"},{"size":16879,"mtime":1695699071643,"results":"166","hashOfConfig":"140"},{"size":431,"mtime":1683793012103,"results":"167","hashOfConfig":"140"},{"size":17019,"mtime":1696399488934,"results":"168","hashOfConfig":"140"},{"size":5167,"mtime":1694700274407,"results":"169","hashOfConfig":"140"},{"size":11956,"mtime":1692523095964,"results":"170","hashOfConfig":"140"},{"size":6765,"mtime":1687204651389,"results":"171","hashOfConfig":"140"},{"size":45744,"mtime":1687283721841,"results":"172","hashOfConfig":"140"},{"size":6027,"mtime":1687283721921,"results":"173","hashOfConfig":"140"},{"size":6481,"mtime":1696399488765,"results":"174","hashOfConfig":"140"},{"size":24902,"mtime":1696406685651,"results":"175","hashOfConfig":"140"},{"size":1078,"mtime":1694700274422,"results":"176","hashOfConfig":"140"},{"size":3264,"mtime":1692523297795,"results":"177","hashOfConfig":"140"},{"size":1094,"mtime":1687204651389,"results":"178","hashOfConfig":"140"},{"size":7651,"mtime":1696399488677,"results":"179","hashOfConfig":"140"},{"size":983,"mtime":1683793012131,"results":"180","hashOfConfig":"140"},{"size":4860,"mtime":1696399488767,"results":"181","hashOfConfig":"140"},{"size":82553,"mtime":1696399488881,"results":"182","hashOfConfig":"140"},{"size":14984,"mtime":1696399488646,"results":"183","hashOfConfig":"140"},{"size":6636,"mtime":1696399488680,"results":"184","hashOfConfig":"140"},{"size":8258,"mtime":1694700274539,"results":"185","hashOfConfig":"140"},{"size":7315,"mtime":1695699075707,"results":"186","hashOfConfig":"140"},{"size":804,"mtime":1683793012158,"results":"187","hashOfConfig":"140"},{"size":7721,"mtime":1695699072170,"results":"188","hashOfConfig":"140"},{"size":6467,"mtime":1692523298561,"results":"189","hashOfConfig":"140"},{"size":1008,"mtime":1687204651451,"results":"190","hashOfConfig":"140"},{"size":2751,"mtime":1687204651451,"results":"191","hashOfConfig":"140"},{"size":1710,"mtime":1692523297634,"results":"192","hashOfConfig":"140"},{"size":1525,"mtime":1692523297681,"results":"193","hashOfConfig":"140"},{"size":7850,"mtime":1692523298903,"results":"194","hashOfConfig":"140"},{"size":2321,"mtime":1692523297697,"results":"195","hashOfConfig":"140"},{"size":9004,"mtime":1696399488675,"results":"196","hashOfConfig":"140"},{"size":7807,"mtime":1695699070138,"results":"197","hashOfConfig":"140"},{"size":4582,"mtime":1695699074033,"results":"198","hashOfConfig":"140"},{"size":2328,"mtime":1683793012097,"results":"199","hashOfConfig":"140"},{"size":3776,"mtime":1683793012109,"results":"200","hashOfConfig":"140"},{"size":892,"mtime":1694978616323,"results":"201","hashOfConfig":"140"},{"size":6355,"mtime":1695699074026,"results":"202","hashOfConfig":"140"},{"size":9816,"mtime":1695699077400,"results":"203","hashOfConfig":"140"},{"size":14481,"mtime":1695699075856,"results":"204","hashOfConfig":"140"},{"size":13195,"mtime":1695699074258,"results":"205","hashOfConfig":"140"},{"size":22983,"mtime":1695699074706,"results":"206","hashOfConfig":"140"},{"size":330,"mtime":1683793012038,"results":"207","hashOfConfig":"140"},{"size":15153,"mtime":1695699076592,"results":"208","hashOfConfig":"140"},{"size":12428,"mtime":1695699072214,"results":"209","hashOfConfig":"140"},{"size":4279,"mtime":1692523297941,"results":"210","hashOfConfig":"140"},{"size":14405,"mtime":1692523298307,"results":"211","hashOfConfig":"140"},{"size":65176,"mtime":1692523298027,"results":"212","hashOfConfig":"140"},{"size":6372,"mtime":1692523298349,"results":"213","hashOfConfig":"140"},{"size":7430,"mtime":1692523298366,"results":"214","hashOfConfig":"140"},{"size":7125,"mtime":1692523297853,"results":"215","hashOfConfig":"140"},{"size":3741,"mtime":1693378843215,"results":"216","hashOfConfig":"140"},{"size":1248,"mtime":1695699073856,"results":"217","hashOfConfig":"140"},{"size":3969,"mtime":1696432262714,"results":"218","hashOfConfig":"140"},{"size":5894,"mtime":1683793012045,"results":"219","hashOfConfig":"140"},{"size":5948,"mtime":1683793012059,"results":"220","hashOfConfig":"140"},{"size":12953,"mtime":1683793012046,"results":"221","hashOfConfig":"140"},{"size":2627,"mtime":1695699077400,"results":"222","hashOfConfig":"140"},{"size":4257,"mtime":1687204651451,"results":"223","hashOfConfig":"140"},{"size":2267,"mtime":1687204651451,"results":"224","hashOfConfig":"140"},{"size":11204,"mtime":1693331484410,"results":"225","hashOfConfig":"140"},{"size":10221,"mtime":1695699070339,"results":"226","hashOfConfig":"140"},{"size":15562,"mtime":1692523298905,"results":"227","hashOfConfig":"140"},{"size":7424,"mtime":1695699076546,"results":"228","hashOfConfig":"140"},{"size":9298,"mtime":1695699076407,"results":"229","hashOfConfig":"140"},{"size":938,"mtime":1692523298514,"results":"230","hashOfConfig":"140"},{"size":9757,"mtime":1692523298352,"results":"231","hashOfConfig":"140"},{"size":6808,"mtime":1692523197020,"results":"232","hashOfConfig":"140"},{"size":12988,"mtime":1683793012047,"results":"233","hashOfConfig":"140"},{"size":4561,"mtime":1696442948395,"results":"234","hashOfConfig":"140"},{"size":6574,"mtime":1687686798507,"results":"235","hashOfConfig":"140"},{"size":2505,"mtime":1687284325121,"results":"236","hashOfConfig":"140"},{"size":15760,"mtime":1695699076124,"results":"237","hashOfConfig":"140"},{"size":15019,"mtime":1695699077259,"results":"238","hashOfConfig":"140"},{"size":14912,"mtime":1695699076849,"results":"239","hashOfConfig":"140"},{"size":10511,"mtime":1695699076241,"results":"240","hashOfConfig":"140"},{"size":7526,"mtime":1695699077190,"results":"241","hashOfConfig":"140"},{"size":2768,"mtime":1696443839901,"results":"242","hashOfConfig":"140"},{"size":798,"mtime":1687284325112,"results":"243","hashOfConfig":"140"},{"size":1612,"mtime":1695699069157,"results":"244","hashOfConfig":"140"},{"size":8210,"mtime":1696399488802,"results":"245","hashOfConfig":"140"},{"size":10403,"mtime":1695699074201,"results":"246","hashOfConfig":"140"},{"size":12215,"mtime":1696400537680,"results":"247","hashOfConfig":"140"},{"size":7380,"mtime":1695699074907,"results":"248","hashOfConfig":"140"},{"size":1756,"mtime":1683793012080,"results":"249","hashOfConfig":"140"},{"size":810,"mtime":1683793014370,"results":"250","hashOfConfig":"140"},{"size":8546,"mtime":1695699073492,"results":"251","hashOfConfig":"140"},{"size":4970,"mtime":1693331486306,"results":"252","hashOfConfig":"140"},{"size":17471,"mtime":1695699072840,"results":"253","hashOfConfig":"140"},{"size":8909,"mtime":1695699072657,"results":"254","hashOfConfig":"140"},{"size":26503,"mtime":1695699073106,"results":"255","hashOfConfig":"140"},{"size":741,"mtime":1694700274656,"results":"256","hashOfConfig":"140"},{"size":3568,"mtime":1692523297447,"results":"257","hashOfConfig":"140"},{"size":592,"mtime":1692523297447,"results":"258","hashOfConfig":"140"},{"size":13787,"mtime":1696399488681,"results":"259","hashOfConfig":"140"},{"size":6725,"mtime":1695566124097,"results":"260","hashOfConfig":"140"},{"size":3392,"mtime":1694700274609,"results":"261","hashOfConfig":"140"},{"size":16674,"mtime":1695699074815,"results":"262","hashOfConfig":"140"},{"size":2131,"mtime":1694978616433,"results":"263","hashOfConfig":"140"},{"size":3861,"mtime":1695699069428,"results":"264","hashOfConfig":"140"},{"size":17111,"mtime":1696399488612,"results":"265","hashOfConfig":"140"},{"size":10356,"mtime":1696399488798,"results":"266","hashOfConfig":"140"},{"size":4100,"mtime":1695699076742,"results":"267","hashOfConfig":"140"},{"size":14896,"mtime":1695699075374,"results":"268","hashOfConfig":"140"},{"size":12252,"mtime":1695699076005,"results":"269","hashOfConfig":"140"},{"size":12950,"mtime":1695699074483,"results":"270","hashOfConfig":"140"},{"size":2947,"mtime":1695699069692,"results":"271","hashOfConfig":"140"},{"size":9167,"mtime":1695699077659,"results":"272","hashOfConfig":"140"},{"size":2113,"mtime":1695699073957,"results":"273","hashOfConfig":"140"},{"size":14902,"mtime":1696403571944,"results":"274","hashOfConfig":"140"},{"size":8547,"mtime":1696399488712,"results":"275","hashOfConfig":"140"},{"size":12176,"mtime":1695699071463,"results":"276","hashOfConfig":"140"},{"size":4007,"mtime":1696443892905,"results":"277","hashOfConfig":"140"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},"vv2hle",{"filePath":"281","messages":"282","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"280"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"280"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"280"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"280"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":11,"source":null},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":7,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"280"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"280"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"280"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"280"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"280"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"280"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","errorCount":0,"warningCount":95,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"379","messages":"380","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"280"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"280"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"280"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"280"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"280"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"280"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"280"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"280"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"280"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"280"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"429","messages":"430","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"431","messages":"432","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"439","messages":"440","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"280"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"444","usedDeprecatedRules":"280"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"280"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"280"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"280"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"280"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"280"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"280"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"280"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"280"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"483","messages":"484","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"280"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"488","messages":"489","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"280"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"280"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"502","messages":"503","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"280"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"280"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"510","messages":"511","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"514","messages":"515","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"516","messages":"517","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"280"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"527","messages":"528","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"529","messages":"530","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"531","messages":"532","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"539","messages":"540","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"280"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"544","messages":"545","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"546","messages":"547","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"548","messages":"549","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"280"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"557","messages":"558","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"559","messages":"560","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"280"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"564","messages":"565","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"280"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"571","messages":"572","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"573","messages":"574","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"575","messages":"576","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"577","messages":"578","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"579","messages":"580","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"581","messages":"582","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"583","messages":"584","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"585","messages":"586","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"587","messages":"588","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"589","messages":"590","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"591","messages":"592","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"593","messages":"594","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\index.js",[],["595","596"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\App.js",["597","598","599","600"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\context\\ThemeContext.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\store\\store.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\store\\selectors\\AuthSelectors.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\pages\\Registration.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\services\\AuthService.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\pages\\Error404.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\pages\\ForgotPassword.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\pages\\Login.js",["601","602","603","604","605","606","607","608","609","610","611","612","613","614","615"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\store\\reducers\\PostsReducer.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\store\\reducers\\Reducers.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\store\\reducers\\AuthReducer.js",["616"],"import {\r\n    LOADING_TOGGLE_ACTION,\r\n    LOGIN_CONFIRMED_ACTION,\r\n    LOGIN_FAILED_ACTION,\r\n    LOGOUT_ACTION,\r\n    SIGNUP_CONFIRMED_ACTION,\r\n    SIGNUP_FAILED_ACTION,\r\n    CLEAR_ERRORS,\r\n    OTP_CONFIRMED_ACTION,\r\n    OTP_FAILED_ACTION,\r\n    RESET_PASSWORD_CONFIRMED_ACTION,\r\n    RESET_PASSWORD_FAILED_ACTION,\r\n    GET_PERMISSION_CONFIRMED_ACTION,\r\n    GET_PERMISSION_FAILED_ACTION\r\n} from '../actions/AuthActions';\r\n\r\nconst initialState = {\r\n    permission:null,\r\n    auth: {\r\n        email: '',\r\n        idToken: '',\r\n        localId: '',\r\n        expiresIn: '',\r\n        refreshToken: '',\r\n    },\r\n    errorMessage: '',\r\n    successMessage: '',\r\n    showLoading: false,\r\n};\r\n\r\nexport function AuthReducer(state = initialState, action) {\r\n    if (action.type === SIGNUP_CONFIRMED_ACTION) {\r\n        return {\r\n            ...state,\r\n            auth: action.payload,\r\n            permission:null,\r\n            errorMessage: '',\r\n            successMessage: 'OTP has been sent to registered email',\r\n            showLoading: false,\r\n        };\r\n    }\r\n    if (action.type === LOGIN_CONFIRMED_ACTION) {\r\n        const isV = action?.payload?.vendor?.isVerified;\r\n        return {\r\n            ...state,\r\n            auth: action.payload,\r\n            permission:null,\r\n            errorMessage: '',\r\n            successMessage: !isV ? \"\" : 'Login Successfully Completed',\r\n            showLoading: false,\r\n        };\r\n    }\r\n    if (action.type === GET_PERMISSION_CONFIRMED_ACTION) {\r\n        return {\r\n            ...state,\r\n            permission: action.payload\r\n        };\r\n    }\r\n\r\n    if (action.type === OTP_CONFIRMED_ACTION || action.type === RESET_PASSWORD_CONFIRMED_ACTION) {\r\n        return {\r\n            ...state,\r\n            auth: action.payload,\r\n            errorMessage: '',\r\n            successMessage: 'Mail has been Sent Successfully',\r\n            showLoading: false,\r\n        };\r\n    }\r\n\r\n    if (action.type === LOGOUT_ACTION) {\r\n        return {\r\n            ...state,\r\n            errorMessage: '',\r\n            successMessage: '',\r\n            permission:null,\r\n            auth: {\r\n                email: '',\r\n                idToken: '',\r\n                localId: '',\r\n                expiresIn: '',\r\n                refreshToken: '',\r\n            },\r\n        };\r\n    }\r\n\r\n    if (\r\n        action.type === SIGNUP_FAILED_ACTION ||\r\n        action.type === LOGIN_FAILED_ACTION  ||\r\n        action.type === OTP_FAILED_ACTION ||\r\n        action.type === RESET_PASSWORD_FAILED_ACTION\r\n    ) {\r\n        return {\r\n            ...state,\r\n            errorMessage: action.payload,\r\n            successMessage: '',\r\n            showLoading: false,\r\n        };\r\n    }\r\n\r\n    if (action.type === LOADING_TOGGLE_ACTION) {\r\n        return {\r\n            ...state,\r\n            showLoading: action.payload,\r\n        };\r\n    }\r\n    if (action.type === CLEAR_ERRORS) {\r\n        return {\r\n            ...state,\r\n            errorMessage: '',\r\n            successMessage: '',\r\n        };\r\n    }\r\n    return state;\r\n}\r\n\r\n    \r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\index.jsx",["617","618","619"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\PushScreen.jsx",["620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Layout.jsx",["636","637","638","639"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\store\\actions\\AuthActions.js",["640","641","642","643"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\web-player\\index.jsx",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\store\\actions\\PostTypes.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\TestDaySchudele.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\DaySchedule.js",["644","645","646","647","648","649","650","651"],"// import React from 'react'\r\n// import { useParams, useHistory } from \"react-router-dom\";\r\n\r\n// export default function DaySchedule() {\r\n//     const history = useHistory();\r\n//     const { id } = useParams();\r\n//     console.log(id, \"DaySchedule page id\")\r\n//     return (\r\n//         <div>DaySchedule</div>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Table, Dropdown } from \"react-bootstrap\";\r\nimport AddNewTagModal from \"../../modals/AddNewTagModal\";\r\nimport downArrow from \"../../../img/down-arrow.png\";\r\nimport menuIcon from \"../../../img/menu-icon.png\";\r\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\r\nimport emptyMediaImg from \"../../../img/addmedia-empty-img.png\";\r\nimport nameAvatar from \"../../../img/assets-avatar-img.png\";\r\nimport deleteIcon from \"../../../img/delete-icon.png\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getAllMedia } from \"../../../utils/api\";\r\nimport useSWR from 'swr'\r\n\r\nimport {\r\n    getDatetimeIn12Hours,\r\n    humanReadableFormattedDateString,\r\n} from \"../../../utils/UtilsService\";\r\nimport DeleteConfirmation from \"../../modals/DeleteConfirmation\";\r\nimport { deleteMedia, BASE_URL } from \"../../../utils/api\";\r\nimport PublishMediaModal from \"../../modals/PublishMediaModal\";\r\n\r\nconst DaySchedule = () => {\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n    const { data: allMedia, mutate } = useSWR('/vendor/display/media', getAllMedia);\r\n    console.log(allMedia, \"day schedule\")\r\n\r\n    const [showNewTagModal, setNewTagModal] = useState(false);\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const [selectedMedia, setSelectedMedia] = useState(\"\");\r\n    const [showPublishPopUp, setShowPublishPopUp] = useState(false);\r\n\r\n    // use effect\r\n\r\n\r\n    const handleDelete = async () => {\r\n        setDeleteModal(false)\r\n        await deleteMedia(selectedMedia._id)\r\n        mutate()\r\n    };\r\n\r\n    const handlePublishcOpen = (media) => {\r\n        setShowPublishPopUp(media);\r\n    }\r\n    // const parseMeta = (media) => {\r\n    //     const meta = JSON.parse(media.properties)\r\n    //     return (\r\n    //         <span className=\"td-content\">\r\n    //             {media?.type === \"image\" && <strong>{meta.height} x  {meta.width}</strong>}\r\n    //             {media?.type === \"video\" && <strong>{meta.length.toFixed(0) / 60} Sec</strong>}\r\n    //             <span>{meta.size} MB</span>\r\n    //         </span>\r\n    //     )\r\n    // }\r\n\r\n    const parseMeta = (media) => {\r\n        const meta = JSON.parse(media.properties);\r\n        return (\r\n            <span className=\"td-content\">\r\n                {media?.type === \"image\" && <strong>{meta?.height} x {meta?.width}</strong>}\r\n                {media?.type === \"video\" && meta?.length && (\r\n                    <strong>{(meta.length / 60).toFixed(0)} Sec</strong>\r\n                )}\r\n                {meta?.size && <span>{meta.size} MB</span>}\r\n            </span>\r\n        );\r\n    };\r\n\r\n\r\n    const videoMetaDuration = (media) => {\r\n        const properties = JSON.parse(media?.properties);\r\n        if (properties && properties.length) {\r\n            return (properties.length.toFixed(0) / 60).toFixed(0);\r\n        }\r\n        return null;\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\" d-flex\">\r\n\r\n\r\n                <div className=\"col-7\">\r\n\r\n\r\n                    {allMedia && allMedia.length !== 0 ? (\r\n                        <Table responsive className=\"custom-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Type</th>\r\n                                    <th>Uploaded Date</th>\r\n                                    <th>Properties</th>\r\n                                    <th>Tags</th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {allMedia.map((media) => {\r\n                                    return (\r\n                                        <tr key={media._id}>\r\n                                            <td>\r\n                                                <span className=\"td-content d-flex name-td-content\">\r\n                                                    <span className={`name-img mr-2  ${media.type === \"video\" && \"videotableName\"}`}>\r\n                                                        {media.type === \"image\" && <img\r\n                                                            className=\"media-img img-fluid\"\r\n                                                            src={`${BASE_URL}${media.title}`}\r\n                                                            alt=\"media-img\"\r\n                                                        />}\r\n                                                        {media.type === \"video\" && videoMetaDuration(media)}\r\n                                                    </span>\r\n                                                    <span className=\"name-content d-flex flex-column flex-grow-1\">\r\n                                                        <strong>{media.title.split(\"/\")[media.title.split(\"/\").length - 1]}</strong>\r\n                                                        <span>{media.createdBy.name}</span>\r\n                                                    </span>\r\n                                                </span>\r\n                                            </td>\r\n                                            <td>{media.type.slice(0, 1).toUpperCase() + media.type.slice(1)}</td>\r\n                                            <td>\r\n                                                <span className=\"td-content\">\r\n                                                    <strong>\r\n                                                        {humanReadableFormattedDateString(media.createdAt)}\r\n                                                    </strong>\r\n                                                    <span>{getDatetimeIn12Hours(media.createdAt)}</span>\r\n                                                </span>\r\n                                            </td>\r\n                                            <td>\r\n                                                {parseMeta(media)}\r\n                                            </td>\r\n                                            <td>\r\n                                                {media.tags.map((tag) => {\r\n                                                    return <span className=\"my-phone-tag text-truncate ml-1\">{tag}</span>;\r\n                                                })}\r\n                                                <span\r\n                                                    className=\"down-arrow\"\r\n                                                    onClick={() => {\r\n                                                        setSelectedMedia(media)\r\n                                                        setNewTagModal(true);\r\n                                                    }}\r\n                                                >\r\n                                                    <img\r\n                                                        className=\"down-arrow-img img-fluid\"\r\n                                                        src={downArrow}\r\n                                                        alt=\"arrow\"\r\n                                                    />\r\n                                                </span>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    );\r\n                                })}\r\n                            </tbody>\r\n                        </Table>\r\n                    ) : (\r\n                        <div className=\"empty-media text-center\">\r\n                            <div class=\"empty-media-img mx-auto\">\r\n                                <img\r\n                                    className=\"media-img img-fluid\"\r\n                                    src={emptyMediaImg}\r\n                                    alt=\"media-img\"\r\n                                />\r\n                            </div>\r\n                            <h3>Add Media</h3>\r\n                            <p>\r\n                                Upload your favourite images and videos from the local storage\r\n                                <br /> of your device\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n\r\n                    {showNewTagModal && (\r\n                        <AddNewTagModal\r\n                            selected={selectedMedia}\r\n                            setNewTagModal={setNewTagModal}\r\n\r\n                        />\r\n                    )}\r\n                    {showPublishPopUp && (\r\n                        <PublishMediaModal\r\n                            selected={showPublishPopUp}\r\n                            setShowPublishPopUp={setShowPublishPopUp}\r\n                            type=\"media\"\r\n                        />\r\n                    )}\r\n                    {deleteModal && <DeleteConfirmation setDeleteModal={setDeleteModal} callbackFunction={handleDelete} text=\"Are you sure you want to delete?\" yes={\"Yes Deactivate\"} />}\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <h4>jjjj</h4>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default DaySchedule;\r\n\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\SecondMonth.js",["652"],"import React, { useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\n// export default function SecondMonth() {\r\n//   const [selectedDate, setSelectedDate] = useState(null);\r\n//   const [events, setEvents] = useState([]);\r\n//   console.log(events, \"events ssssssss\");\r\n//   const externalEvent = [\r\n//     { id: 1, title: \"Event 1\", start: \"2023-06-01\", end: \"2023-06-02\" },\r\n//     { id: 2, title: \"Event 2\", start: \"2023-06-03\", end: \"2023-06-04\" },\r\n//     { id: 3, title: \"Event 3\", start: \"2023-06-05\", end: \"2023-06-06\" },\r\n//     { id: 4, title: \"Event 4\", start: \"2023-06-07\", end: \"2023-06-08\" },\r\n//   ];\r\n\r\n//   const [selectedEvent, setSelectedEvent] = useState(null);\r\n//   console.log(selectedEvent, \"lllllllloooooo\");\r\n//   const [selectedCheckboxes, setSelectedCheckboxes] = useState({});\r\n\r\n//   function handleDateCellChange(dateInfo) {\r\n//     // dateInfo.event = selectedEvent;\r\n//     console.log(dateInfo, \"handleDateCellChange top console\");\r\n//     const checkboxKey = dateInfo.date.toISOString();\r\n\r\n//     // console.log(selectedDateValuea, \"selectedDateValuea id\")\r\n//     const selectedDateValue = dateInfo.date.valueOf();\r\n//     console.log(dateInfo.event.id, \"dateInfo -> dateInfo.kkk\");\r\n\r\n//     const isChecked = selectedCheckboxes[checkboxKey];\r\n\r\n//     if (isChecked) {\r\n//       // Unselecting the checkbox\r\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n//         const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n//         delete updatedCheckboxes[checkboxKey];\r\n//         return updatedCheckboxes;\r\n//       });\r\n\r\n//       const filteredEvents = events.filter(\r\n//         (event) => event.start.valueOf() !== selectedDateValue\r\n//       );\r\n\r\n//       console.log(filteredEvents, \"iiiiiii\");\r\n\r\n//       setSelectedEvent(null);\r\n//       setSelectedDate(null);\r\n//       setEvents(filteredEvents);\r\n//     } else {\r\n//       // Selecting the checkbox\r\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n//         ...prevSelectedCheckboxes,\r\n//         [checkboxKey]: true,\r\n//       }));\r\n\r\n//       const event = {\r\n//         id: selectedEvent.id,\r\n//         title: selectedEvent.title,\r\n//         start: dateInfo.date,\r\n//       };\r\n//       setEvents((prevEvents) => [...prevEvents, event]);\r\n//     }\r\n//   }\r\n\r\n//   function handleDateCellChange(dateInfo) {\r\n//     const checkboxKey = dateInfo.date.toISOString();\r\n//     const selectedDateValue = dateInfo.date.valueOf();\r\n//     const isChecked = selectedCheckboxes[checkboxKey];\r\n\r\n//     if (isChecked) {\r\n//       // Unselecting the checkbox\r\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n//         const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n//         delete updatedCheckboxes[checkboxKey];\r\n//         return updatedCheckboxes;\r\n//       });\r\n\r\n//       const filteredEvents = events.filter(\r\n//         (event) => event.start.valueOf() !== selectedDateValue\r\n//       );\r\n\r\n//       setSelectedEvent(null);\r\n//       setSelectedDate(null);\r\n//       setEvents(filteredEvents);\r\n//     } else {\r\n//       // Selecting the checkbox\r\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n//         ...prevSelectedCheckboxes,\r\n//         [checkboxKey]: true,\r\n//       }));\r\n\r\n//       const event = {\r\n//         id: selectedEvent.id,\r\n//         title: selectedEvent.title,\r\n//         start: dateInfo.date,\r\n//       };\r\n//       setEvents((prevEvents) => [...prevEvents, event]);\r\n//     }\r\n//   }\r\n\r\n//   const renderDateCell = (dateInfo) => {\r\n//     const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\r\n//     const isSelected = selectedDateValue === dateInfo.date.valueOf();\r\n//     const isEventSelected = selectedEvent;\r\n\r\n//     if (isEventSelected) {\r\n//       const checkboxKey = dateInfo.date.toISOString();\r\n//       return (\r\n//         <div>\r\n//           <input\r\n//             name={`checkbox-${checkboxKey}`}\r\n//             type=\"checkbox\"\r\n//             checked={isSelected || selectedCheckboxes[checkboxKey]}\r\n//             onChange={() => handleDateCellChange(dateInfo)}\r\n//           />\r\n//           {dateInfo.dayNumberText}\r\n//         </div>\r\n//       );\r\n//     }\r\n\r\n//     return dateInfo.dayNumberText;\r\n//   };\r\n//   const handleEventClick = (event) => {\r\n//     setSelectedEvent(event);\r\n//     setSelectedDate(null); // Reset selected date\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"containe\">\r\n//       <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\r\n//         <h2>Event List</h2>\r\n//         <ul>\r\n//           {externalEvent.map((event, i) => (\r\n//             <li\r\n//               key={i}\r\n//               onClick={() => handleEventClick(event)}\r\n//               style={{\r\n//                 cursor: \"pointer\",\r\n//                 fontWeight:\r\n//                   selectedEvent && selectedEvent.id === event.id\r\n//                     ? \"bold\"\r\n//                     : \"normal\",\r\n//               }}\r\n//             >\r\n//               {event.title}\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//       <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\r\n//         <FullCalendar\r\n//           plugins={[dayGridPlugin, interactionPlugin]}\r\n//           initialView=\"dayGridMonth\"\r\n//           selectable={true}\r\n//           events={events}\r\n//           dayCellContent={renderDateCell}\r\n//           eventContent={(info) => {\r\n//             return (\r\n//               <div>\r\n//                 <div>{info.event.title}</div>\r\n//               </div>\r\n//             );\r\n//           }}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default function SecondMonth() {\r\n//   const [selectedDate, setSelectedDate] = useState(null);\r\n//   const [events, setEvents] = useState([]);\r\n//   const externalEvent = [\r\n//     { id: 1, title: \"Event 1\", start: \"2023-06-01\", end: \"2023-06-02\" },\r\n//     { id: 2, title: \"Event 2\", start: \"2023-06-03\", end: \"2023-06-04\" },\r\n//     { id: 3, title: \"Event 3\", start: \"2023-06-05\", end: \"2023-06-06\" },\r\n//     { id: 4, title: \"Event 4\", start: \"2023-06-07\", end: \"2023-06-08\" },\r\n//   ];\r\n\r\n//   const [selectedEvent, setSelectedEvent] = useState(null);\r\n//   const [selectedCheckboxes, setSelectedCheckboxes] = useState({});\r\n//   const [isEventSelected, setIsEventSelected] = useState(false);\r\n\r\n//   function handleDateCellChange(dateInfo) {\r\n//     const checkboxKey = dateInfo.date.toISOString();\r\n//     const isChecked = selectedCheckboxes[checkboxKey];\r\n\r\n//     if (isChecked) {\r\n//       // Unselecting the checkbox\r\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n//         const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n//         delete updatedCheckboxes[checkboxKey];\r\n//         return updatedCheckboxes;\r\n//       });\r\n\r\n//       const filteredEvents = events.filter(\r\n//         (event) => event.start !== dateInfo.date.toISOString()\r\n//       );\r\n\r\n//       setSelectedEvent(null);\r\n//       setSelectedDate(null);\r\n//       setEvents(filteredEvents);\r\n//     } else {\r\n//       // Selecting the checkbox\r\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n//         ...prevSelectedCheckboxes,\r\n//         [checkboxKey]: true,\r\n//       }));\r\n\r\n//       const event = {\r\n//         id: selectedEvent.id,\r\n//         title: selectedEvent.title,\r\n//         start: dateInfo.date,\r\n//       };\r\n//       setEvents((prevEvents) => [...prevEvents, event]);\r\n//     }\r\n//   }\r\n\r\n//   const handleEventClick = (event) => {\r\n//     setSelectedEvent(event);\r\n//     setSelectedDate(null); // Reset selected date\r\n//     setSelectedCheckboxes({});\r\n//     setIsEventSelected(true); // Set isEventSelected to true\r\n//   };\r\n\r\n//   function handleDateCellChange(dateInfo) {\r\n//     const checkboxKey = dateInfo.date.toISOString();\r\n//     const isChecked = selectedCheckboxes[checkboxKey];\r\n\r\n//     if (isChecked) {\r\n//       // Unselecting the checkbox\r\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n//         const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n//         delete updatedCheckboxes[checkboxKey];\r\n//         return updatedCheckboxes;\r\n//       });\r\n\r\n//       const filteredEvents = events.filter(\r\n//         (event) => event.start !== dateInfo.date.toISOString()\r\n//       );\r\n\r\n//       setSelectedEvent(null);\r\n//       setSelectedDate(null);\r\n//       setEvents(filteredEvents);\r\n//     } else {\r\n//       // Selecting the checkbox\r\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n//         ...prevSelectedCheckboxes,\r\n//         [checkboxKey]: true,\r\n//       }));\r\n\r\n//       const event = {\r\n//         id: selectedEvent.id,\r\n//         title: selectedEvent.title,\r\n//         start: dateInfo.date.toISOString(),\r\n//       };\r\n//       setEvents((prevEvents) => [...prevEvents, event]);\r\n//     }\r\n//   }\r\n//   // ...existing code...\r\n\r\n//   //\r\n\r\n//   const handleWeekCellChange = (dayInfo) => {\r\n//     const { date } = dayInfo;\r\n//     const selectedDay = new Date(date);\r\n//     const checkboxKey = selectedDay.toISOString().split(\"T\")[0];\r\n\r\n//     setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n//       ...prevSelectedCheckboxes,\r\n//       [checkboxKey]: true,\r\n//     }));\r\n\r\n//     // Add event to the selected day (Sunday)\r\n//     const eventToAdd = {\r\n//       id: selectedEvent.id,\r\n//       title: selectedEvent.title,\r\n//       start: selectedDay.toISOString().split(\"T\")[0],\r\n//     };\r\n//     setEvents((prevEvents) => [...prevEvents, eventToAdd]);\r\n//   };\r\n\r\n//   const renderDayHeader = (dayInfo) => {\r\n//     const { date } = dayInfo;\r\n//     const checkboxKey = date.toISOString();\r\n//     const isChecked = selectedCheckboxes[checkboxKey];\r\n\r\n//     if (isEventSelected) {\r\n//       return (\r\n//         <div>\r\n//           <input\r\n//             name={`checkbox-${checkboxKey}`}\r\n//             type=\"checkbox\"\r\n//             checked={isChecked}\r\n//             onChange={() => handleWeekCellChange(dayInfo)}\r\n//           />\r\n//           {date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}\r\n//         </div>\r\n//       );\r\n//     } else {\r\n//       return (\r\n//         <div>{date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}</div>\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const renderDateCell = (dateInfo) => {\r\n//     const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\r\n//     const isSelected = selectedDateValue === dateInfo.date.valueOf();\r\n//     const isEventSelected = selectedEvent;\r\n\r\n//     if (isEventSelected) {\r\n//       const checkboxKey = dateInfo.date.toISOString();\r\n//       return (\r\n//         <div>\r\n//           <input\r\n//             name={`checkbox-${checkboxKey}`}\r\n//             type=\"checkbox\"\r\n//             checked={isSelected || selectedCheckboxes[checkboxKey]}\r\n//             onChange={() => handleDateCellChange(dateInfo)}\r\n//           />\r\n//           {dateInfo.dayNumberText}\r\n//         </div>\r\n//       );\r\n//     }\r\n//     return dateInfo.dayNumberText;\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"fullcalendar-box\">\r\n//       <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\r\n//         <h2>Event List</h2>\r\n//         <ul>\r\n//           {externalEvent.map((event, i) => (\r\n//             <li\r\n//               key={i}\r\n//               onClick={() => handleEventClick(event)}\r\n//               style={{\r\n//                 cursor: \"pointer\",\r\n//                 fontWeight:\r\n//                   selectedEvent && selectedEvent.id === event.id\r\n//                     ? \"bold\"\r\n//                     : \"normal\",\r\n//               }}\r\n//             >\r\n//               {event.title}\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//       <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\r\n//         <FullCalendar\r\n//           plugins={[dayGridPlugin, interactionPlugin]}\r\n//           initialView=\"dayGridMonth\"\r\n//           selectable={true}\r\n//           events={events}\r\n//           dayHeaderContent={renderDayHeader}\r\n//           dayCellContent={renderDateCell}\r\n//           eventContent={(info) => (\r\n//             <div>\r\n//               <div>{info.event.title}</div>\r\n//             </div>\r\n//           )}\r\n//           headerToolbar={{\r\n//             start: \"title\",\r\n//             center: \"selectWeekButton\",\r\n//             end: \"today prev,next\",\r\n//           }}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n// month day logic\r\nexport default function SecondMonth() {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [events, setEvents] = useState([]);\r\n  const externalEvent = [\r\n    { id: 1, title: \"Event 1\", start: \"2023-06-01\", end: \"2023-06-02\" },\r\n    { id: 2, title: \"Event 2\", start: \"2023-06-03\", end: \"2023-06-04\" },\r\n    { id: 3, title: \"Event 3\", start: \"2023-06-05\", end: \"2023-06-06\" },\r\n    { id: 4, title: \"Event 4\", start: \"2023-06-07\", end: \"2023-06-08\" },\r\n  ];\r\n\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [selectedCheckboxes, setSelectedCheckboxes] = useState({});\r\n  const [isEventSelected, setIsEventSelected] = useState(false);\r\n\r\n  //   function handleDateCellChange(dateInfo) {\r\n  //     const checkboxKey = dateInfo.date.toISOString();\r\n  //     const isChecked = selectedCheckboxes[checkboxKey];\r\n\r\n  //     if (isChecked) {\r\n  //       // Unselecting the checkbox\r\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n  //         const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n  //         delete updatedCheckboxes[checkboxKey];\r\n  //         return updatedCheckboxes;\r\n  //       });\r\n\r\n  //       const filteredEvents = events.filter(\r\n  //         (event) => event.start !== dateInfo.date.toISOString()\r\n  //       );\r\n\r\n  //       setSelectedEvent(null);\r\n  //       setSelectedDate(null);\r\n  //       setEvents(filteredEvents);\r\n  //     } else {\r\n  //       // Selecting the checkbox\r\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n  //         ...prevSelectedCheckboxes,\r\n  //         [checkboxKey]: true,\r\n  //       }));\r\n\r\n  //       const event = {\r\n  //         id: selectedEvent.id,\r\n  //         title: selectedEvent.title,\r\n  //         start: dateInfo.date,\r\n  //       };\r\n  //       setEvents((prevEvents) => [...prevEvents, event]);\r\n  //     }\r\n  //   }\r\n\r\n  const handleEventClick = (event) => {\r\n    setSelectedEvent(event);\r\n    setSelectedDate(null); // Reset selected date\r\n    setSelectedCheckboxes({});\r\n    setIsEventSelected(true); // Set isEventSelected to true\r\n  };\r\n\r\n  //   function handleDateCellChange(dateInfo) {\r\n  //     const checkboxKey = dateInfo.date.toISOString();\r\n  //     const isChecked = selectedCheckboxes[checkboxKey];\r\n\r\n  //     if (isChecked) {\r\n  //       // Unselecting the checkbox\r\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n  //         const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n  //         delete updatedCheckboxes[checkboxKey];\r\n  //         return updatedCheckboxes;\r\n  //       });\r\n\r\n  //       const filteredEvents = events.filter(\r\n  //         (event) => event.start !== dateInfo.date.toISOString()\r\n  //       );\r\n\r\n  //       setSelectedEvent(null);\r\n  //       setSelectedDate(null);\r\n  //       setEvents(filteredEvents);\r\n  //     } else {\r\n  //       // Selecting the checkbox\r\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n  //         ...prevSelectedCheckboxes,\r\n  //         [checkboxKey]: true,\r\n  //       }));\r\n\r\n  //       const event = {\r\n  //         id: selectedEvent.id,\r\n  //         title: selectedEvent.title,\r\n  //         start: dateInfo.date.toISOString(),\r\n  //       };\r\n  //       setEvents((prevEvents) => [...prevEvents, event]);\r\n  //     }\r\n  //   }\r\n\r\n  function handleDateCellChange(dateInfo) {\r\n    const checkboxKey = dateInfo.date.toISOString();\r\n    const isChecked = selectedCheckboxes[checkboxKey];\r\n\r\n    if (isChecked) {\r\n      // Unselecting the checkbox\r\n      setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n        const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n        delete updatedCheckboxes[checkboxKey];\r\n        return updatedCheckboxes;\r\n      });\r\n\r\n      const filteredEvents = events.filter(\r\n        (event) => event.start !== dateInfo.date.toISOString()\r\n      );\r\n\r\n      setSelectedEvent(null);\r\n      setSelectedDate(null);\r\n      setEvents(filteredEvents);\r\n    } else {\r\n      // Selecting the checkbox\r\n      setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n        [checkboxKey]: true,\r\n      }));\r\n\r\n      const existingEvent = events.find(\r\n        (event) => event.start === dateInfo.date.toISOString()\r\n      );\r\n\r\n      if (!existingEvent) {\r\n        const event = {\r\n          id: selectedEvent.id,\r\n          title: selectedEvent.title,\r\n          start: dateInfo.date.toISOString(),\r\n        };\r\n        setEvents((prevEvents) => [...prevEvents, event]);\r\n      }\r\n    }\r\n  }\r\n\r\n  //   const handleWeekCellChange = (dayInfo) => {\r\n  //     function getDatesForDayOfWeek(year, month, dayOfWeek) {\r\n  //       const dates = [];\r\n  //       const date = new Date(year, month, 1); // Subtract 1 from month since JavaScript months are zero-based\r\n  //       const targetDay = dayOfWeek % 7; // Normalize dayOfWeek to 0-6 range (Sunday is 0)\r\n  //       while (date.getMonth() === month) {\r\n  //         if (date.getDay() === targetDay) {\r\n  //           dates.push(date.getDate());\r\n  //         }\r\n  //         date.setDate(date.getDate() + 1);\r\n  //       }\r\n\r\n  //       return dates;\r\n  //     }\r\n\r\n  //     const dates = getDatesForDayOfWeek(\r\n  //       new Date(dayInfo.date).getFullYear(),\r\n  //       new Date(dayInfo.date).getMonth(),\r\n  //       new Date(dayInfo.date).getDay()\r\n  //     );\r\n  //     console.log(dates, \"datesssss\");\r\n  //     const { date } = dayInfo;\r\n  //     const selectedDay = new Date(date);\r\n  //     const checkboxKey = selectedDay.toISOString().split(\"T\")[0];\r\n\r\n  //     setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n  //       ...prevSelectedCheckboxes,\r\n  //       [checkboxKey]: true,\r\n  //     }));\r\n\r\n  //     // Add event to the selected day (Sunday)\r\n  //     // const eventToAdd = {\r\n  //     //   id: selectedEvent.id,\r\n  //     //   title: selectedEvent.title,\r\n  //     //   start: selectedDay.toISOString().split(\"T\")[0],\r\n  //     // };\r\n  //     // setEvents((prevEvents) => [...prevEvents, eventToAdd]);\r\n  //   };\r\n\r\n  //   const handleWeekCellChange = (dayInfo) => {\r\n  //     function getDatesForDayOfWeek(year, month, dayOfWeek) {\r\n  //       const dates = [];\r\n  //       const date = new Date(year, month, 1); // Subtract 1 from month since JavaScript months are zero-based\r\n  //       const targetDay = dayOfWeek % 7; // Normalize dayOfWeek to 0-6 range (Sunday is 0)\r\n  //       while (date.getMonth() === month) {\r\n  //         if (date.getDay() === targetDay) {\r\n  //           dates.push(date.getDate());\r\n  //         }\r\n  //         date.setDate(date.getDate() + 1);\r\n  //       }\r\n\r\n  //       return dates;\r\n  //     }\r\n\r\n  //     const dates = getDatesForDayOfWeek(\r\n  //       new Date(dayInfo.date).getFullYear(),\r\n  //       new Date(dayInfo.date).getMonth(),\r\n  //       new Date(dayInfo.date).getDay()\r\n  //     );\r\n\r\n  //     dates.forEach((date) => {\r\n  //       const selectedDay = new Date(dayInfo.date);\r\n  //       selectedDay.setDate(date);\r\n  //       const checkboxKey = selectedDay.toISOString().split(\"T\")[0];\r\n\r\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n  //         ...prevSelectedCheckboxes,\r\n  //         [checkboxKey]: true,\r\n  //       }));\r\n\r\n  //       // Add event to the selected day\r\n  //       const eventToAdd = {\r\n  //         id: selectedEvent.id,\r\n  //         title: selectedEvent.title,\r\n  //         start: selectedDay.toISOString().split(\"T\")[0],\r\n  //       };\r\n  //       setEvents((prevEvents) => [...prevEvents, eventToAdd]);\r\n  //     });\r\n  //   };\r\n\r\n  //   const handleWeekCellChange = (dayInfo) => {\r\n  //     function getDatesForDayOfWeek(year, month, dayOfWeek) {\r\n  //       const dates = [];\r\n  //       const date = new Date(year, month, 1); // Subtract 1 from month since JavaScript months are zero-based\r\n  //       const targetDay = dayOfWeek % 7; // Normalize dayOfWeek to 0-6 range (Sunday is 0)\r\n  //       while (date.getMonth() === month) {\r\n  //         if (date.getDay() === targetDay) {\r\n  //           dates.push(new Date(date)); // Push a new Date object to the array\r\n  //         }\r\n  //         date.setDate(date.getDate() + 1);\r\n  //       }\r\n  //       return dates;\r\n  //     }\r\n\r\n  //     const dates = getDatesForDayOfWeek(\r\n  //       new Date(dayInfo.date).getFullYear(),\r\n  //       new Date(dayInfo.date).getMonth(),\r\n  //       new Date(dayInfo.date).getDay()\r\n  //     );\r\n\r\n  //     dates.forEach((date) => {\r\n  //       const checkboxKey = date.toISOString().split(\"T\")[0];\r\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n  //         ...prevSelectedCheckboxes,\r\n  //         [checkboxKey]: true,\r\n  //       }));\r\n\r\n  //       // Check if the event already exists for the selected date\r\n  //       const existingEvent = events.find(\r\n  //         (event) => event.start === date.toISOString().split(\"T\")[0]\r\n  //       );\r\n\r\n  //       // Add event to the selected day if it doesn't already exist\r\n  //       if (!existingEvent) {\r\n  //         const eventToAdd = {\r\n  //           id: selectedEvent.id,\r\n  //           title: selectedEvent.title,\r\n  //           start: date.toISOString().split(\"T\")[0],\r\n  //         };\r\n  //         setEvents((prevEvents) => [...prevEvents, eventToAdd]);\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  const handleWeekCellChange = (year, month, dayOfWeek) => {\r\n    function getDatesForDayOfWeek(year, month, dayOfWeek) {\r\n      const dates = [];\r\n      const date = new Date(year, month, 1); // Subtract 1 from month since JavaScript months are zero-based\r\n      const targetDay = dayOfWeek % 7; // Normalize dayOfWeek to 0-6 range (Sunday is 0)\r\n      while (date.getMonth() === month) {\r\n        if (date.getDay() === targetDay) {\r\n          dates.push(new Date(date)); // Push a new Date object to the array\r\n        }\r\n        date.setDate(date.getDate() + 1);\r\n      }\r\n      return dates;\r\n    }\r\n\r\n    // const dates = getDatesForDayOfWeek(\r\n    //   new Date(dayInfo.date).getFullYear(),\r\n    //   new Date(dayInfo.date).getMonth(),\r\n    //   new Date(dayInfo.date).getDay()\r\n    // );\r\n\r\n    const dates = getDatesForDayOfWeek(year, month, dayOfWeek);\r\n\r\n    dates.forEach((date) => {\r\n      console.log(date, \"kkkkkk\");\r\n\r\n      // const checkboxKey = inputdate.replace(/\\//g, \"-\");\r\n      const checkboxKey = date;\r\n\r\n      console.log(checkboxKey, \"unitqkjn\");\r\n\r\n      setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n        ...prevSelectedCheckboxes,\r\n        [checkboxKey]: true,\r\n      }));\r\n      console.log(selectedCheckboxes, \"sgvyhjmffgbhnj\");\r\n\r\n      // Check if the event already exists for the selected date\r\n      const existingEvent = events.find(\r\n        (event) => event.start === date.toISOString().split(\"T\")[0]\r\n      );\r\n\r\n      if (!existingEvent) {\r\n        // Add event to the selected date\r\n        const eventToAdd = {\r\n          id: selectedEvent.id,\r\n          title: selectedEvent.title,\r\n          start: date.toISOString().split(\"T\")[0],\r\n        };\r\n        setEvents((prevEvents) => [...prevEvents, eventToAdd]);\r\n      }\r\n    });\r\n  };\r\n\r\n  function getMonthFromString(mon) {\r\n    return new Date(Date.parse(mon + \" 1, 2012\")).getMonth() + 1;\r\n  }\r\n\r\n  const renderDayHeader = (dayInfo) => {\r\n    console.log(dayInfo, \"renderDayHeader console\");\r\n    const { date } = dayInfo;\r\n    const checkboxKey = date.toISOString();\r\n    const isChecked = selectedCheckboxes[checkboxKey];\r\n    console.log(isChecked, \"kkkk\");\r\n\r\n    if (isEventSelected) {\r\n      return (\r\n        <div>\r\n          <input\r\n            className=\"day-checkbox\"\r\n            name={`checkbox-${checkboxKey}`}\r\n            type=\"checkbox\"\r\n            checked={isChecked}\r\n            onChange={() => {\r\n              const monthYrStr = document.querySelector(\"#fc-dom-2\").innerHTML;\r\n              const monthYrArr = monthYrStr.split(\" \");\r\n              console.log(\"monthYrArr #696\", monthYrArr);\r\n              console.log(\r\n                monthYrArr[1],\r\n                getMonthFromString(monthYrArr[0]),\r\n                date.getDay()\r\n              );\r\n            }}\r\n          />\r\n          {date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>{date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}</div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderDateCell = (dateInfo) => {\r\n    const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\r\n    const isSelected = selectedDateValue === dateInfo.date.valueOf();\r\n    const isEventSelected = selectedEvent;\r\n\r\n    if (isEventSelected) {\r\n      const checkboxKey = dateInfo.date.toISOString();\r\n      return (\r\n        <div>\r\n          <input\r\n            name={`checkbox-${checkboxKey}`}\r\n            type=\"checkbox\"\r\n            checked={isSelected || selectedCheckboxes[checkboxKey]}\r\n            onChange={() => handleDateCellChange(dateInfo)}\r\n          />\r\n          {dateInfo.dayNumberText}\r\n        </div>\r\n      );\r\n    }\r\n    return dateInfo.dayNumberText;\r\n  };\r\n\r\n  return (\r\n    <div className=\"fullcalendar-box\">\r\n      <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\r\n        <h2>Event List</h2>\r\n        <ul>\r\n          {externalEvent.map((event, i) => (\r\n            <li\r\n              key={i}\r\n              onClick={() => handleEventClick(event)}\r\n              style={{\r\n                cursor: \"pointer\",\r\n                fontWeight:\r\n                  selectedEvent && selectedEvent.id === event.id\r\n                    ? \"bold\"\r\n                    : \"normal\",\r\n              }}\r\n            >\r\n              {event.title}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\r\n        <FullCalendar\r\n          plugins={[dayGridPlugin, interactionPlugin]}\r\n          initialView=\"dayGridMonth\"\r\n          selectable={true}\r\n          events={events}\r\n          dayHeaderContent={renderDayHeader}\r\n          dayCellContent={renderDateCell}\r\n          eventContent={(info) => (\r\n            <div>\r\n              <div>{info.event.title}</div>\r\n            </div>\r\n          )}\r\n          headerToolbar={{\r\n            start: \"title\",\r\n            center: \"selectWeekButton\",\r\n            end: \"today prev,next\",\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\DesignMonthSchedule.js",["653","654","655","656","657","658","659","660","661","662"],"import React, { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  deleteSequence,\r\n  getAllDaySequence,\r\n  pushAddDates,\r\n} from \"../../../utils/api\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport edit from \"../../../img/edit-composition.png\";\r\nimport deleteIcon from \"../../../img/delete-icon.png\";\r\nimport da from \"date-fns/locale/da/index.js\";\r\nimport { toast } from \"react-toastify\";\r\nexport default function DesignMonthSchedule() {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [events, setEvents] = useState([]);\r\n  const [daySequence, setDaySequence] = useState([]);\r\n  const [activeCard, setActiveCard] = useState(false);\r\n  const [selectedButtonIndex, setSelectedButtonIndex] = useState(null);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [selectedCheckboxes, setSelectedCheckboxes] = useState([]);\r\n  const [isEventSelected, setIsEventSelected] = useState(false);\r\n  const [currentMonth, setCurrentMonth] = useState(0);\r\n\r\n  var days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n  const handleEventClick = (event) => {\r\n    //setEvents([]);\r\n    setSelectedEvent(event);\r\n    setSelectedDate(null); // Reset selected date\r\n    //setSelectedCheckboxes([]);\r\n    setIsEventSelected(true);\r\n  };\r\n\r\n  const callAllDaySequence = async (id) => {\r\n    const list = await getAllDaySequence(id);\r\n    setDaySequence(list.sequence);\r\n    console.log(\"list.sequence\", list.sequence);\r\n    list.sequence.forEach((item) => {\r\n      if (item.dates && item.dates.length > 0) {\r\n        console.log(\"isLoading:true\");\r\n        const datesList = [];\r\n        item.dates.forEach((item2) => {\r\n          datesList.push(item2.split(\"T\")[0] + \"*****\" + item._id);\r\n        });\r\n        //console.log(\"selectedEvent\",selectedEvent)\r\n        handlCustomeWeek(datesList, item, true);\r\n      }\r\n    });\r\n    console.log(\"isLoading:false\");\r\n  };\r\n  useEffect(() => {\r\n    callAllDaySequence(id);\r\n  }, [id]);\r\n\r\n  useEffect(() => {}, [selectedCheckboxes, selectedEvent]);\r\n\r\n  function handleDateCellChange(dateInfo, isWk, isCustom = false, ev = {}) {\r\n    if (!isCustom) {\r\n      const checkboxKey = dateInfo + \"*****\" + selectedEvent._id;\r\n      const dt = new Date(dateInfo);\r\n      const isChecked = selectedCheckboxes[checkboxKey];\r\n      if (isWk) {\r\n        if (!isChecked) {\r\n          // Unselecting the checkbox\r\n          setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n            const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n            delete updatedCheckboxes[checkboxKey];\r\n            return updatedCheckboxes;\r\n          });\r\n          setEvents((current) =>\r\n            current.filter((event) => event.start !== dateInfo)\r\n          );\r\n        } else {\r\n          // Selecting the checkbox\r\n          setSelectedCheckboxes({ ...selectedCheckboxes, [checkboxKey]: true });\r\n          const existingEvent = events.find(\r\n            (event) => event.start === dateInfo\r\n          );\r\n\r\n          if (!existingEvent) {\r\n            const event = {\r\n              id: selectedEvent._id,\r\n              title: selectedEvent.name,\r\n              start: dateInfo,\r\n            };\r\n            setEvents((prevEvents) => [...prevEvents, event]);\r\n          }\r\n        }\r\n      } else {\r\n        if (isChecked) {\r\n          setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n            const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n            delete updatedCheckboxes[checkboxKey];\r\n            updatedCheckboxes[days[dt.getDay()]] = false;\r\n            return updatedCheckboxes;\r\n          });\r\n          //setSelectedCheckboxes({...selectedCheckboxes,[days[dt.getDay()]] : false})\r\n\r\n          const filteredEvents = events.filter(\r\n            (event) => event.start !== dateInfo\r\n          );\r\n          setEvents(filteredEvents);\r\n        } else {\r\n          const dayList = getSundays(days[dt.getDay()], dt.getDay());\r\n          let ct = false;\r\n\r\n          dayList.forEach((item) => {\r\n            if (\r\n              selectedCheckboxes[item.format(\"YYYY-MM-DD\")] &&\r\n              selectedCheckboxes[item.format(\"YYYY-MM-DD\")] !== undefined\r\n            ) {\r\n              ct = true;\r\n            } else {\r\n              ct = false;\r\n            }\r\n          });\r\n          setSelectedCheckboxes({\r\n            ...selectedCheckboxes,\r\n            [checkboxKey]: true,\r\n            [days[dt.getDay()]]:\r\n              ct == true ? true : selectedCheckboxes[dt.getDay()],\r\n          });\r\n          const existingEvent = events.find(\r\n            (event) => event.start === dateInfo\r\n          );\r\n\r\n          if (!existingEvent) {\r\n            const event = {\r\n              id: selectedEvent._id,\r\n              title: selectedEvent.name,\r\n              start: dateInfo,\r\n            };\r\n            setEvents((prevEvents) => [...prevEvents, event]);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      const checkboxKey = dateInfo;\r\n      setSelectedCheckboxes({ ...selectedCheckboxes, [checkboxKey]: true });\r\n      const existingEvent = events.find(\r\n        (event) => event.start === dateInfo.split(\"*****\")[0]\r\n      );\r\n      if (!existingEvent) {\r\n        const event = {\r\n          id: ev._id,\r\n          title: ev.name,\r\n          start: dateInfo.split(\"*****\")[0],\r\n        };\r\n        setEvents((prevEvents) => [...prevEvents, event]);\r\n      }\r\n    }\r\n  }\r\n\r\n  const handlCustomeWeek = async (dayList, ev, iswk = true) => {\r\n    const newArray = selectedCheckboxes;\r\n    dayList.forEach((item) => {\r\n      const checkboxKey = item;\r\n      if (\r\n        moment(item.split(\"*****\")[0]).format(\"YYYY-MM-DD\") >=\r\n        moment(new Date()).format(\"YYYY-MM-DD\")\r\n      ) {\r\n        newArray[checkboxKey] = true;\r\n        handleDateCellChange(item, true, true, ev);\r\n      }\r\n    });\r\n    setSelectedCheckboxes(newArray);\r\n    handleEventClick(ev);\r\n  };\r\n\r\n  const handleWeek = async (e, day, dayInfo, iswk = true) => {\r\n    const dayList = getSundays(days[day], day);\r\n    const newArray = selectedCheckboxes;\r\n    if (e.target.checked) {\r\n      dayList.forEach((item) => {\r\n        const checkboxKey =\r\n          item.format(\"YYYY-MM-DD\") + \"*****\" + selectedEvent._id;\r\n        if (\r\n          moment(item._d).format(\"YYYY-MM-DD\") >=\r\n          moment(new Date()).format(\"YYYY-MM-DD\")\r\n        ) {\r\n          newArray[checkboxKey] = true;\r\n          handleDateCellChange(item.format(\"YYYY-MM-DD\"), iswk);\r\n          newArray[days[day]] = true;\r\n        }\r\n      });\r\n    } else {\r\n      dayList.forEach((item) => {\r\n        const checkboxKey =\r\n          item.format(\"YYYY-MM-DD\") + \"*****\" + selectedEvent._id;\r\n        if (newArray[checkboxKey] !== undefined) {\r\n          delete newArray[checkboxKey];\r\n        }\r\n        handleDateCellChange(item.format(\"YYYY-MM-DD\"), iswk);\r\n        newArray[days[day]] = false;\r\n      });\r\n    }\r\n    setSelectedCheckboxes(newArray);\r\n  };\r\n\r\n  const getSundays = (dayName, dayId) => {\r\n    const result = [];\r\n    var startDate = new Date();\r\n    const cMonth = currentMonth;\r\n    const cYear = startDate.getFullYear();\r\n    var endDate = new Date(cYear, cMonth, 31);\r\n    var day = dayId;\r\n    for (var i = 0; i <= 7; i++) {\r\n      if (startDate.toString().indexOf(dayName) !== -1) {\r\n        break;\r\n      }\r\n      startDate = new Date(cYear, cMonth, i);\r\n    }\r\n    startDate = moment(startDate);\r\n    endDate = moment(endDate);\r\n    result.push(startDate);\r\n    var current = startDate.clone();\r\n    while (current.day(7 + day).isBefore(endDate)) {\r\n      result.push(current.clone());\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const renderDayHeader = (dayInfo) => {\r\n    const { date } = dayInfo;\r\n    const checkboxKey = dayInfo.date.toISOString();\r\n    //const isChecked = selectedCheckboxes[checkboxKey];\r\n\r\n    if (isEventSelected) {\r\n      return (\r\n        <div className=\"month-schedule-header-checkbox\">\r\n          <input\r\n            className={`day-checkbox checkbox-day-${dayInfo.date.getDay()} month--${currentMonth}`}\r\n            name={`checkbox-${checkboxKey}`}\r\n            type=\"checkbox\"\r\n            id={`checkbox-${checkboxKey}`}\r\n            checked={selectedCheckboxes[days[dayInfo.date.getDay()]]}\r\n            onChange={(e) => {\r\n              handleWeek(e, dayInfo.date.getDay(), dayInfo);\r\n            }}\r\n          />\r\n          {date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>{date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}</div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderDateCell = (dateInfo) => {\r\n    const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\r\n    const isSelected = selectedDateValue === dateInfo.date.valueOf();\r\n    const isEventSelected = selectedEvent;\r\n    if (isEventSelected) {\r\n      const checkboxKey = dateInfo.date.toISOString();\r\n      const checkDate = checkboxKey.split(\"T\")[0];\r\n      const lastDate = moment(checkDate, \"YYYY-MM-DD\")\r\n        .add(\"days\", 1)\r\n        .format(\"YYYY-MM-DD\");\r\n      let disablePrp = false;\r\n      if (moment(checkDate, \"YYYY-MM-DD\").add(\"days\", 2) < moment()) {\r\n        disablePrp = true;\r\n      }\r\n      let checker = false;\r\n      daySequence.forEach((i) => {\r\n        if (selectedCheckboxes[lastDate + \"*****\" + i._id] !== undefined) {\r\n          checker = true;\r\n        }\r\n      });\r\n\r\n      return (\r\n        <div className=\"month-schedule-checkbox\">\r\n          <input\r\n            name={`checkbox-${lastDate}`}\r\n            className={`${disablePrp == true ? \"disabled-checkbox\" : \"\"}`}\r\n            type=\"checkbox\"\r\n            //disabled={disablePrp}\r\n            checked={isSelected || selectedCheckboxes[lastDate] || checker}\r\n            onChange={() => handleDateCellChange(lastDate, false)}\r\n          />\r\n          {dateInfo.dayNumberText}\r\n        </div>\r\n      );\r\n    }\r\n    return dateInfo.dayNumberText;\r\n  };\r\n\r\n  const makePublishData = (data) => {\r\n    const result = [];\r\n    daySequence.forEach((item) => {\r\n      const newA = [];\r\n      data.forEach((items, i) => {\r\n        const spl = items.split(\"*****\");\r\n        const dt = spl[0];\r\n        const sq = spl[1];\r\n        if (sq === item._id) {\r\n          newA.push(dt);\r\n        }\r\n      });\r\n      if (newA.length > 0) {\r\n        result.push({\r\n          sequenceId: item._id,\r\n          dates: newA,\r\n        });\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const handlePublish = async (e) => {\r\n    e.preventDefault();\r\n\r\n    //console.log(\"selectedCheckboxes\",selectedCheckboxes);\r\n\r\n    const dates = Object.keys(selectedCheckboxes).filter(\r\n      (i) =>\r\n        i !== \"Sun\" &&\r\n        i !== \"Mon\" &&\r\n        i !== \"Tue\" &&\r\n        i !== \"Wed\" &&\r\n        i !== \"Thu\" &&\r\n        i !== \"Fri\" &&\r\n        i !== \"Sat\"\r\n    );\r\n    const publishData = makePublishData(dates);\r\n    if (!publishData || publishData.length == 0) {\r\n      toast.error(\"Please select at least one date\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n\r\n      return false;\r\n    }\r\n    const payload = {\r\n      scheduleId: id,\r\n      scheduleArray: publishData,\r\n    };\r\n    await pushAddDates(payload).then((res) => {\r\n      if (res.data.statusCode === 200) {\r\n        history.push(`/push`);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getCurrentMonth = (arg) => {\r\n    const startDate = arg.view.activeStart;\r\n    if (arg.view.type === \"dayGridMonth\") {\r\n      setCurrentMonth(startDate.getMonth() + 1);\r\n      return;\r\n    }\r\n    if (arg.view.type === \"dayGridDay\") {\r\n      startDate.setDate(startDate.getDate() + 8);\r\n      setCurrentMonth(startDate.getMonth() + 1);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleDeleteSequesce = async (sequenceId, id) => {\r\n    await deleteSequence(sequenceId, id).then((res) => {\r\n      if (res.data.statusCode === 200) {\r\n        callAllDaySequence(id);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleButtonClick = (index) => {\r\n    setSelectedButtonIndex(index);\r\n    // Perform any other logic specific to the clicked button\r\n  };\r\n\r\n  const handleEditSequesce = (e, seqId, schId) => {\r\n    e.preventDefault();\r\n    history.push(`/push/sequence/${schId}/${seqId}`);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"fullcalendar-box\">\r\n        <div className=\"d-flex justify-content-end\">\r\n          <Button\r\n            className=\"mr-2\"\r\n            onClick={(e) => {\r\n              handlePublish(e);\r\n            }}\r\n            variant=\"info add-screen-btn\"\r\n          >\r\n            Publish\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"event-list\">\r\n          <div className=\"d-flex align-items-center justify-content-between pb-4\">\r\n            <h3 className=\"p-0\">Day Sequence</h3>\r\n            <Link to={`/testday/${id}`} className=\"mr-2\">\r\n              <Button variant=\"info add-screen-btn\">Create New</Button>\r\n            </Link>\r\n          </div>\r\n\r\n          {daySequence.map((event, i) => {\r\n            return (\r\n              <div\r\n                key={i}\r\n                className=\"month-schedule-list mt-4\"\r\n                onClick={() => {\r\n                  handleButtonClick(i);\r\n                  handleEventClick(event);\r\n                  // setActiveCard(true);\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"d-flex align-items-center px-2 py-4 justify-content-between\"\r\n                  style={{\r\n                    boxShadow:\r\n                      selectedEvent &&\r\n                      selectedEvent._id &&\r\n                      selectedEvent._id === event._id\r\n                        ? \"rgba(0, 0, 0, 0.5) 0px 4px 12px\"\r\n                        : \"\",\r\n                  }}\r\n                  // className={\r\n                  //   selectedButtonIndex === i\r\n                  //     ? \"zone zone-active \"\r\n                  //     : \"zone\"\r\n                  // }\r\n                >\r\n                  <span>\r\n                    {event.name?.length > 6\r\n                      ? event.name.slice(0, 6) + \"...\"\r\n                      : event.name}\r\n                  </span>\r\n\r\n                  <span className=\"total-composition\">\r\n                    Contains {event.timings.length} compositions\r\n                  </span>\r\n                  <span onClick={(e) => handleEditSequesce(e, event._id, id)}>\r\n                    <img\r\n                      src={edit}\r\n                      className=\"dropdown-list-img img-fluid\"\r\n                      height=\"25px\"\r\n                      width=\"25px\"\r\n                    />\r\n                  </span>\r\n                  <span onClick={() => handleDeleteSequesce(event._id, id)}>\r\n                    <img\r\n                      src={deleteIcon}\r\n                      className=\"dropdown-list-img img-fluid\"\r\n                      height=\"30px\"\r\n                      width=\"30px\"\r\n                    />\r\n                  </span>\r\n                  <span className=\"add-btn\">Add to Calendar </span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"calendar\" style={{ float: \"left\", width: \"55%\" }}>\r\n          <FullCalendar\r\n            className=\"month-schedule\"\r\n            weekends={true}\r\n            plugins={[dayGridPlugin, interactionPlugin]}\r\n            initialView=\"dayGridMonth\"\r\n            selectable={true}\r\n            events={events}\r\n            dayHeaderContent={renderDayHeader}\r\n            dayCellContent={renderDateCell}\r\n            //validRange={{\"start\":moment().format('YYYY-MM-DD'),'end':null}}\r\n            datesSet={(arg) => getCurrentMonth(arg)}\r\n            eventContent={(info) => (\r\n              <div className=\"month-schedule-event\">\r\n                <div>\r\n                  {info.event.title.length > 5\r\n                    ? info.event.title.slice(0, 5) + \"...\"\r\n                    : info.event.title}\r\n                </div>\r\n              </div>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\TestDay.js",["663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\ScrollToTop.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\SequenceEdit.js",["693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\Footer.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\utils\\api.js",["719","720","721","722","723","724","725"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\ChooseLayout.jsx",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\SelectComparison.jsx",["726","727","728","729"],"// import React, { useState } from 'react'\r\n// import { Button, Dropdown, Table } from \"react-bootstrap\";\r\n// import searchIcon from \"../../../img/search.png\";\r\n// import listIcon from \"../../../img/list-icon.png\";\r\n// import layoutSelected from \"../../../img/layout-select-img.png\";\r\n// import downArrow from \"../../../img/down-arrow.png\";\r\n// import menuIcon from \"../../../img/menu-icon.png\";\r\n// import defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\r\n// import deleteIcon from \"../../../img/delete-icon.png\";\r\n// const SelectComparison = () => {\r\n//   const [allScreens, setAllScreens] = useState(\"\");\r\n\r\n//   const [checkedItems, setCheckedItems] = useState({});\r\n//   const [checkedValues, setCheckedValues] = useState([]);\r\n\r\n//   const handleCheckboxChange = (event) => {\r\n//     const newCheckedItems = {\r\n//       ...checkedItems,\r\n//       [event.target.name]: event.target.checked,\r\n//     };\r\n//     const selectedScreens = [];\r\n//     for (const key in newCheckedItems) {\r\n//       if (newCheckedItems[key] === true) {\r\n//         selectedScreens.push(key);\r\n//       }\r\n//     }\r\n//     setCheckedValues(selectedScreens);\r\n//     setCheckedItems(newCheckedItems);\r\n//   };\r\n\r\n//   const handleSelectAllChange = (event) => {\r\n//     const newCheckedItems = {};\r\n//     allScreens.forEach((item) => {\r\n//       newCheckedItems[item._id] = event.target.checked;\r\n//     });\r\n//     const selectedScreens = [];\r\n//     for (const key in newCheckedItems) {\r\n//       if (newCheckedItems[key] === true) {\r\n//         selectedScreens.push(key);\r\n//       }\r\n//     }\r\n//     setCheckedValues(selectedScreens);\r\n//     setCheckedItems(newCheckedItems);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//           <div className=\"custom-content-heading selected-heading d-flex flex-wrap\">\r\n//         <h1>Select Composition</h1>\r\n\r\n//         <div className=\"search-textfield search-selected ml-auto d-flex flex-wrap align-items-center\">\r\n//           <div className=\"form-group mb-0\">\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-control input-default \"\r\n//               placeholder=\"Search...\"\r\n//             />\r\n//             <img className=\"search-icon\" src={searchIcon} alt=\"search\" />\r\n//           </div>\r\n//           <Button\r\n//             className=\"ml-2 icon-btn\"\r\n//             variant=\"primary\"\r\n//           >\r\n//             <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\r\n//           </Button>\r\n//         </div>\r\n//       </div>\r\n// {/*\r\n//       <Table responsive className=\"custom-table mt-3\">\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Composition</th>\r\n//               <th>Date Added</th>\r\n//               <th>Associated Schedule</th>\r\n//               <th>Tags</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n\r\n//                 <tr>\r\n//                   <td>\r\n//                     <span className=\"td-content d-flex name-td-content\">\r\n//                       <span className=\"name-img mr-2\">\r\n//                       <img\r\n//                   className=\"layout-select-img\"\r\n//                   src={layoutSelected}\r\n//                   alt=\"menu-icon\"\r\n//                 />\r\n//                       </span>\r\n//                       <span className=\"name-content d-flex flex-column flex-grow-1\">\r\n//                         <strong>C-c02Nov 21 12:03</strong>\r\n//                         <span>Added by Gauri Batra</span>\r\n//                       </span>\r\n//                     </span>\r\n//                   </td>\r\n//                   <td>\r\n//                   <span className=\"name-content d-flex flex-column flex-grow-1\">\r\n//                         <strong>2 Nov, 2021</strong>\r\n//                         <span>12:02 PM</span>\r\n//                       </span>\r\n//                   </td>\r\n//                   <td>\r\n//                    0\r\n//                   </td>\r\n//                   <td>\r\n//                       <span className=\"my-phone-tag text-truncate ml-1\">My Phone is</span>\r\n\r\n//                   </td>\r\n//                 </tr>\r\n//                 <tr>\r\n//                   <td>\r\n//                     <span className=\"td-content d-flex name-td-content\">\r\n//                       <span className=\"name-img mr-2\">\r\n//                       <img\r\n//                   className=\"layout-select-img\"\r\n//                   src={layoutSelected}\r\n//                   alt=\"menu-icon\"\r\n//                 />\r\n//                       </span>\r\n//                       <span className=\"name-content d-flex flex-column flex-grow-1\">\r\n//                         <strong>C-c02Nov 21 12:03</strong>\r\n//                         <span>Added by Gauri Batra</span>\r\n//                       </span>\r\n//                     </span>\r\n//                   </td>\r\n//                   <td>\r\n//                   <span className=\"name-content d-flex flex-column flex-grow-1\">\r\n//                         <strong>2 Nov, 2021</strong>\r\n//                         <span>12:02 PM</span>\r\n//                       </span>\r\n//                   </td>\r\n//                   <td>\r\n//                    0\r\n//                   </td>\r\n//                   <td>\r\n//                       <span className=\"my-phone-tag text-truncate ml-1\">My Phone is</span>\r\n\r\n//                   </td>\r\n//                 </tr>\r\n//           </tbody>\r\n//         </Table> */}\r\n\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default SelectComparison\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport TableLoader from \"../TableLoader\";\r\nimport \"../Table.css\";\r\nimport { getAllScreens, pushAddSchedule } from \"../../../utils/api\";\r\nimport { Button, Dropdown, Table } from \"react-bootstrap\";\r\nimport searchIcon from \"../../../img/search.png\";\r\nimport listIcon from \"../../../img/list-icon.png\";\r\n// import tagCloseIcon from \"../../img/tag-close-icon.png\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nconst SelectComparison = () => {\r\n  const history = useHistory();\r\n  const [allScreens, setAllScreens] = useState(\"\");\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [checkedValues, setCheckedValues] = useState([]);\r\n  const [published, setPublished] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [scheduleName, setScheduleName] = useState(\"\");\r\n  // use effect\r\n  console.log(checkedItems, \"SelectCompariso checkedItemsn\");\r\n  console.log(checkedValues, \"SelectCompariso checkedValues\");\r\n\r\n  useEffect(() => {\r\n    callAllScreenApi();\r\n  }, []);\r\n\r\n  const callAllScreenApi = async () => {\r\n    setLoading(true);\r\n    const list = await getAllScreens();\r\n    setLoading(false);\r\n    setAllScreens(list);\r\n  };\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    const newCheckedItems = {\r\n      ...checkedItems,\r\n      [event.target.name]: event.target.checked,\r\n    };\r\n    const selectedScreens = [];\r\n    for (const key in newCheckedItems) {\r\n      if (newCheckedItems[key] === true) {\r\n        selectedScreens.push(key);\r\n      }\r\n    }\r\n    setCheckedValues(selectedScreens);\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const handleSelectAllChange = (event) => {\r\n    const newCheckedItems = {};\r\n    allScreens.forEach((item) => {\r\n      newCheckedItems[item._id] = event.target.checked;\r\n    });\r\n    const selectedScreens = [];\r\n    for (const key in newCheckedItems) {\r\n      if (newCheckedItems[key] === true) {\r\n        selectedScreens.push(key);\r\n      }\r\n    }\r\n    setCheckedValues(selectedScreens);\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await pushAddSchedule({\r\n      name: scheduleName,\r\n      screens: checkedValues,\r\n    }).then((res) => {\r\n      console.log(res, \"res schedule name\");\r\n      if (res.data.statusCode === 200) {\r\n        console.log(res.data.data.name);\r\n        history.push(`/testday/${res.data.data._id}`);\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"custom-content-heading selected-heading d-flex flex-wrap\">\r\n        <h1>Select Screen</h1>\r\n\r\n        <div className=\"search-textfield search-selected ml-auto d-flex flex-wrap align-items-center\">\r\n          <div className=\"form-group mb-0\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control input-default \"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <img className=\"search-icon\" src={searchIcon} alt=\"search\" />\r\n          </div>\r\n          <Button className=\"ml-2 icon-btn\" variant=\"primary\">\r\n            <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"d-flex justify-content-between align-items-center my-4\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className=\" schedule-name-input-feild form-control input-default \"\r\n          placeholder=\"Schedule Name\"\r\n          value={scheduleName}\r\n          onChange={(e) => setScheduleName(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <Button className=\"mr-2\" variant=\"info add-screen-btn\" type=\"submit\">\r\n          Save\r\n        </Button>\r\n      </form>\r\n\r\n      <Table responsive>\r\n        <thead>\r\n          <tr>\r\n            <th className=\"width50\">\r\n              <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id=\"checkbox1_exam_all\"\r\n                  onChange={handleSelectAllChange}\r\n                  required=\"\"\r\n                />\r\n                <label\r\n                  className=\"custom-control-label\"\r\n                  htmlFor=\"checkbox1_exam_all\"\r\n                ></label>\r\n              </div>\r\n            </th>\r\n            <th>Screen</th>\r\n            <th>Last Seen</th>\r\n            <th>Default Composition</th>\r\n            <th>Current Schedule</th>\r\n          </tr>\r\n        </thead>\r\n        {loading ? (\r\n          <TableLoader colSpan={5} />\r\n        ) : (\r\n          <tbody>\r\n            {allScreens !== \"\" &&\r\n              allScreens.map((screen) => {\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"custom-control-input\"\r\n                          id={screen._id}\r\n                          name={screen._id}\r\n                          checked={checkedItems[screen._id]}\r\n                          onChange={handleCheckboxChange}\r\n                        />\r\n                        <label\r\n                          className=\"custom-control-label\"\r\n                          htmlFor={screen._id}\r\n                        ></label>\r\n                      </div>\r\n                    </td>\r\n\r\n                    <td>\r\n                      <span className=\"td-content\">\r\n                        <strong>{screen.name}</strong>\r\n                        <span>{screen.screenLocation}</span>\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"d-flex align-items-center\">\r\n                        <span className=\"status status-green\"></span>\r\n                        <span className=\"td-content\">\r\n                          <strong>{screen.name}</strong>\r\n                          <span>{screen.screenLocation}</span>\r\n                        </span>\r\n                      </span>\r\n                    </td>\r\n                    <td>Default Compo. </td>\r\n                    <td>No Schedule</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        )}\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectComparison;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\CopyTestDay.jsx",["730","731","732","733","734","735"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { createPlugin } from \"@fullcalendar/core\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\r\n\r\nconst MyCustomPlugin = createPlugin({\r\n  ...timeGridPlugin,\r\n  ...interactionPlugin,\r\n  // other plugin options\r\n});\r\n\r\nexport default function CopyTestDay() {\r\n  // initial state\r\n\r\n  const [state, setState] = useState({\r\n    weekendsVisible: true,\r\n    externalEvents: [\r\n      {\r\n        title: \"Art 1\",\r\n        color: \"#0097a7\",\r\n        id: 34432,\r\n        custom: defaultComparisonIcon,\r\n      },\r\n      {\r\n        title: \"Art 2\",\r\n        color: \"#f44336\",\r\n        id: 323232,\r\n\r\n        custom: defaultComparisonIcon,\r\n      },\r\n      {\r\n        title: \"Art 3\",\r\n        color: \"#f57f17\",\r\n        id: 1111,\r\n\r\n        custom: defaultComparisonIcon,\r\n      },\r\n      {\r\n        title: \"Art 4\",\r\n        color: \"#90a4ae\",\r\n        id: 432432,\r\n\r\n        custom: defaultComparisonIcon,\r\n      },\r\n    ],\r\n    // calendarEvents: [\r\n    //     {\r\n    //         id: 1,\r\n    //         title: \"All-day event\",\r\n    //         color: \"#388e3c\",\r\n    //         start: \"2020-12-12\",\r\n    //         end: \"2020-12-12\",\r\n    //         custom: \"questo è un campo custom\"\r\n    //     },\r\n    //     {\r\n    //         id: 2,\r\n    //         title: \"Timed event\",\r\n    //         color: \"#0097a7\",\r\n    //         start: \"2020-12-07\",\r\n    //         end: \"2020-12-10\",\r\n    //         custom: \"custom stuff\"\r\n    //     }\r\n    // ].map((event) => ({\r\n    //     ...event,\r\n    //     showDeleteButton: true,\r\n    //     extendedProps: {\r\n    //         ...event.extendedProps,\r\n    //         imageUrl: defaultComparisonIcon, // Add the image URL here\r\n    //     },\r\n    // }))\r\n  });\r\n\r\n  // load external events\r\n  useEffect(() => {\r\n    let draggableEl = document.getElementById(\"external-events\");\r\n    new Draggable(draggableEl, {\r\n      itemSelector: \".fc-event\",\r\n      eventData: function (eventEl) {\r\n        let id = eventEl.dataset.id;\r\n        let title = eventEl.getAttribute(\"title\");\r\n        let color = \"#FFE494\";\r\n        let custom = eventEl.dataset.custom;\r\n\r\n        return {\r\n          id: id,\r\n          title: title,\r\n          color: color,\r\n          custom: custom,\r\n          create: true,\r\n        };\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  // handle event receive\r\n  const handleEventReceive = (eventInfo) => {\r\n    const newEvent = {\r\n      id: eventInfo.draggedEl.getAttribute(\"data-id\"),\r\n      title: eventInfo.draggedEl.getAttribute(\"title\"),\r\n      color: eventInfo.draggedEl.getAttribute(\"data-color\"),\r\n      start: eventInfo.date,\r\n      end: eventInfo.date,\r\n      custom: eventInfo.draggedEl.getAttribute(\"data-custom\"),\r\n      showDeleteButton: true,\r\n    };\r\n\r\n    // setState((prevState) => ({\r\n    //     ...prevState,\r\n    //     calendarEvents: prevState.calendarEvents.concat(newEvent)\r\n    // }));\r\n  };\r\n\r\n  // handle deletion of an event\r\n\r\n  const handleEventClick = (info) => {\r\n    console.log(info, \"sssss\");\r\n    info.event.remove();\r\n  };\r\n\r\n  function renderEventContent(eventInfo) {\r\n    console.log(eventInfo, \"eventInfo inside renderEventContent\");\r\n    const { event } = eventInfo;\r\n    const { title, timeText } = event;\r\n    console.log(eventInfo.timeText, \"ooooo\");\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-evenly\",\r\n            height: \"-webkit-fill-available\",\r\n          }}\r\n        >\r\n          <img\r\n            src={event.extendedProps.custom}\r\n            className=\"day-schedule-fullcelender-img\"\r\n            alt=\"Event\"\r\n          />\r\n          <p className=\"m-0 fullcalender-title\">{title}</p>\r\n          <p className=\"m-0 fullcalender-time\">{eventInfo.timeText}</p>\r\n\r\n          <h5 className=\"m-0\" onClick={() => handleEventClick(eventInfo)}>\r\n            de\r\n          </h5>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    const calendarEl = document.getElementById(\"fullCalendar-table\");\r\n    if (calendarEl) {\r\n      calendarEl.style.backgroundColor = \"#fff\"; // Set your desired background color here\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    const calendarContainer = document.querySelector(\".fullcalendar-container\");\r\n    if (calendarContainer) {\r\n      calendarContainer.style.backgroundColor = \"#f0f0f0\"; // Set the desired background color here\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <div style={{ float: \"left\", width: \"25%\" }}>\r\n        <div id=\"external-events\">\r\n          {state.externalEvents.map((event) => (\r\n            <div\r\n              className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\r\n              title={event.title}\r\n              data-id={event.id}\r\n              data-color={event.color}\r\n              data-custom={event.custom}\r\n              key={event.id}\r\n              style={{\r\n                backgroundColor: event.color,\r\n                borderColor: event.color,\r\n                cursor: \"pointer\"\r\n              }}\r\n            >\r\n              <div className=\"fc-event-main\">\r\n                <div>\r\n                  <strong>{event.title}</strong>\r\n                </div>\r\n                <img src={event.custom} />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div style={{ float: \"left\", width: \"75%\" }}>\r\n        <FullCalendar\r\n            id=\"fullCalendar-table\"\r\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n          // headerToolbar={{\r\n          //     left: \"\",\r\n          //     center: \"\",\r\n          //     right: \"\"\r\n          // }}\r\n          headerToolbar={false}\r\n          initialView=\"timeGridDay\"\r\n          slotDuration=\"00:10:00\"\r\n          slotLabelInterval={{ hours: 1 }}\r\n          allDaySlot={false}\r\n          editable={true}\r\n          selectable={false}\r\n          selectMirror={true}\r\n          dayMaxEvents={false}\r\n          weekends={state.weekendsVisible}\r\n          // events={state.calendarEvents}\r\n          droppable={true}\r\n          eventReceive={handleEventReceive}\r\n          slotEventOverlap={false}\r\n          eventOverlap={false}\r\n          // select={handleSelect}\r\n          // eventClick={handleEventClick}\r\n          // eventRender={handleEventRender}\r\n          eventContent={renderEventContent}\r\n         \r\n        ></FullCalendar>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\CopyMonthSchedule.jsx",["736","737","738","739"],"// import React, { useEffect, useState } from \"react\";\r\n// import FullCalendar from \"@fullcalendar/react\";\r\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\r\n// import timeGridPlugin from \"@fullcalendar/timegrid\";\r\n// import interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\r\n\r\n// export default function CopyMonthSchedule() {\r\n//   // initial state\r\n//   const [selectedEvent, setSelectedEvent] = useState(null);\r\n// const [assignedDates, setAssignedDates] = useState([]);\r\n// const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n//   const [state, setState] = useState({\r\n//     weekendsVisible: true,\r\n//     externalEvents: [\r\n//       { title: \"Art 1\", color: \"#0097a7\", id: 34432, custom: \"fdsfdsfds\" },\r\n//       { title: \"Art 2\", color: \"#f44336\", id: 323232 },\r\n//       { title: \"Art 3\", color: \"#f57f17\", id: 1111 },\r\n//       { title: \"Art 4\", color: \"#90a4ae\", id: 432432 }\r\n//     ],\r\n//     calendarEvents: [\r\n//       {\r\n//         id: 1,\r\n//         title: \"All-day event\",\r\n//         color: \"#388e3c\",\r\n//         start: \"2020-12-12\",\r\n//         end: \"2020-12-12\",\r\n//         custom: \"questo è un campo custom\"\r\n//       },\r\n//       {\r\n//         id: 2,\r\n//         title: \"Timed event\",\r\n//         color: \"#0097a7\",\r\n//         start: \"2020-12-07\",\r\n//         end: \"2020-12-10\",\r\n//         custom: \"custom stuff\"\r\n//       }\r\n//     ]\r\n//   });\r\n\r\n//   // load external events\r\n//   useEffect(() => {\r\n//     let draggableEl = document.getElementById(\"external-events\");\r\n//     new Draggable(draggableEl, {\r\n//       itemSelector: \".fc-event\",\r\n//       eventData: function (eventEl) {\r\n//         let id = eventEl.dataset.id;\r\n//         let title = eventEl.getAttribute(\"title\");\r\n//         let color = eventEl.dataset.color;\r\n//         let custom = eventEl.dataset.custom;\r\n\r\n//         return {\r\n//           id: id,\r\n//           title: title,\r\n//           color: color,\r\n//           custom: custom,\r\n//           create: true\r\n//         };\r\n//       }\r\n//     });\r\n//   });\r\n\r\n//   // add external events\r\n//   const addEvent = () => {\r\n//     let newEvent = {\r\n//       id: 3433,\r\n//       title: \"Timed event\",\r\n//       color: \"#333333\",\r\n//       start: \"2020-12-31\",\r\n//       end: \"2020-12-31\",\r\n//       custom: \"custom stuff\"\r\n//     };\r\n\r\n//     setState((state) => {\r\n//       return {\r\n//         ...state,\r\n//         externalEvents: state.externalEvents.concat(newEvent)\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   // handle event receive\r\n//   const handleEventReceive = (eventInfo) => {\r\n//     const newEvent = {\r\n//       id: eventInfo.draggedEl.getAttribute(\"data-id\"),\r\n//       title: eventInfo.draggedEl.getAttribute(\"title\"),\r\n//       color: eventInfo.draggedEl.getAttribute(\"data-color\"),\r\n//       start: eventInfo.date,\r\n//       end: eventInfo.date,\r\n//       custom: eventInfo.draggedEl.getAttribute(\"data-custom\")\r\n//     };\r\n\r\n//     setSelectedEvent(null);\r\n\r\n//     setState((state) => ({\r\n//       ...state,\r\n//       calendarEvents: state.calendarEvents.concat(newEvent)\r\n//     }));\r\n//   };\r\n// //   const handleExternalEventClick = (event) => {\r\n// //     const eventId = event.currentTarget.getAttribute(\"data-id\");\r\n// //     const eventTitle = event.currentTarget.getAttribute(\"title\");\r\n// //     const eventColor = event.currentTarget.getAttribute(\"data-color\");\r\n// //     const eventCustom = event.currentTarget.getAttribute(\"data-custom\");\r\n\r\n// //     if (selectedEvent && selectedEvent.id === eventId) {\r\n// //       // Uncheck the selected event\r\n// //       setSelectedEvent(null);\r\n// //       setAssignedDates([]);\r\n// //     } else {\r\n// //       // Check a new event\r\n// //       setSelectedEvent({\r\n// //         id: eventId,\r\n// //         title: eventTitle,\r\n// //         color: eventColor,\r\n// //         custom: eventCustom\r\n// //       });\r\n// //       setAssignedDates(\r\n// //         state.calendarEvents\r\n// //           .filter((event) => event.title === eventTitle)\r\n// //           .map((event) => event.start)\r\n// //       );\r\n// //     }\r\n// //   };\r\n\r\n//   const handleExternalEventClick = (event) => {\r\n//     const eventId = event.currentTarget.getAttribute(\"data-id\");\r\n//     const eventTitle = event.currentTarget.getAttribute(\"title\");\r\n//     const eventColor = event.currentTarget.getAttribute(\"data-color\");\r\n//     const eventCustom = event.currentTarget.getAttribute(\"data-custom\");\r\n\r\n//     if (selectedEvent && selectedEvent.id === eventId && selectedDate) {\r\n//       // Uncheck the selected event and clear the selected date\r\n//       setSelectedEvent(null);\r\n//       setSelectedDate(null);\r\n//     } else {\r\n//       // Check a new event and set the selected date to the current date\r\n//       setSelectedEvent({\r\n//         id: eventId,\r\n//         title: eventTitle,\r\n//         color: eventColor,\r\n//         custom: eventCustom\r\n//       });\r\n//       setSelectedDate(new Date());\r\n//     }\r\n//   };\r\n\r\n//   const handleDateSelect = (selectInfo) => {\r\n//     setSelectedDate(selectInfo.startStr);\r\n//   };\r\n//   // Define handleEventRadioChange function\r\n// const handleEventRadioChange = (selectedEvent, selectedDate) => {\r\n//     if (selectedEvent && selectedDate) {\r\n//       setState((prevState) => {\r\n//         // Check if the event is already assigned to the selected date\r\n//         const isEventAssigned = prevState.calendarEvents.some(\r\n//           (event) =>\r\n//             event.id === selectedEvent.id &&\r\n//             event.start.toDateString() === selectedDate.toDateString()\r\n//         );\r\n\r\n//         if (isEventAssigned) {\r\n//           // Remove the event from the selected date\r\n//           const updatedEvents = prevState.calendarEvents.filter(\r\n//             (event) =>\r\n//               event.id !== selectedEvent.id ||\r\n//               event.start.toDateString() !== selectedDate.toDateString()\r\n//           );\r\n\r\n//           return {\r\n//             ...prevState,\r\n//             calendarEvents: updatedEvents\r\n//           };\r\n//         } else {\r\n//           // Add the event to the selected date\r\n//           const newEvent = {\r\n//             id: selectedEvent.id,\r\n//             title: selectedEvent.title,\r\n//             color: selectedEvent.color,\r\n//             start: selectedDate,\r\n//             end: selectedDate,\r\n//             custom: selectedEvent.custom\r\n//           };\r\n\r\n//           return {\r\n//             ...prevState,\r\n//             calendarEvents: prevState.calendarEvents.concat(newEvent)\r\n//           };\r\n//         }\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   const renderEventContent = (eventInfo) => {\r\n//     return (\r\n//       <>\r\n//         <div>{eventInfo.timeText}</div>\r\n//         <div>\r\n//           <input\r\n//             type=\"radio\"\r\n//             checked={\r\n//               selectedEvent &&\r\n//               selectedEvent.id === eventInfo.event.extendedProps.id &&\r\n//               selectedDate &&\r\n//               selectedDate.toDateString() === eventInfo.event.start.toDateString()\r\n//             }\r\n//             onChange={() => handleEventRadioChange(eventInfo.event)}\r\n//           />\r\n//           {eventInfo.event.title}\r\n//         </div>\r\n//       </>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div style={{ float: \"left\", width: \"25%\" }}>\r\n//         <div style={{ margin: \"0 0 20px\" }}>\r\n//           <input\r\n//             type=\"submit\"\r\n//             name=\"name\"\r\n//             onClick={addEvent}\r\n//             value=\"add external event\"\r\n//           />\r\n//         </div>\r\n//         <div id=\"external-events\" style={{width:\"100%\"}}>\r\n//           {/* {state.externalEvents.map((event) => (\r\n//             <div\r\n//               className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\r\n//               title={event.title}\r\n//               data-id={event.id}\r\n//               data-color={event.color}\r\n//               data-custom={event.custom}\r\n//               key={event.id}\r\n//               style={{\r\n//                 backgroundColor: event.color,\r\n//                 borderColor: event.color,\r\n//                 cursor: \"pointer\"\r\n//               }}\r\n//             >\r\n//               <div className=\"fc-event-main\" >\r\n//                 <div>\r\n//                   <strong>{event.title}</strong>\r\n//                 </div>\r\n//                 {event.custom}\r\n//               </div>\r\n//             </div>\r\n//           ))} */}\r\n//    {/* {state.externalEvents.map((event) => (\r\n//   <div\r\n//     className={`fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2 ${\r\n//       selectedEvent && selectedEvent.id === event.id ? \"selected\" : \"\"\r\n//     }`}\r\n//     title={event.title}\r\n//     data-id={event.id}\r\n//     data-color={event.color}\r\n//     data-custom={event.custom}\r\n//     key={event.id}\r\n//     onClick={handleExternalEventClick}\r\n//     style={{\r\n//       backgroundColor: event.color,\r\n//       borderColor: event.color,\r\n//       cursor: \"pointer\"\r\n//     }}\r\n//   >\r\n//     <div className=\"fc-event-main\">\r\n//       <div>\r\n//         <strong>{event.title}</strong>\r\n//       </div>\r\n//       {event.custom}\r\n//     </div>\r\n//     {selectedEvent && selectedEvent.id === event.id && (\r\n//       <div>\r\n//         {state.calendarEvents.some(\r\n//           (calendarEvent) =>\r\n//             calendarEvent.title === selectedEvent.title &&\r\n//             assignedDates.includes(calendarEvent.start)\r\n//         ) ? (\r\n//           <span>Assigned</span>\r\n//         ) : (\r\n//           <input\r\n//             type=\"checkbox\"\r\n//             checked={assignedDates.length > 0}\r\n//             onChange={() => handleExternalEventClick(event)}\r\n//           />\r\n//         )}\r\n//       </div>\r\n//     )}\r\n//   </div>\r\n// ))} */}\r\n\r\n// {state.externalEvents.map((event) => (\r\n//   <div\r\n//     className={`fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2 ${\r\n//       selectedEvent && selectedEvent.id === event.id ? \"selected\" : \"\"\r\n//     }`}\r\n//     title={event.title}\r\n//     data-id={event.id}\r\n//     data-color={event.color}\r\n//     data-custom={event.custom}\r\n//     key={event.id}\r\n//     onClick={handleExternalEventClick}\r\n//     style={{\r\n//       backgroundColor: event.color,\r\n//       borderColor: event.color,\r\n//       cursor: \"pointer\"\r\n//     }}\r\n//   >\r\n//     <div className=\"fc-event-main\">\r\n//       <div>\r\n//         <strong>{event.title}</strong>\r\n//       </div>\r\n//       {event.custom}\r\n//     </div>\r\n//     {selectedEvent && selectedEvent.id === event.id && (\r\n//       <div>\r\n//         {state.calendarEvents.some(\r\n//           (calendarEvent) =>\r\n//             calendarEvent.title === selectedEvent.title &&\r\n//             calendarEvent.start.getDate() === selectedDate?.getDate()\r\n//         ) ? (\r\n//           <span>Assigned</span>\r\n//         ) : (\r\n//           <input\r\n//             type=\"checkbox\"\r\n//             checked={selectedDate && selectedDate.getDate() === new Date().getDate()}\r\n//             onChange={() => handleExternalEventClick(event)}\r\n//           />\r\n//         )}\r\n//       </div>\r\n//     )}\r\n//   </div>\r\n// ))}\r\n\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ float: \"left\", width: \"75%\" }}>\r\n//         {/* <FullCalendar\r\n//           plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n\r\n//         headerToolbar={false}\r\n//           initialView=\"dayGridMonth\"\r\n//           editable={true}\r\n//           selectable={true}\r\n//           selectMirror={true}\r\n//           dayMaxEvents={true}\r\n//           weekends={state.weekendsVisible}\r\n//           events={state.calendarEvents}\r\n//           droppable={true}\r\n//           eventReceive={handleEventReceive}\r\n//         /> */}\r\n\r\n// <FullCalendar\r\n//   plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n//   headerToolbar={{\r\n//     left: \"prev,next today\",\r\n//     center: \"title\",\r\n//     right: \"dayGridMonth,timeGridWeek,timeGridDay\"\r\n//   }}\r\n//   initialView=\"dayGridMonth\"\r\n//   editable={true}\r\n//   selectable={true}\r\n//   selectMirror={true}\r\n//   dayMaxEvents={true}\r\n//   weekends={state.weekendsVisible}\r\n//   events={state.calendarEvents}\r\n//   droppable={true}\r\n//   eventReceive={handleEventReceive}\r\n//   eventContent={renderEventContent} // Add this line\r\n// />\r\n\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import FullCalendar from \"@fullcalendar/react\";\r\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\r\n// import timeGridPlugin from \"@fullcalendar/timegrid\";\r\n// import interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\r\n\r\n// export default function CopyMonthSchedule() {\r\n//   // initial state\r\n//   const [state, setState] = useState({\r\n//     weekendsVisible: true,\r\n//     externalEvents: [\r\n//       { title: \"Art 1\", color: \"#0097a7\", id: 34432, custom: \"fdsfdsfds\" },\r\n//       { title: \"Art 2\", color: \"#f44336\", id: 323232 },\r\n//       { title: \"Art 3\", color: \"#f57f17\", id: 1111 },\r\n//       { title: \"Art 4\", color: \"#90a4ae\", id: 432432 }\r\n//     ],\r\n//     calendarEvents: []\r\n//   });\r\n\r\n//   // load external events\r\n//   useEffect(() => {\r\n//     let draggableEl = document.getElementById(\"external-events\");\r\n//     new Draggable(draggableEl, {\r\n//       itemSelector: \".fc-event\",\r\n//       eventData: function (eventEl) {\r\n//         let id = eventEl.dataset.id;\r\n//         let title = eventEl.getAttribute(\"title\");\r\n//         let color = eventEl.dataset.color;\r\n//         let custom = eventEl.dataset.custom;\r\n\r\n//         return {\r\n//           id: id,\r\n//           title: title,\r\n//           color: color,\r\n//           custom: custom,\r\n//           create: true\r\n//         };\r\n//       }\r\n//     });\r\n//   });\r\n\r\n//   // handle external event selection\r\n//   const handleExternalEventSelect = (event) => {\r\n//     setState((prevState) => {\r\n//       // Clear any previously selected events\r\n//       const calendarEvents = prevState.calendarEvents.map((event) => ({\r\n//         ...event,\r\n//         selected: false\r\n//       }));\r\n\r\n//       // Find the selected event\r\n//       const selectedEvent = calendarEvents.find(\r\n//         (ev) => ev.id === event.id && ev.selected\r\n//       );\r\n\r\n//       if (selectedEvent) {\r\n//         // Unselect the event if already selected\r\n//         selectedEvent.selected = false;\r\n//       } else {\r\n//         // Select the event\r\n//         event.selected = true;\r\n//       }\r\n\r\n//       return {\r\n//         ...prevState,\r\n//         calendarEvents: calendarEvents\r\n//       };\r\n//     });\r\n//   };\r\n\r\n//   // handle date click\r\n//   const handleDateClick = (arg) => {\r\n//     const selectedDate = arg.date;\r\n\r\n//     setState((prevState) => {\r\n//       const selectedEvent = prevState.calendarEvents.find(\r\n//         (event) => event.selected\r\n//       );\r\n\r\n//       if (selectedEvent) {\r\n//         // Add the selected event to the selected date\r\n//         const newEvent = {\r\n//           id: selectedEvent.id,\r\n//           title: selectedEvent.title,\r\n//           color: selectedEvent.color,\r\n//           start: selectedDate,\r\n//           end: selectedDate,\r\n//           custom: selectedEvent.custom\r\n//         };\r\n\r\n//         return {\r\n//           ...prevState,\r\n//           calendarEvents: prevState.calendarEvents.concat(newEvent)\r\n//         };\r\n//       }\r\n\r\n//       return prevState;\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div style={{ float: \"left\", width: \"25%\" }}>\r\n//         <div id=\"external-events\" style={{ width: \"100%\" }}>\r\n//           {state.externalEvents.map((event) => (\r\n//             <div\r\n//               className={`fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2${\r\n//                 event.selected ? \" selected\" : \"\"\r\n//               }`}\r\n//               title={event.title}\r\n//               data-id={event.id}\r\n//               data-color={event.color}\r\n//               data-custom={event.custom}\r\n//               key={event.id}\r\n//               onClick={() => handleExternalEventSelect(event)}\r\n//               style={{\r\n//                 backgroundColor: event.color,\r\n//                 borderColor: event.color,\r\n//                 cursor: \"pointer\"\r\n//               }}\r\n//             >\r\n//               <div className=\"fc-event-main\">\r\n//                 <div>\r\n//                   <strong>{event.title}</strong>\r\n//                 </div>\r\n//                 {event.custom}\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ float: \"left\", width: \"75%\" }}>\r\n//         <FullCalendar\r\n//           plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n//           headerToolbar={false}\r\n//           initialView=\"dayGridMonth\"\r\n//           editable={true}\r\n//           selectable={true}\r\n//           selectMirror={true}\r\n//           dayMaxEvents={true}\r\n//           weekends={state.weekendsVisible}\r\n//           events={state.calendarEvents}\r\n//           dateClick={handleDateClick}\r\n//           eventRender={({ event, el }) => {\r\n//             // Add radio button to each date\r\n//             const inputEl = document.createElement(\"input\");\r\n//             inputEl.type = \"radio\";\r\n//             inputEl.addEventListener(\"change\", () =>\r\n//               handleExternalEventSelect(event)\r\n//             );\r\n\r\n//             el.prepend(inputEl);\r\n//           }}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// -----------------------------------\r\n\r\n// import React, { useState } from \"react\";\r\n// import FullCalendar from \"@fullcalendar/react\";\r\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\r\n\r\n// export default function CalendarWithRadioButtons() {\r\n//   const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n//   const handleDateClick = (dateClickInfo) => {\r\n//     setSelectedDate(dateClickInfo.date);\r\n//   };\r\n\r\n//   const renderDateCell = (dateInfo) => {\r\n//     const isSelected = selectedDate && dateInfo.date.valueOf() === selectedDate.valueOf();\r\n\r\n//     return (\r\n//       <div>\r\n//         <input\r\n//           type=\"radio\"\r\n//           checked={isSelected}\r\n//           onChange={() => setSelectedDate(dateInfo.date)}\r\n//         />\r\n//         {dateInfo.dayNumberText}\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"calendar\">\r\n//       <FullCalendar\r\n//         plugins={[dayGridPlugin]}\r\n//         initialView=\"dayGridMonth\"\r\n//         selectable={true}\r\n//         dateClick={handleDateClick}\r\n//         dayCellContent={renderDateCell}\r\n//       />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// -----------------------------------\r\n\r\n//******************************* */\r\nimport React, { useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\nexport default function CalendarWithEventList() {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [events, setEvents] = useState([\r\n    { id: 1, title: \"Event 1\", start: \"2023-05-01\", end: \"2023-05-02\" },\r\n    { id: 2, title: \"Event 2\", start: \"2023-05-03\", end: \"2023-05-04\" },\r\n    { id: 3, title: \"Event 3\", start: \"2023-05-05\", end: \"2023-05-06\" },\r\n    { id: 4, title: \"Event 4\", start: \"2023-05-07\", end: \"2023-05-08\" },\r\n  ]);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  console.log(selectedEvent, \"lllllllloooooo\");\r\n  const [selectedCheckboxes, setSelectedCheckboxes] = useState({});\r\n\r\n  const renderDateCell = (dateInfo) => {\r\n    const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\r\n    const isSelected = selectedDateValue === dateInfo.date.valueOf();\r\n    const isEventSelected = selectedEvent;\r\n\r\n    if (isEventSelected) {\r\n      const checkboxKey = dateInfo.date.toISOString();\r\n      const hasEvent = events.some(\r\n        (event) => event.start.valueOf() === dateInfo.date.valueOf()\r\n      );\r\n\r\n      return (\r\n        <div>\r\n          <input\r\n            name={`checkbox-${checkboxKey}`}\r\n            type=\"checkbox\"\r\n            checked={isSelected || selectedCheckboxes[checkboxKey]}\r\n            onChange={() => handleDateCellChange(dateInfo)}\r\n          />\r\n          {dateInfo.dayNumberText}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return dateInfo.dayNumberText;\r\n  };\r\n\r\n  // const handleDateCellChange = (dateInfo) => {\r\n  //   if (selectedEvent) {\r\n  //     const checkboxKey = dateInfo.date.toISOString();\r\n  //     const selectedDateValue = dateInfo.date.valueOf();\r\n  //     const filteredEvents = events.filter(\r\n  //       (event) => event.start.valueOf() !== selectedDateValue\r\n  //     );\r\n\r\n  //     const hasEvent = filteredEvents.some(\r\n  //       (event) => event.start.valueOf() === selectedDateValue\r\n  //     );\r\n\r\n  //     if (hasEvent) {\r\n  //       setSelectedEvent(null);\r\n  //       setSelectedDate(null);\r\n  //       setEvents(filteredEvents);\r\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n  //         const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n  //         delete updatedCheckboxes[checkboxKey];\r\n  //         return updatedCheckboxes;\r\n  //       });\r\n  //     } else {\r\n  //       setSelectedDate(dateInfo.date);\r\n\r\n  //       const event = {\r\n  //         title: selectedEvent.title,\r\n  //         start: dateInfo.date,\r\n  //       };\r\n\r\n  //       setEvents([...filteredEvents, event]);\r\n\r\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n  //         ...prevSelectedCheckboxes,\r\n  //         [checkboxKey]: true,\r\n  //       }));\r\n  //     }\r\n  //   } else {\r\n  //     setSelectedDate(dateInfo.date);\r\n  //   }\r\n  // };\r\n\r\n  // const handleDateCellChange = (dateInfo) => {\r\n  //   console.log(dateInfo, \"iiiiiiiiiii\");\r\n  //   const checkboxKey = dateInfo.date.toISOString();\r\n  //   const selectedDateValue = dateInfo.date.valueOf();\r\n  //   const filteredEvents = events.filter(\r\n  //     (event) => event.start.valueOf() !== selectedDateValue\r\n  //   );\r\n\r\n  //   const date = new Date(dateInfo.date);\r\n  //   const formattedDate = date.toLocaleDateString(\"en-GB\", {\r\n  //     year: \"numeric\",\r\n  //     month: \"2-digit\",\r\n  //     day: \"2-digit\",\r\n  //   });\r\n\r\n  //   const [day, month, year] = formattedDate.split(\"/\");\r\n  //   const desiredFormat = `${year}-${month}-${day}`;\r\n  //   // console.log(filteredEvents, \"cgvjhjghgk\");\r\n  //   let hasEvent = false;\r\n  //   console.log(dateInfo, \"arti\");\r\n  //   console.log(Object.keys(dateInfo), \"dj\");\r\n  //   // console.log(example, \"test\");\r\n  //   // if (dateInfo.event) {\r\n  //   //   hasEvent = filteredEvents.some((event) =>\r\n  //   //     console.log(event, \"ttttttttt\")\r\n  //   //   );\r\n  //   // }\r\n  //   console.log(events.id);\r\n\r\n  //   if (dateInfo.event && dateInfo.event.id === dateInfo.id) {\r\n  //     hasEvent = filteredEvents.some((ev) => ev.id === dateInfo.event.id);\r\n  //   }\r\n  //   // console.log(hasEvent, \"pppppp\");\r\n  //   if (hasEvent) {\r\n  //     setSelectedEvent(null);\r\n  //     setSelectedDate(null);\r\n  //     setEvents(filteredEvents);\r\n  //     setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n  //       const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n  //       delete updatedCheckboxes[checkboxKey];\r\n  //       return updatedCheckboxes;\r\n  //     });\r\n  //   } else {\r\n  //     setSelectedDate(dateInfo.date);\r\n\r\n  //     if (selectedEvent) {\r\n  //       // console.log(selectedEvent, \"pppppppp\");\r\n  //       dateInfo.kkk = selectedEvent;\r\n  //       // var example = dateInfo.kkk;\r\n  //       // console.log(dateInfo, \"eeeeeee\");\r\n  //       const event = {\r\n  //         title: selectedEvent.title,\r\n  //         start: dateInfo.date,\r\n  //       };\r\n\r\n  //       setEvents([...filteredEvents, event]);\r\n\r\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n  //         ...prevSelectedCheckboxes,\r\n  //         [checkboxKey]: true,\r\n  //       }));\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  function handleDateCellChange(dateInfo) {\r\n    console.log(dateInfo, \"handleDateCellChange top console\");\r\n    const checkboxKey = dateInfo.date.toISOString();\r\n    const selectedDateValue = dateInfo.date.valueOf();\r\n    if (selectedEvent !== null) {\r\n      let testObj = JSON.parse(JSON.stringify(dateInfo));\r\n      testObj.event = selectedEvent;\r\n      dateInfo.kkk = selectedEvent;\r\n      console.log(dateInfo, testObj, \"dateInfo -> testObj\");\r\n      console.log(dateInfo.kkk, testObj.event, \"dateInfo -> testObj\");\r\n\r\n      const event = {\r\n        title: selectedEvent.title,\r\n        start: dateInfo.date,\r\n      };\r\n    }\r\n    const filteredEvents = events.filter(\r\n      (event) => event.start.valueOf() !== selectedDateValue\r\n    );\r\n\r\n    const date = new Date(dateInfo.date);\r\n    const formattedDate = date.toLocaleDateString(\"en-GB\", {\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n    });\r\n\r\n    const [day, month, year] = formattedDate.split(\"/\");\r\n    const desiredFormat = `${year}-${month}-${day}`;\r\n\r\n    let hasEvent = false;\r\n    console.log(dateInfo, \"arti\");\r\n\r\n    if (dateInfo.event && dateInfo.event.id) {\r\n      hasEvent = filteredEvents.some((ev) => ev.id === dateInfo.event.id);\r\n    }\r\n\r\n    if (hasEvent) {\r\n      setSelectedEvent(null);\r\n      setSelectedDate(null);\r\n      setEvents(filteredEvents);\r\n      setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n        const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n        delete updatedCheckboxes[checkboxKey];\r\n        return updatedCheckboxes;\r\n      });\r\n    } else {\r\n      setSelectedDate(dateInfo.date);\r\n\r\n      if (\r\n        selectedEvent &&\r\n        dateInfo.event &&\r\n        selectedEvent.id === dateInfo.event.id\r\n      ) {\r\n        const eventToRemove = events.find(\r\n          (event) => event.id === selectedEvent.id\r\n        );\r\n        const updatedEvents = events.filter(\r\n          (event) => event.id !== selectedEvent.id\r\n        );\r\n        setSelectedEvent(null);\r\n        setSelectedDate(null);\r\n        setEvents(updatedEvents);\r\n        setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n          const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n          delete updatedCheckboxes[checkboxKey];\r\n          return updatedCheckboxes;\r\n        });\r\n      } else if (selectedEvent) {\r\n        const event = {\r\n          id: selectedEvent.id,\r\n          title: selectedEvent.title,\r\n          start: dateInfo.date,\r\n        };\r\n        setEvents([...filteredEvents, event]);\r\n\r\n        setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n          ...prevSelectedCheckboxes,\r\n          [checkboxKey]: true,\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  const getDatesBetween = (start, end) => {\r\n    const dates = [];\r\n    let currentDate = new Date(start);\r\n\r\n    while (currentDate <= end) {\r\n      dates.push(currentDate.toISOString().split(\"T\")[0]);\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n    }\r\n\r\n    return dates;\r\n  };\r\n\r\n  const addCheckboxesToDates = (event) => {\r\n    const allDates = getDatesBetween(event.start, event.end);\r\n\r\n    const calendarEl = document.querySelector(\".calendar-container\");\r\n    allDates.forEach((date) => {\r\n      const dateCell = calendarEl.querySelector(`[data-date=\"${date}\"]`);\r\n      dateCell.classList.add(\"selected-date\");\r\n    });\r\n  };\r\n\r\n  const handleEventClick = (event) => {\r\n    setSelectedEvent(event);\r\n    setSelectedDate(null); // Reset selected date\r\n    addCheckboxesToDates(event);\r\n  };\r\n\r\n  // const events = [\r\n  //   { id: 1, title: \"Event 1\", start: \"2023-05-01\", end: \"2023-05-02\" },\r\n  //   { id: 2, title: \"Event 2\", start: \"2023-05-03\", end: \"2023-05-04\" },\r\n  //   { id: 3, title: \"Event 3\", start: \"2023-05-05\", end: \"2023-05-06\" },\r\n  //   { id: 4, title: \"Event 4\", start: \"2023-05-07\", end: \"2023-05-08\" },\r\n  // ];\r\n  return (\r\n    <div className=\"containe\">\r\n      <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\r\n        <h2>Event List</h2>\r\n        <ul>\r\n          {events.map((event) => (\r\n            <li\r\n              key={event.id}\r\n              onClick={() => handleEventClick(event)}\r\n              style={{\r\n                cursor: \"pointer\",\r\n                fontWeight:\r\n                  selectedEvent && selectedEvent.id === event.id\r\n                    ? \"bold\"\r\n                    : \"normal\",\r\n              }}\r\n            >\r\n              {event.title}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\r\n        <FullCalendar\r\n          plugins={[dayGridPlugin, interactionPlugin]}\r\n          initialView=\"dayGridMonth\"\r\n          selectable={true}\r\n          events={events}\r\n          dayCellContent={renderDateCell}\r\n          eventContent={(info) => {\r\n            return (\r\n              <div>\r\n                <div>{info.event.title}</div>\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//*********************************** */\r\n\r\n// import React, { useState } from \"react\";\r\n// import FullCalendar from \"@fullcalendar/react\";\r\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\r\n// import interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\n// export default function CalendarWithEventList() {\r\n//   const [selectedDate, setSelectedDate] = useState(null);\r\n//   const [events, setEvents] = useState([]);\r\n//   const [selectedEvent, setSelectedEvent] = useState(null);\r\n//   const [selectedRadio, setSelectedRadio] = useState({});\r\n\r\n//   const handleDateCellChange = (dateInfo) => {\r\n//     if (selectedEvent) {\r\n//       const selectedDateValue = dateInfo.date.valueOf();\r\n//       const filteredEvents = events.filter(\r\n//         (event) => event.start.valueOf() !== selectedDateValue\r\n//       );\r\n\r\n//       const hasEvent = filteredEvents.some(\r\n//         (event) => event.start.valueOf() === selectedDateValue\r\n//       );\r\n\r\n//       if (hasEvent) {\r\n//         setSelectedEvent(null);\r\n//         setSelectedDate(null);\r\n//         setEvents(filteredEvents);\r\n//         setSelectedRadio({}); // Clear the selected radio state for the date\r\n//       } else {\r\n//         setSelectedDate(dateInfo.date);\r\n\r\n//         const event = {\r\n//           title: selectedEvent.title,\r\n//           start: dateInfo.date,\r\n//         };\r\n\r\n//         setEvents([...filteredEvents, event]);\r\n//         setSelectedRadio((prevSelectedRadio) => ({\r\n//           ...prevSelectedRadio,\r\n//           [dateInfo.date.toISOString()]: true, // Set the selected radio state for the date\r\n//         }));\r\n//       }\r\n//     } else {\r\n//       setSelectedDate(dateInfo.date);\r\n//       setSelectedRadio((prevSelectedRadio) => ({\r\n//         ...prevSelectedRadio,\r\n//         [dateInfo.date.toISOString()]: true, // Set the selected radio state for the date\r\n//       }));\r\n//     }\r\n//   };\r\n\r\n//   const renderDateCell = (dateInfo) => {\r\n//     const isSelected = selectedDate\r\n//       ? selectedDate.valueOf() === dateInfo.date.valueOf()\r\n//       : false;\r\n//     const isEventSelected = selectedEvent;\r\n//     const radioKey = dateInfo.date.toISOString();\r\n\r\n//     if (isEventSelected) {\r\n//       const radioButtonName = `radio-${radioKey}`;\r\n//       const hasEvent = events.some(\r\n//         (event) => event.start.valueOf() === dateInfo.date.valueOf()\r\n//       );\r\n\r\n//       return (\r\n//         <div>\r\n//           <input\r\n//             name={radioButtonName}\r\n//             type=\"radio\"\r\n//             checked={isSelected && selectedRadio[radioKey]}\r\n//             onChange={() => handleDateCellChange(dateInfo)}\r\n//           />\r\n//           {dateInfo.dayNumberText}\r\n//         </div>\r\n//       );\r\n//     }\r\n\r\n//     return dateInfo.dayNumberText;\r\n//   };\r\n\r\n//   const getDatesBetween = (start, end) => {\r\n//     const dates = [];\r\n//     let currentDate = new Date(start);\r\n\r\n//     while (currentDate <= end) {\r\n//       dates.push(currentDate.toISOString().split(\"T\")[0]);\r\n//       currentDate.setDate(currentDate.getDate() + 1);\r\n//     }\r\n\r\n//     return dates;\r\n//   };\r\n\r\n//   const addRadioButtonsToDates = (event) => {\r\n//     const allDates = getDatesBetween(event.start, event.end);\r\n\r\n//     const calendarEl = document.querySelector(\".calendar-container\");\r\n//     allDates.forEach((date) => {\r\n//       const dateCell = calendarEl.querySelector(`[data-date=\"${date}\"]`);\r\n//       dateCell.classList.add(\"selected-date\");\r\n//     });\r\n//   };\r\n\r\n//   const handleEventClick = (event) => {\r\n//     setSelectedEvent(event);\r\n//     setSelectedDate(null); // Reset selected date\r\n//     addRadioButtonsToDates(event);\r\n//   };\r\n\r\n//   const eventsa = [\r\n//     { id: 1, title: \"Event 1\", start: \"2023-05-01\", end: \"2023-05-02\" },\r\n//     { id: 2, title: \"Event 2\", start: \"2023-05-03\", end: \"2023-05-04\" },\r\n//     { id: 3, title: \"Event 3\", start: \"2023-05-05\", end: \"2023-05-06\" },\r\n//     { id: 4, title: \"Event 4\", start: \"2023-05-07\", end: \"2023-05-08\" },\r\n//   ];\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\r\n//         <h2>Event List</h2>\r\n//         <ul>\r\n//           {eventsa.map((event) => (\r\n//             <li\r\n//               key={event.id}\r\n//               onClick={() => handleEventClick(event)}\r\n//               style={{\r\n//                 cursor: \"pointer\",\r\n//                 fontWeight:\r\n//                   selectedEvent && selectedEvent.id === event.id\r\n//                     ? \"bold\"\r\n//                     : \"normal\",\r\n//               }}\r\n//             >\r\n//               {event.title}\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//       <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\r\n//         <FullCalendar\r\n//           plugins={[dayGridPlugin, interactionPlugin]}\r\n//           initialView=\"dayGridMonth\"\r\n//           selectable={true}\r\n//           events={events}\r\n//           dayCellContent={renderDateCell}\r\n//           eventContent={(info) => {\r\n//             return (\r\n//               <div>\r\n//                 <div>{info.event.title}</div>\r\n//               </div>\r\n//             );\r\n//           }}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// second month\r\n\r\n// import React, { useState } from \"react\";\r\n// import FullCalendar from \"@fullcalendar/react\";\r\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\r\n// import interactionPlugin from \"@fullcalendar/interaction\";\r\n\r\n// export default function SecondMonth() {\r\n//     const [selectedDate, setSelectedDate] = useState(null);\r\n//     const [events, setEvents] = useState([\r\n//         { id: 1, title: \"Event 1\", start: \"2023-05-01\", end: \"2023-05-02\" },\r\n//         { id: 2, title: \"Event 2\", start: \"2023-05-03\", end: \"2023-05-04\" },\r\n//         { id: 3, title: \"Event 3\", start: \"2023-05-05\", end: \"2023-05-06\" },\r\n//         { id: 4, title: \"Event 4\", start: \"2023-05-07\", end: \"2023-05-08\" },\r\n//     ]);\r\n//     const [selectedEvent, setSelectedEvent] = useState(null);\r\n//     console.log(selectedEvent, \"lllllllloooooo\");\r\n//     const [selectedCheckboxes, setSelectedCheckboxes] = useState({});\r\n\r\n//     function handleDateCellChange(dateInfo) {\r\n//         console.log(dateInfo, \"oooooo\")\r\n//         console.log(dateInfo, \"handleDateCellChange top console\");\r\n//         const checkboxKey = dateInfo.date.toISOString();\r\n//         const selectedDateValue = dateInfo.date.valueOf();\r\n//         const isChecked = selectedCheckboxes[checkboxKey];\r\n\r\n//         if (isChecked) {\r\n//             // Unselecting the checkbox\r\n//             setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n//                 const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n//                 delete updatedCheckboxes[checkboxKey];\r\n//                 return updatedCheckboxes;\r\n//             });\r\n\r\n//             const filteredEvents = events.filter(\r\n//                 (event) => event.start.valueOf() !== selectedDateValue\r\n//             );\r\n\r\n//             setSelectedEvent(null);\r\n//             setSelectedDate(null);\r\n//             setEvents(filteredEvents);\r\n//         } else {\r\n//             // Selecting the checkbox\r\n//             setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n//                 ...prevSelectedCheckboxes,\r\n//                 [checkboxKey]: true,\r\n//             }));\r\n\r\n//             const event = {\r\n//                 id: selectedEvent.id,\r\n//                 title: selectedEvent.title,\r\n//                 start: dateInfo.date,\r\n//             };\r\n//             setEvents((prevEvents) => [...prevEvents, event]);\r\n//         }\r\n//     }\r\n\r\n//     // function handleDateCellChange(dateInfo) {\r\n//     //     console.log(dateInfo, \"handleDateCellChange top console\");\r\n//     //     const checkboxKey = dateInfo.date.toISOString();\r\n//     //     const isChecked = selectedCheckboxes[checkboxKey];\r\n\r\n//     //     if (isChecked) {\r\n//     //         // Unselecting the checkbox\r\n//     //         setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n//     //             const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n//     //             delete updatedCheckboxes[checkboxKey];\r\n//     //             return updatedCheckboxes;\r\n//     //         });\r\n\r\n//     //         const eventToRemove = events.find(\r\n//     //             (event) => event.start.valueOf() === dateInfo.date.valueOf()\r\n//     //         );\r\n\r\n//     //         if (eventToRemove) {\r\n//     //             const updatedEvents = events.filter(\r\n//     //                 (event) => event.id !== eventToRemove.id\r\n//     //             );\r\n//     //             setEvents(updatedEvents);\r\n//     //         }\r\n//     //     } else {\r\n//     //         // Selecting the checkbox\r\n//     //         setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n//     //             ...prevSelectedCheckboxes,\r\n//     //             [checkboxKey]: true,\r\n//     //         }));\r\n\r\n//     //         const event = {\r\n//     //             id: selectedEvent.id,\r\n//     //             title: selectedEvent.title,\r\n//     //             start: dateInfo.date,\r\n//     //         };\r\n\r\n//     //         setEvents((prevEvents) => [...prevEvents, event]);\r\n//     //     }\r\n//     // }\r\n\r\n//     const renderDateCell = (dateInfo) => {\r\n//         console.log(dateInfo, \"ppppp\")\r\n//         const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\r\n//         const isSelected = selectedDateValue === dateInfo.date.valueOf();\r\n//         const isEventSelected = selectedEvent;\r\n\r\n//         if (isEventSelected) {\r\n//             const checkboxKey = dateInfo.date.toISOString();\r\n\r\n//             return (\r\n//                 <div>\r\n//                     <input\r\n//                         name={`checkbox-${checkboxKey}`}\r\n//                         type=\"checkbox\"\r\n//                         checked={isSelected || selectedCheckboxes[checkboxKey]}\r\n//                         onChange={() => handleDateCellChange(dateInfo)}\r\n//                     />\r\n//                     {dateInfo.dayNumberText}\r\n//                 </div>\r\n//             );\r\n//         }\r\n\r\n//         return dateInfo.dayNumberText;\r\n//     };\r\n\r\n//     // function handleDateCellChange(dateInfo) {\r\n//     //     console.log(dateInfo, \"handleDateCellChange top console\");\r\n//     //     const checkboxKey = dateInfo.date.toISOString();\r\n//     //     const selectedDateValue = dateInfo.date.valueOf();\r\n//     //     if (selectedEvent !== null) {\r\n//     //         let testObj = JSON.parse(JSON.stringify(dateInfo));\r\n//     //         testObj.event = selectedEvent;\r\n//     //         dateInfo.kkk = selectedEvent;\r\n//     //         console.log(dateInfo, testObj, \"dateInfo -> testObj\");\r\n//     //         console.log(dateInfo.kkk, testObj.event, \"dateInfo -> testObj\");\r\n\r\n//     //         const event = {\r\n//     //             title: selectedEvent.title,\r\n//     //             start: dateInfo.date,\r\n//     //         };\r\n//     //     }\r\n//     //     const filteredEvents = events.filter(\r\n//     //         (event) => event.start.valueOf() !== selectedDateValue\r\n//     //     );\r\n\r\n//     //     const date = new Date(dateInfo.date);\r\n//     //     const formattedDate = date.toLocaleDateString(\"en-GB\", {\r\n//     //         year: \"numeric\",\r\n//     //         month: \"2-digit\",\r\n//     //         day: \"2-digit\",\r\n//     //     });\r\n\r\n//     //     const [day, month, year] = formattedDate.split(\"/\");\r\n//     //     const desiredFormat = `${year}-${month}-${day}`;\r\n\r\n//     //     let hasEvent = false;\r\n//     //     console.log(dateInfo, \"arti\");\r\n\r\n//     //     if (dateInfo.event && dateInfo.event.id) {\r\n//     //         hasEvent = filteredEvents.some((ev) => ev.id === dateInfo.event.id);\r\n//     //     }\r\n\r\n//     //     if (hasEvent) {\r\n//     //         setSelectedEvent(null);\r\n//     //         setSelectedDate(null);\r\n//     //         setEvents(filteredEvents);\r\n//     //         setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n//     //             const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n//     //             delete updatedCheckboxes[checkboxKey];\r\n//     //             return updatedCheckboxes;\r\n//     //         });\r\n//     //     } else {\r\n//     //         setSelectedDate(dateInfo.date);\r\n\r\n//     //         if (\r\n//     //             selectedEvent &&\r\n//     //             dateInfo.event &&\r\n//     //             selectedEvent.id === dateInfo.event.id\r\n//     //         ) {\r\n//     //             const eventToRemove = events.find(\r\n//     //                 (event) => event.id === selectedEvent.id\r\n//     //             );\r\n//     //             const updatedEvents = events.filter(\r\n//     //                 (event) => event.id !== selectedEvent.id\r\n//     //             );\r\n//     //             setSelectedEvent(null);\r\n//     //             setSelectedDate(null);\r\n//     //             setEvents(updatedEvents);\r\n//     //             setSelectedCheckboxes((prevSelectedCheckboxes) => {\r\n//     //                 const updatedCheckboxes = { ...prevSelectedCheckboxes };\r\n//     //                 delete updatedCheckboxes[checkboxKey];\r\n//     //                 return updatedCheckboxes;\r\n//     //             });\r\n//     //         } else if (selectedEvent) {\r\n//     //             const event = {\r\n//     //                 id: selectedEvent.id,\r\n//     //                 title: selectedEvent.title,\r\n//     //                 start: dateInfo.date,\r\n//     //             };\r\n//     //             setEvents([...filteredEvents, event]);\r\n\r\n//     //             setSelectedCheckboxes((prevSelectedCheckboxes) => ({\r\n//     //                 ...prevSelectedCheckboxes,\r\n//     //                 [checkboxKey]: true,\r\n//     //             }));\r\n//     //         }\r\n//     //     }\r\n//     // }\r\n\r\n//     // const getDatesBetween = (start, end) => {\r\n//     //     const dates = [];\r\n//     //     let currentDate = new Date(start);\r\n\r\n//     //     while (currentDate <= end) {\r\n//     //         dates.push(currentDate.toISOString().split(\"T\")[0]);\r\n//     //         currentDate.setDate(currentDate.getDate() + 1);\r\n//     //     }\r\n\r\n//     //     return dates;\r\n//     // };\r\n\r\n//     // const addCheckboxesToDates = (event) => {\r\n//     //     const allDates = getDatesBetween(event.start, event.end);\r\n\r\n//     //     const calendarEl = document.querySelector(\".calendar-container\");\r\n//     //     allDates.forEach((date) => {\r\n//     //         const dateCell = calendarEl.querySelector(`[data-date=\"${date}\"]`);\r\n//     //         dateCell.classList.add(\"selected-date\");\r\n//     //     });\r\n//     // };\r\n\r\n//     const handleEventClick = (event) => {\r\n//         setSelectedEvent(event);\r\n//         setSelectedDate(null); // Reset selected date\r\n//         // addCheckboxesToDates(event);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"containe\">\r\n//             <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\r\n//                 <h2>Event List</h2>\r\n//                 <ul>\r\n//                     {events.map((event, i) => (\r\n//                         <li\r\n//                             key={i}\r\n//                             onClick={() => handleEventClick(event)}\r\n//                             style={{\r\n//                                 cursor: \"pointer\",\r\n//                                 fontWeight:\r\n//                                     selectedEvent && selectedEvent.id === event.id\r\n//                                         ? \"bold\"\r\n//                                         : \"normal\",\r\n//                             }}\r\n//                         >\r\n//                             {event.title}\r\n//                         </li>\r\n//                     ))}\r\n//                 </ul>\r\n//             </div>\r\n//             <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\r\n//                 <FullCalendar\r\n//                     plugins={[dayGridPlugin, interactionPlugin]}\r\n//                     initialView=\"dayGridMonth\"\r\n//                     selectable={true}\r\n//                     events={events}\r\n//                     dayCellContent={renderDateCell}\r\n//                     eventContent={(info) => {\r\n//                         return (\r\n//                             <div>\r\n//                                 <div>{info.event.title}</div>\r\n//                             </div>\r\n//                         );\r\n//                     }}\r\n//                 />\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\MonthSchedule.jsx",["740","741","742","743","744","745","746"],"\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { createPlugin } from \"@fullcalendar/core\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\r\n\r\nconst MyCustomPlugin = createPlugin({\r\n  ...timeGridPlugin,\r\n  ...interactionPlugin,\r\n  // other plugin options\r\n});\r\n\r\nexport default function MonthSchedule() {\r\n  // initial state\r\n\r\n  const [state, setState] = useState({\r\n    weekendsVisible: true,\r\n    externalEvents: [\r\n      {\r\n        title: \"Art 1\",\r\n        color: \"#0097a7\",\r\n        id: 34432,\r\n        custom: defaultComparisonIcon,\r\n      },\r\n      {\r\n        title: \"Art 2\",\r\n        color: \"#f44336\",\r\n        id: 323232,\r\n\r\n        custom: defaultComparisonIcon,\r\n      },\r\n      {\r\n        title: \"Art 3\",\r\n        color: \"#f57f17\",\r\n        id: 1111,\r\n\r\n        custom: defaultComparisonIcon,\r\n      },\r\n      {\r\n        title: \"Art 4\",\r\n        color: \"#90a4ae\",\r\n        id: 432432,\r\n\r\n        custom: defaultComparisonIcon,\r\n      },\r\n    ],\r\n    // calendarEvents: [\r\n    //     {\r\n    //         id: 1,\r\n    //         title: \"All-day event\",\r\n    //         color: \"#388e3c\",\r\n    //         start: \"2020-12-12\",\r\n    //         end: \"2020-12-12\",\r\n    //         custom: \"questo è un campo custom\"\r\n    //     },\r\n    //     {\r\n    //         id: 2,\r\n    //         title: \"Timed event\",\r\n    //         color: \"#0097a7\",\r\n    //         start: \"2020-12-07\",\r\n    //         end: \"2020-12-10\",\r\n    //         custom: \"custom stuff\"\r\n    //     }\r\n    // ].map((event) => ({\r\n    //     ...event,\r\n    //     showDeleteButton: true,\r\n    //     extendedProps: {\r\n    //         ...event.extendedProps,\r\n    //         imageUrl: defaultComparisonIcon, // Add the image URL here\r\n    //     },\r\n    // }))\r\n  });\r\n\r\n  // load external events\r\n  useEffect(() => {\r\n    let draggableEl = document.getElementById(\"external-events\");\r\n    new Draggable(draggableEl, {\r\n      itemSelector: \".fc-event\",\r\n      eventData: function (eventEl) {\r\n        let id = eventEl.dataset.id;\r\n        let title = eventEl.getAttribute(\"title\");\r\n        let color = \"#FFE494\";\r\n\r\n        return {\r\n          id: id,\r\n          title: title,\r\n          color: color,\r\n          create: true,\r\n        };\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  // handle event receive\r\n  const handleEventReceive = (eventInfo) => {\r\n    const newEvent = {\r\n      id: eventInfo.draggedEl.getAttribute(\"data-id\"),\r\n      title: eventInfo.draggedEl.getAttribute(\"title\"),\r\n      color: eventInfo.draggedEl.getAttribute(\"data-color\"),\r\n      start: eventInfo.date,\r\n      end: eventInfo.date,\r\n      showDeleteButton: true,\r\n    };\r\n\r\n    // setState((prevState) => ({\r\n    //     ...prevState,\r\n    //     calendarEvents: prevState.calendarEvents.concat(newEvent)\r\n    // }));\r\n  };\r\n\r\n  // handle deletion of an event\r\n\r\n  const handleEventClick = (info) => {\r\n    console.log(info, \"sssss\");\r\n    info.event.remove();\r\n  };\r\n\r\n  function renderEventContent(eventInfo) {\r\n    console.log(eventInfo, \"eventInfo inside renderEventContent\");\r\n    const { event } = eventInfo;\r\n    const { title, timeText } = event;\r\n    console.log(eventInfo.timeText, \"ooooo\");\r\n    return (\r\n      <>\r\n        <div\r\n        //   style={{\r\n        //     display: \"flex\",\r\n        //     flexDirection: \"row\",\r\n        //     alignItems: \"center\",\r\n        //     justifyContent: \"space-evenly\",\r\n        //     height: \"-webkit-fill-available\",\r\n        //   }}\r\n        >\r\n       \r\n          <p className=\"m-0 fullcalender-title\">{title}</p>\r\n          {/* <p className=\"m-0 fullcalender-time\">{eventInfo.timeText}</p> */}\r\n\r\n          {/* <h5 className=\"m-0\" onClick={() => handleEventClick(eventInfo)}>\r\n            de\r\n          </h5> */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n \r\n  return (\r\n    <div className=\"App\">\r\n      <div style={{ float: \"left\", width: \"25%\" }}>\r\n        <div id=\"external-events\">\r\n          {state.externalEvents.map((event) => (\r\n            <div\r\n              className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\r\n              title={event.title}\r\n              data-id={event.id}\r\n              data-color={event.color}\r\n            \r\n              key={event.id}\r\n              style={{\r\n                backgroundColor: event.color,\r\n                borderColor: event.color,\r\n                cursor: \"pointer\"\r\n              }}\r\n            >\r\n              <div className=\"fc-event-main\">\r\n                <div>\r\n                  <strong>{event.title}</strong>\r\n                </div>\r\n                <img src={event.custom} />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div style={{ float: \"left\", width: \"75%\" }}>\r\n        <FullCalendar\r\n            id=\"fullCalendar-table\"\r\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n          // headerToolbar={{\r\n          //     left: \"\",\r\n          //     center: \"\",\r\n          //     right: \"\"\r\n          // }}\r\n          headerToolbar={false}\r\n          initialView=\"dayGridMonth\"\r\n        //   slotDuration=\"00:10:00\"\r\n        //   slotLabelInterval={{ hours: 1 }}\r\n          allDaySlot={false}\r\n          editable={true}\r\n          selectable={false}\r\n          selectMirror={true}\r\n          dayMaxEvents={false}\r\n          weekends={state.weekendsVisible}\r\n          // events={state.calendarEvents}\r\n          droppable={true}\r\n          eventReceive={handleEventReceive}\r\n          slotEventOverlap={false}\r\n          eventOverlap={false}\r\n          // select={handleSelect}\r\n          // eventClick={handleEventClick}\r\n          // eventRender={handleEventRender}\r\n          eventContent={renderEventContent}\r\n         \r\n        ></FullCalendar>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\viewSchedule.jsx",["747","748","749","750","751","752","753","754","755"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\screen\\details.jsx",["756","757","758","759","760","761","762","763"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Composition\\CreateComposition.jsx",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\reports\\reportsList.jsx",["764","765","766","767","768","769"],"import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getReports } from \"../../../utils/api\";\r\nimport { Button, Table, Dropdown } from \"react-bootstrap\";\r\nimport GenerateReportModal from \"../../modals/generateReportModal\";\r\nimport Uptime from './Uptime';\r\nimport Media from './Media';\r\nimport Audit from './Audit';\r\n\r\nexport default function ReportsList() {\r\n  const history = useHistory();\r\n  const [dropValue, setDropValue] = useState(\"Select\");\r\n  const [showGenerateModal, setShowGenerateModal] = useState(false);\r\n\r\n  let params = new URLSearchParams(history.location.search);\r\n  let startDate = params.get(\"startDate\");\r\n  let endDate = params.get(\"endDate\");\r\n  let type = params.get(\"type\");\r\n  let reportSlug = params.get(\"report\");\r\n  const [reportData, setReportData] = useState([]);\r\n  const handleDropDown = (e, data) => {\r\n    e.preventDefault();\r\n    setDropValue(data);\r\n  };\r\n  useEffect(() => {\r\n    console.log(startDate, endDate, \"semnd api\");\r\n    getReports(startDate, endDate, reportSlug).then((res) => {\r\n      console.log(res, \"res schedule getReports\");\r\n      if (res.data.statusCode === 200) {\r\n        setReportData(res.data.data);\r\n        // history.push(`/reports-list/${res.data.data}`);\r\n        // <ReportsList data={res.data.data} />;\r\n      }\r\n    });\r\n  }, [startDate, endDate, reportSlug]);\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <div className=\"custom-content-heading d-flex align-items-center\">\r\n        <div>\r\n          <h1 className=\"mb-4\">{reportSlug}</h1>\r\n        </div>\r\n        <div className=\" ml-auto d-flex flex-wrap align-items-center\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle\r\n              variant=\"outline-primary\"\r\n              size=\"sm\"\r\n              className=\"mt-1 mb-2\"\r\n            >\r\n              {dropValue}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                onClick={(e) => {\r\n                  handleDropDown(e, \"Monthly\");\r\n                  setShowGenerateModal(true);\r\n                }}\r\n              >\r\n                Monthly\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={(e) => {\r\n                  handleDropDown(e, \"Daily\");\r\n                  setShowGenerateModal(true);\r\n                }}\r\n              >\r\n                Daily\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={(e) => {\r\n                  handleDropDown(e, \"Custom\");\r\n                  setShowGenerateModal(true);\r\n                }}\r\n              >\r\n                Custom\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n      </div>\r\n      {reportSlug && reportSlug == 'uptime-report' ? <Uptime reportData={reportData}/> : ''}\r\n      {reportSlug && reportSlug == 'media-report' ? <Media reportData={reportData}/> : ''}\r\n      {reportSlug && reportSlug == 'audit-logs' ? <Audit reportData={reportData}/> : ''}\r\n      \r\n      <GenerateReportModal\r\n        close={() => setShowGenerateModal(false)}\r\n        show={showGenerateModal}\r\n        reportType={reportSlug}\r\n        type={type}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Composition\\EditComposition.jsx",["770","771"],"import { useLocation } from \"react-router-dom\";\r\nimport useSWR from 'swr'\r\nimport CommonComposition from \"./Common\";\r\nimport { getCompositionById } from \"../../../../utils/api\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst EditComposition = () => {\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const id = queryParams.get('id');\r\n\r\n  // const { data: composition , mutate , error} = useSWR(id ? `/vendor/layouts/composition?compositionId=${id}` : null, fetcher);\r\n  const [composition,setComposition] = useState(null)\r\n  const layout = composition ? composition.layout : {};\r\n\r\n\r\n  // Example useEffect for triggering SWR mutate on route change\r\n  const getData = async ()=>{\r\n    const data  =await getCompositionById(`/vendor/layouts/composition?compositionId=${id}`)\r\n    setComposition(data)\r\n  }\r\n  useEffect(() => {\r\n    if(id){\r\n      getData()\r\n      \r\n    }\r\n  }, [id]);\r\n\r\n  return (<>{composition && <CommonComposition type=\"edit\" layout={layout} composition={composition}/>}</>)\r\n};\r\n\r\nexport default EditComposition;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Composition\\listComposition.jsx",["772","773","774","775"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\nav\\index.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\screen\\index.jsx",["776","777","778","779","780"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\utils\\UtilsService.js",["781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\integrations\\index.jsx",["876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\media\\index.jsx",["904","905","906","907","908","909","910","911"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\reports\\index.jsx",["912","913","914","915","916","917","918","919"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport scheduleIcon from \"../../../img/Vector.png\";\r\nimport computer from \"../../../img/computer.png\";\r\nimport logs from \"../../../img/logs.png\";\r\nimport GenerateReportModal from \"../../modals/generateReportModal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getReports } from \"../../../utils/api\";\r\nimport Uptime from \"./Uptime\";\r\nimport Media from \"./Media\";\r\nimport Audit from \"./Audit\";\r\nimport backicon from \"../../../img/backicon.png\";\r\nimport LockScreen from \"../../pages/LockScreen\";\r\n\r\nconst Reports = ({permission}) => {\r\n  const history = useHistory();\r\n  const [showGenerateModal, setShowGenerateModal] = useState(false);\r\n  const [reportType, setReportType] = useState(\"\");\r\n  const [filter, setFilter] = useState({});\r\n  const [reportData, setReportData] = useState([]);\r\n  const [dropValue, setDropValue] = useState(\"Filter\");\r\n  let params = new URLSearchParams(history.location.search);\r\n  let reportSlug = params.get(\"report\");\r\n\r\n  const handleClick = (e, type) => {\r\n    e.preventDefault();\r\n    if(permission && permission.permission.REPORTS.view){\r\n      history.push(`/reports?report=${type}`);\r\n    }\r\n  };\r\n\r\n  const handleDropDown = (e, data) => {\r\n    e.preventDefault();\r\n    setDropValue(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (reportSlug && reportSlug !== \"\" && Object.keys(filter).length == 0) {\r\n      setShowGenerateModal(true);\r\n    }\r\n    if (Object.keys(filter).length > 0 && reportSlug !== \"\") {\r\n      getReports(filter.startDate, filter.endDate, reportSlug).then((res) => {\r\n        if (res.data.statusCode === 200) {\r\n          setReportData(res.data.data);\r\n        }\r\n      });\r\n    }\r\n  }, [reportSlug, filter]);\r\n\r\n  useEffect(() => {\r\n    if(permission && permission.permission.REPORTS.view){\r\n      if (reportSlug && reportSlug == \"media-report\") {\r\n        setReportType(\"Media Report\");\r\n      }\r\n      if (reportSlug && reportSlug == \"uptime-report\") {\r\n        setReportType(\"Uptime Report\");\r\n      }\r\n      if (reportSlug && reportSlug == \"audit-logs\") {\r\n        setReportType(\"Audit Logs\");\r\n      }\r\n    }\r\n  }, [reportData]);\r\n\r\n  const redirectBack = (e) => {\r\n    e.preventDefault();\r\n    setReportData([]);\r\n    setFilter({});\r\n    setReportType(\"\");\r\n    history.push(\"/reports\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {reportSlug && reportSlug !== \"\" ? (\r\n        \"\"\r\n      ) : (\r\n        <>\r\n          <div className=\"custom-content-heading d-flex flex-wrap \">\r\n            <div>\r\n              <h1 className=\"mb-1\">Reports</h1>\r\n              <p className=\"three-layout-paragrapgh\">\r\n                Which report would you like to generate?\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <Row>\r\n            <Col\r\n              lg=\"4\"\r\n              md=\"4\"\r\n              sm=\"12\"\r\n              xs=\"12\"\r\n              onClick={(e) => {\r\n                handleClick(e, \"media-report\");\r\n              }}\r\n            >\r\n              <div className=\"push-column text-center\">\r\n                <div className=\"push-column-icon d-flex align-items-center justify-content-center\">\r\n                  <img\r\n                    className=\"layout-select-img\"\r\n                    src={scheduleIcon}\r\n                    alt=\"menu-icon\"\r\n                  />\r\n                </div>\r\n                <h6> Media Report</h6>\r\n                <p>Shows for how much time Media file is played</p>\r\n              </div>\r\n            </Col>\r\n            <Col\r\n              lg=\"4\"\r\n              md=\"4\"\r\n              sm=\"12\"\r\n              xs=\"12\"\r\n              onClick={(e) => {\r\n                handleClick(e, \"uptime-report\");\r\n              }}\r\n            >\r\n              <div className=\"push-column text-center\">\r\n                <div className=\"push-column-icon d-flex align-items-center justify-content-center\">\r\n                  <img\r\n                    className=\"layout-select-img\"\r\n                    src={computer}\r\n                    alt=\"menu-icon\"\r\n                  />\r\n                </div>\r\n                <h6>Uptime Report</h6>\r\n                <p>Shows for how much time screen was displaying content</p>\r\n              </div>\r\n            </Col>\r\n            <Col\r\n              lg=\"4\"\r\n              md=\"4\"\r\n              sm=\"12\"\r\n              xs=\"12\"\r\n              onClick={(e) => {\r\n                handleClick(e, \"audit-logs\");\r\n              }}\r\n            >\r\n              <div className=\"push-column text-center\">\r\n                <div className=\"push-column-icon d-flex align-items-center justify-content-center\">\r\n                  <img\r\n                    className=\"layout-select-img\"\r\n                    src={logs}\r\n                    alt=\"menu-icon\"\r\n                  />\r\n                </div>\r\n                <h6>Audit Logs</h6>\r\n                <p>Shows data about users and their activity</p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n      {reportData && reportSlug ? (\r\n        <>\r\n          <div className=\"custom-content-heading d-flex align-items-center\">\r\n            <div>\r\n              <button\r\n                onClick={(e) => {\r\n                  redirectBack(e);\r\n                }}\r\n                className=\"back-button\"\r\n              >\r\n                <img src={backicon} alt=\"icon\" />\r\n              </button>\r\n            </div>\r\n            <div className=\" ml-auto d-flex flex-wrap align-items-center\">\r\n              <Dropdown>\r\n                <Dropdown.Toggle\r\n                  variant=\"outline-primary\"\r\n                  size=\"sm\"\r\n                  className=\"mt-1 mb-2\"\r\n                >\r\n                  {dropValue}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    onClick={(e) => {\r\n                      handleDropDown(e, \"Monthly\");\r\n                      setShowGenerateModal(true);\r\n                    }}\r\n                  >\r\n                    Monthly\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    onClick={(e) => {\r\n                      handleDropDown(e, \"Daily\");\r\n                      setShowGenerateModal(true);\r\n                    }}\r\n                  >\r\n                    Daily\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    onClick={(e) => {\r\n                      handleDropDown(e, \"Custom\");\r\n                      setShowGenerateModal(true);\r\n                    }}\r\n                  >\r\n                    Custom\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n          </div>\r\n          <div className=\"custom-content-heading\">\r\n            <h1 className=\"mb-4\">{reportType}</h1>\r\n          </div>\r\n\r\n          {reportSlug && reportSlug == \"uptime-report\" ? (\r\n            permission && permission.permission.REPORTS.view ? <Uptime reportData={reportData} /> : <LockScreen message={\"You don't have permssion to access this !!!\"} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {reportSlug && reportSlug == \"media-report\" ? (\r\n            permission && permission.permission.REPORTS.view ? <Media reportData={reportData} /> : <LockScreen message={\"You don't have permssion to access this !!!\"} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {reportSlug && reportSlug == \"audit-logs\" ? (\r\n            permission && permission.permission.REPORTS.view ? <Audit reportData={reportData} /> : <LockScreen message={\"You don't have permssion to access this !!!\"} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <GenerateReportModal\r\n        close={() => setShowGenerateModal(false)}\r\n        show={showGenerateModal}\r\n        setReportType={reportType}\r\n        setFilter={setFilter}\r\n        filter={filter}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      auth: state.auth.auth,\r\n      permission : state.auth.permission\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Reports);\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\PublishMediaModal.jsx",["920","921","922","923"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\DeleteConfirmation.jsx",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\settings\\index.jsx",["924"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\QuickPlayModal.jsx",["925","926","927","928","929"],"import { Button, Modal, Row, Col, Badge, Dropdown } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport searchIcon from \"../../img/search.png\";\r\nimport listIcon from \"../../img/list-icon.png\";\r\nimport pic1 from \"./../../images/profile/small/pic1.jpg\";\r\nimport downArrow from \"../../img/down-arrow.png\";\r\n\r\nconst QuickPlayModal = ({ showQuickPlayModal, setQuickPlayModal }) => {\r\n  return (\r\n    <Modal\r\n      className=\"fade bd-example-modal-lg mt-4 custom-modal quick-modal custom-modal-medium\"\r\n      show={showQuickPlayModal}\r\n      size=\"md\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title className=\"mr-auto\">\r\n          Choose Composition to assign as Quickplay\r\n        </Modal.Title>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setQuickPlayModal(false)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"search-textfield quickplay-search d-flex flex-wrap align-items-center\">\r\n          {/* <div className=\"form-group mb-0\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control input-default \"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <img className=\"search-icon\" src={searchIcon} alt=\"search\" />\r\n          </div> */}\r\n          <Button className=\"ml-2 icon-btn\" variant=\"primary\">\r\n            <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\r\n          </Button>\r\n        </div>\r\n        <div className=\"mb-3 quick-modal-table\">\r\n          <div className=\"w-100 table-responsive\">\r\n            <div id=\"example_wrapper\">\r\n              <table id=\"example\" className=\"display w-100  table custom-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Composition</th>\r\n                    <th>Date Added</th>\r\n                    <th>Duration</th>\r\n                    <th>Associated Schedule</th>\r\n                    <th>Tags</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      <span className=\"d-flex align-items-center\">\r\n                        <img\r\n                          className=\"rounded mr-2\"\r\n                          width=\"35\"\r\n                          src={pic1}\r\n                          alt=\"\"\r\n                        />\r\n                        <span className=\"td-content\">\r\n                          <strong>My_image_name</strong>\r\n                          <span>Added by Gauri Batra</span>\r\n                        </span>\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"d-flex align-items-center\">\r\n                        <span className=\"td-content\">\r\n                          <strong>3 Apr,2023</strong>\r\n                          <span>05 :30 PM</span>\r\n                        </span>\r\n                      </span>\r\n                    </td>\r\n                    <td>10 Sec</td>\r\n                    <td>0</td>\r\n                    <td style={{ width: \"180px\" }}>\r\n                      <span className=\"tag-container\">\r\n                        <span className=\"my-phone-tag text-truncate ml-1 mr-1 mb-1\">\r\n                          My Phone\r\n                        </span>\r\n                      </span>\r\n\r\n                      <span className=\"down-arrow\">\r\n                        <img\r\n                          className=\"down-arrow-img img-fluid\"\r\n                          src={downArrow}\r\n                          alt=\"arrow\"\r\n                        />\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <span className=\"d-flex align-items-center\">\r\n                        <img\r\n                          className=\"rounded mr-2\"\r\n                          width=\"35\"\r\n                          src={pic1}\r\n                          alt=\"\"\r\n                        />\r\n                        <span className=\"td-content\">\r\n                          <strong>My_image_name</strong>\r\n                          <span>Added by Gauri Batra</span>\r\n                        </span>\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"d-flex align-items-center\">\r\n                        <span className=\"td-content\">\r\n                          <strong>3 Apr,2023</strong>\r\n                          <span>05 :30 PM</span>\r\n                        </span>\r\n                      </span>\r\n                    </td>\r\n                    <td>10 Sec</td>\r\n                    <td>0</td>\r\n                    <td style={{ width: \"180px\" }}>\r\n                      <span className=\"tag-container\">\r\n                        <span className=\"my-phone-tag text-truncate ml-1 mr-1 mb-1\">\r\n                          My Phone\r\n                        </span>\r\n                      </span>\r\n\r\n                      <span className=\"down-arrow\">\r\n                        <img\r\n                          className=\"down-arrow-img img-fluid\"\r\n                          src={downArrow}\r\n                          alt=\"arrow\"\r\n                        />\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Row className=\"w-100 m-0\">\r\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\r\n            <Button\r\n              className=\"cancel-btn w-100\"\r\n              variant=\"outline-light\"\r\n              onClick={() => setQuickPlayModal(false)}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\r\n            <Button\r\n              variant=\"\"\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block primary-btn\"\r\n              onClick={() => setQuickPlayModal(false)}\r\n            >\r\n              Assign\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default QuickPlayModal;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\WindowsModal.jsx",["930","931","932","933"],"import { Button, Modal, Row, Col, Badge, Dropdown } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\n\r\nimport chrisImg from \"../../img/chris-img.png\";\r\n\r\nconst WindowsModal = ({ showWindowsModal, setWindowsModal }) => {\r\n  return (\r\n    <Modal\r\n      className=\"fade bd-example-modal-lg mt-4 custom-modal windows-modal custom-modal-medium\"\r\n      show={showWindowsModal}\r\n      size=\"md\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title className=\"mr-auto\">\r\n        Christan’s Window’s\r\n        </Modal.Title>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setWindowsModal(false)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n<div className=\"chris-imgbox\">\r\n<img className=\"chris-img img-fluid\" src={chrisImg} alt=\"chris-icon\" />\r\n\r\n</div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WindowsModal;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\UpdateModal.jsx",["934","935"],"import { Button, Modal, Row, Col, Badge, Dropdown } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\n\r\nimport searchIcon from \"../../img/search-location.png\";\r\n\r\nconst UpdateModal = ({ showUpdateModal, setUpdateModal }) => {\r\n  return (\r\n    <Modal\r\n      className=\"fade bd-example-modal-lg mt-4 custom-modal windows-modal custom-modal-medium\"\r\n      show={showUpdateModal}\r\n      size=\"md\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title className=\"mr-auto\">\r\n        Update Screen\r\n        </Modal.Title>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setUpdateModal(false)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n      <Row>\r\n          <Col lg={12} md={12} sm={12} xs={12}>\r\n            <div className=\"form-group\">\r\n              <label className=\"update-textfield-label\">Screen Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control input-default form-field\"\r\n                placeholder=\"Christan’s Windows\"\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col lg={12} md={12} sm={12} xs={12}>\r\n            <div className=\"form-group\">\r\n              <label className=\"update-textfield-label\">Complete Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control input-default form-field\"\r\n                placeholder=\"House No. 38-A Tribune colony, Ambala Cantt, Haryana\"\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col lg={12} md={12} sm={12} xs={12}>\r\n            <div className=\"form-group location-field\">\r\n              <label className=\"update-textfield-label\">Google Location</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control input-default form-field\"\r\n                placeholder=\"Haryana\"\r\n              />\r\n              <div className=\"search-location\">\r\n              <img className=\"search-loc-icon\" src={searchIcon} alt=\"search-icon\" />\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Row className=\"w-100 m-0\">\r\n          <Col lg={12} md={12} sm={12} xs={12} className=\"pl-0 pr-0\">\r\n            <Button\r\n              variant=\"\"\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block primary-btn w-100\"\r\n              onClick={() => setUpdateModal(false)}\r\n            >\r\n             Update Screen\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UpdateModal;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\reports\\Audit.jsx",["936","937","938","939"],"import React, { useState } from \"react\";\r\nimport { Button, Table, Dropdown } from \"react-bootstrap\";\r\nimport {\r\n    humanReadableFormattedDateString,\r\n  } from \"../../../utils/UtilsService\";\r\n  import Datatable from \"react-data-table-component\";\r\n\r\nexport default function Audit({reportData, cPage, pCount}) {\r\n    const columns = [\r\n        {\r\n            name : \"Title\",\r\n            selector : (row) => row?.title,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name : \"Vendor\",\r\n            selector : (row) => row?.vendor?.name,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name : \"Created At\",\r\n            selector : (row) => humanReadableFormattedDateString(row.createdAt),\r\n            sortable: true,\r\n        },\r\n    ];\r\n\r\n  return (\r\n    <>\r\n      {/* <Table\r\n        responsive\r\n        className=\"custom-table screen-table\"\r\n        style={{ height: \"100%\" }}\r\n        id=\"external-events\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Vendor</th>\r\n            <th>CreatedAt</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {reportData.length > 0 &&\r\n            reportData.map((data) => {\r\n\r\n              return (\r\n                <tr key={data?._id}>\r\n                  <td>{data?.title}</td>\r\n                  <td>{data.vendor.name} </td>\r\n                  <td>{humanReadableFormattedDateString(data.createdAt)} </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n        {reportData?.length === 0 && <h3 className=\"mt-5\">No Report Found</h3>}\r\n      </Table> */}\r\n      <Datatable columns={columns} data={reportData} pagination sorting />\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\reports\\Media.jsx",["940","941","942","943","944"],"import React, { useState } from \"react\";\r\nimport { Button, Table, Dropdown } from \"react-bootstrap\";\r\nimport {\r\n    humanReadableFormattedDateString,\r\n  } from \"../../../utils/UtilsService\";\r\nimport Datatable from \"react-data-table-component\";\r\nexport default function Media({reportData}) {\r\n\r\n    const columns = [\r\n        {\r\n            name : \"Media\",\r\n            selector : (row) => row?.mediaObject?._id\r\n        },\r\n        {\r\n            name : \"Loop Count\",\r\n            selector : (row) => row.loop\r\n        },\r\n        {\r\n            name : \"Duration\",\r\n            selector : (row) => row.duration\r\n        },\r\n    ];\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Table\r\n        responsive\r\n        className=\"custom-table screen-table\"\r\n        style={{ height: \"100%\" }}\r\n        id=\"external-events\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th>Media</th>\r\n            <th>Loop Count</th>\r\n            <th>Duration</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {reportData.length > 0 &&\r\n            reportData.map((data) => {\r\n              return (\r\n                <tr key={data?._id}>\r\n                  <td>{data?.media}</td>\r\n                  <td>{data.loop} </td>\r\n                  <td>{data.duration} </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n        {reportData?.length === 0 && <h3 className=\"mt-5\">No Report Found</h3>}\r\n      </Table> */}\r\n      <Datatable columns={columns} data={reportData} pagination />\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\generateReportModal.jsx",["945","946","947","948","949","950","951","952","953","954"],"import { Button, Modal } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\n\r\nimport Select from \"react-select\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst GenerateReportModal = ({\r\n  close,\r\n  show,\r\n  reportType,\r\n  type,\r\n  setFilter,\r\n  filter,\r\n}) => {\r\n  const history = useHistory();\r\n  const monthOptions = [\r\n    { value: \"01\", label: \"January\" },\r\n    { value: \"02\", label: \"February\" },\r\n    { value: \"03\", label: \"March\" },\r\n    { value: \"04\", label: \"April\" },\r\n    { value: \"05\", label: \"May\" },\r\n    { value: \"06\", label: \"June\" },\r\n    { value: \"07\", label: \"July\" },\r\n    { value: \"08\", label: \"August\" },\r\n    { value: \"09\", label: \"September\" },\r\n    { value: \"10\", label: \"October\" },\r\n    { value: \"11\", label: \"November\" },\r\n    { value: \"12\", label: \"December\" },\r\n  ];\r\n  const [selectedMonth, setSelectedMonth] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState(null);\r\n  const [filterType, setFilterType] = useState(\"daily\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n\r\n  const yearOptions = [];\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  for (let i = currentYear - 5; i <= currentYear; i++) {\r\n    yearOptions.push({ value: String(i), label: String(i) });\r\n  }\r\n\r\n  // Output the year options\r\n\r\n  const colourStyles = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n      // const color = chroma(data.color);\r\n      return {\r\n        ...styles,\r\n        backgroundColor: isFocused ? \"#ed9bc7\" : null,\r\n        color: \"#333333\",\r\n      };\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCurrentDate();\r\n  }, []);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let sDate = startDate;\r\n    let eDate = endDate;\r\n    if (filterType == \"monthly\") {\r\n      sDate = `${selectedYear.value}-${selectedMonth.value}-01`;\r\n      eDate = `${selectedYear.value}-${selectedMonth.value}-31`;\r\n    }\r\n    setFilter({\r\n      startDate: sDate,\r\n      endDate: eDate,\r\n      filterType,\r\n      selectedMonth,\r\n      selectedYear,\r\n    });\r\n    close();\r\n  };\r\n\r\n  const getCurrentDate = () => {\r\n    let cDate = moment();\r\n    setSelectedMonth({\r\n      value: cDate.format(\"MM\"),\r\n      label: cDate.format(\"MMMM\"),\r\n    });\r\n    setSelectedYear({\r\n      value: cDate.format(\"YYYY\"),\r\n      label: cDate.format(\"YYYY\"),\r\n    });\r\n    setStartDate(cDate.format(\"YYYY-MM-DD\"));\r\n    setEndDate(cDate.format(\"YYYY-MM-DD\"));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        className=\"fade bd-example-modal-lg mt-4 app-modal\"\r\n        show={show}\r\n        size=\"md\"\r\n      >\r\n        <Modal.Header className=\"border-0 d-flex justify-content-between align-items-center\">\r\n          <div>\r\n            <Modal.Title className=\"mr-auto\">Report</Modal.Title>\r\n\r\n            <p>How would you like to generate your report?</p>\r\n          </div>\r\n\r\n          <Button variant=\"\" className=\"close\" onClick={() => close(false)}>\r\n            <img\r\n              className=\"cancel-icon\"\r\n              src={cancelIcon}\r\n              alt=\"cancel-icon\"\r\n              height=\"25px\"\r\n              width=\"25px\"\r\n            />\r\n          </Button>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ paddingBottom: \"15px\" }}>\r\n          <form onSubmit={handleSubmit} className=\"row\">\r\n            <div className=\"form-group col-12 mb-0  url-app-form border-0\">\r\n              <div>\r\n                <div className=\"d-flex align-items-center mb-2\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    //className=\"form-control \"\r\n                    checked={filterType == \"daily\"}\r\n                    onChange={(e) => setFilterType(\"daily\")}\r\n                  />\r\n                  <label className=\"mb-0 ml-3\">Daily</label>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"  form-control \"\r\n                  defaultValue={startDate}\r\n                  placeholder=\"App Name\"\r\n                  onChange={(e) => setStartDate(e.target.value)}\r\n                  required={filterType == \"daily\"}\r\n                  readOnly={filterType !== \"daily\"}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <>\r\n                  <div className=\"d-flex align-items-center mb-2 mt-3\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      //className=\"form-control \"\r\n                      checked={filterType == \"monthly\"}\r\n                      onChange={(e) => setFilterType(\"monthly\")}\r\n                    />\r\n                    <label className=\"mb-0 ml-3\">Monthly</label>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                      <Select\r\n                        value={selectedMonth}\r\n                        onChange={setSelectedMonth}\r\n                        options={monthOptions}\r\n                        styles={colourStyles}\r\n                        placeholder=\"month\"\r\n                        className=\"app-option\"\r\n                        isDisabled={filterType !== \"monthly\"}\r\n                        required={filterType == \"monthly\"}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <Select\r\n                        value={selectedYear}\r\n                        onChange={setSelectedYear}\r\n                        options={yearOptions}\r\n                        styles={colourStyles}\r\n                        placeholder=\"year\"\r\n                        className=\"app-option\"\r\n                        isDisabled={filterType !== \"monthly\"}\r\n                        required={filterType == \"monthly\"}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              </div>\r\n              <div>\r\n                <div className=\"d-flex align-items-center mb-2 mt-3\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    //className=\"form-control \"\r\n                    checked={filterType == \"custom\"}\r\n                    onChange={(e) => setFilterType(\"custom\")}\r\n                  />\r\n                  <label className=\"mb-0 ml-3\">Custom</label>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"  form-control \"\r\n                      onChange={(e) => setStartDate(e.target.value)}\r\n                      readOnly={filterType !== \"custom\"}\r\n                      defaultValue={startDate}\r\n                      required={filterType == \"custom\"}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control \"\r\n                      onChange={(e) => setEndDate(e.target.value)}\r\n                      readOnly={filterType !== \"custom\"}\r\n                      required={filterType == \"custom\"}\r\n                      defaultValue={endDate}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-100 mt-3\">\r\n              <Button\r\n                variant=\"\"\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block primary-btn\"\r\n                //   onClick={() => setNewTagModal(false)}\r\n              >\r\n                Continue\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GenerateReportModal;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\reports\\Uptime.jsx",["955","956"],"import React, { useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport Datatable from \"react-data-table-component\";\r\n\r\nexport default function Uptime({reportData}) {\r\n\r\n    const getUptimeData = (data) => {\r\n        const sumOfTime = data?.uptimeReport?.reduce(\r\n            (total, obj) => total + obj?.time,\r\n            0\r\n          );\r\n\r\n          // Convert the sum to hours\r\n          const sumInHours = sumOfTime;\r\n          const hours = Math.floor(sumOfTime / 60);\r\n          const minutes = sumOfTime % 60;\r\n\r\n          const formattedSum = `${hours} hr ${\r\n            minutes < 10 ? \"0\" : \"\"\r\n          }${Math.floor(minutes)} min`;\r\n\r\n          const average = sumInHours / data?.uptimeReport?.length;\r\n          const aveHours = Math.floor(average / 60);\r\n          const aveMinutes = average % 60;\r\n\r\n          const aveFormattedSum = `${aveHours} hr ${\r\n            aveMinutes < 10 ? \"0\" : \"\"\r\n          }${Math.floor(aveMinutes)} min`;\r\n\r\n          return [formattedSum, aveFormattedSum];\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name : \"Screen\",\r\n            selector : (row) => row?.name\r\n        },\r\n        {\r\n            name : \"Total Uptime\",\r\n            selector : (row) => getUptimeData(row)[0]\r\n        },\r\n        {\r\n            name : \"Total Avg Time\",\r\n            selector : (row) => getUptimeData(row)[1]\r\n        },\r\n    ];\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Table\r\n        responsive\r\n        className=\"custom-table screen-table\"\r\n        style={{ height: \"100%\" }}\r\n        id=\"external-events\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th>Screen</th>\r\n            <th>Total Uptime</th>\r\n            <th>Daily Average Uptime</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {reportData.length > 0 &&\r\n            reportData.map((data) => {\r\n              \r\n              return (\r\n                <tr key={data?._id}>\r\n                  <td>{data?.name}</td>\r\n                  <td>{formattedSum} </td>\r\n                  <td>{aveFormattedSum} </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n        {reportData?.length === 0 && <h3 className=\"mt-5\">No Report Found</h3>}\r\n      </Table> */}\r\n      <Datatable columns={columns} data={reportData} pagination />\r\n    </>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Composition\\Common.jsx",["957","958","959","960","961","962","963","964","965","966","967"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Composition\\CompositionActions.jsx",["968"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AddNewTagModal.jsx",["969","970","971","972","973","974","975","976"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\ChatBox.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\nav\\Header.js",["977","978","979"],"import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n/// Image\r\nimport profile from \"../../../images/profile/pic1.jpg\";\r\nimport avatar from \"../../../images/avatar/1.jpg\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport LogoutPage from './Logout';\r\n\r\nconst Header = ({ onNote }) => {\r\n  const onFullScreen = () => {\r\n    var elem = document.documentElement;\r\n    if (elem.requestFullscreen) {\r\n      elem.requestFullscreen();\r\n    } else if (elem.webkitRequestFullscreen) {\r\n      elem.webkitRequestFullscreen();\r\n    } else if (elem.msRequestFullscreen) {\r\n      elem.msRequestFullscreen();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"header header-custom\" style={{ zIndex: \"11\" }}>\r\n      <div className=\"header-content\">\r\n        <nav className=\"navbar navbar-expand\">\r\n          <div className=\"collapse navbar-collapse justify-content-between\">\r\n            <div className=\"header-left\">\r\n\r\n            </div>\r\n            <ul className=\"navbar-nav header-right\">\r\n\r\n              <Dropdown as=\"li\" className=\"nav-item dropdown header-profile\">\r\n                <Dropdown.Toggle\r\n                  variant=\"\"\r\n                  as=\"a\"\r\n                  className=\"i-false c-pointer nav-link\"\r\n                  to=\"\"\r\n                  role=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                >\r\n                  <div className=\"header-info\">\r\n                    <span>\r\n                      Hello, <strong>Samuel</strong>\r\n                    </span>\r\n                  </div>\r\n                  <img src={profile} width={20} alt=\"\" />\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu\r\n                  align=\"right\"\r\n                  className=\"dropdown-menu dropdown-menu-right\"\r\n                >\r\n                  <Link to=\"/app-profile\" className=\"dropdown-item ai-icon\">\r\n                    <svg\r\n                      id=\"icon-user1\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"text-primary\"\r\n                      width={18}\r\n                      height={18}\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth={2}\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\r\n                      <circle cx={12} cy={7} r={4} />\r\n                    </svg>\r\n                    <span className=\"ml-2\">Profile </span>\r\n                  </Link>\r\n                  <Link to=\"/email-inbox\" className=\"dropdown-item ai-icon\">\r\n                    <svg\r\n                      id=\"icon-inbox\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"text-success\"\r\n                      width={18}\r\n                      height={18}\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth={2}\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\" />\r\n                      <polyline points=\"22,6 12,13 2,6\" />\r\n                    </svg>\r\n                    <span className=\"ml-2\">Inbox </span>\r\n                  </Link>\r\n                  <LogoutPage />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\nav\\NavHader.js",["980"],"import React, { useState } from \"react\";\r\n\r\n/// React router dom\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/// images\r\nimport logo from \"../../../img/logo.png\";\r\nimport logo1 from \"../../../img/Logo11.svg\";\r\n\r\nconst NavHader = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  return (\r\n    <div className=\"nav-header navbar-header-custom\" style={{ zIndex: \"12\" }}>\r\n      <Link to=\"/\" className=\"brand-logo\">\r\n        <img className=\"sidebar-logo\" src={logo1} alt=\"\" />\r\n      </Link>\r\n\r\n      <div\r\n        className=\"nav-control nav-hamburger-menu\"\r\n        onClick={() => setToggle(!toggle)}\r\n      >\r\n        <div className={`hamburger ${toggle ? \"is-active\" : \"\"}`}>\r\n          <span className=\"line\"></span>\r\n          <span className=\"line\"></span>\r\n          <span className=\"line\"></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavHader;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\nav\\SideBar.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\YoutubeAppModal.jsx",["981","982","983","984","985","986","987","988","989","990","991"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\QrCodeModal.jsx",["992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AirQualityAppModal.jsx",["1005","1006","1007","1008","1009","1010","1011","1012","1013","1014"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\BulletinBoardAppModal.jsx",["1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\TableLoader.jsx",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\StocksAppModal.jsx",["1026","1027","1028","1029","1030","1031","1032","1033","1034","1035"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\settings\\profile.jsx",["1036","1037","1038","1039","1040","1041","1042"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\settings\\group.jsx",["1043","1044","1045","1046","1047","1048","1049"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Dropdown } from \"react-bootstrap\";\r\nimport AddNewTagModal from \"../../modals/AddNewTagModal\";\r\nimport downArrow from \"../../../img/down-arrow.png\";\r\nimport menuIcon from \"../../../img/menu-icon.png\";\r\nimport veiwDetailIcon from \"../../../img/view-detail-icon.png\";\r\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\r\nimport assignIcon from \"../../../img/assign-icon.png\";\r\nimport takeScreenshotIcon from \"../../../img/tack-screenshot-icon.png\";\r\nimport { deleteGroups, updateGroups } from \"../../../utils/api\";\r\nimport { toast } from \"react-toastify\";\r\nimport AddUserModal from '../../modals/AddUserModal';\r\n\r\nconst Group = ({groups, setIsRefresh, isRefresh }) => {\r\n    const [showAddUserModel, setShowAddUserModel] = useState(false);\r\n    const [user, setUser] = useState(null);\r\n\r\n    const deleteuserRecord = async (e, id) => {\r\n        e.preventDefault();\r\n        await deleteGroups(id);\r\n        toast.success(\"Group has been deleted successfully !!!\", {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n        });\r\n        setIsRefresh(!isRefresh);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <AddUserModal open={showAddUserModel} setShowAddUserModel={setShowAddUserModel} setIsRefresh={setIsRefresh} user={user} setUser={setUser} type={'edit'}/>\r\n        <Table responsive className=\"custom-table screen-table\">\r\n            <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Description</th>\r\n                <th></th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {groups && groups.groups !== \"\" &&\r\n                groups.groups.map((item) => {\r\n                return (\r\n                    <tr id={item._id}>\r\n                    <td>\r\n                        <span className=\"td-content\">\r\n                        <strong>{item.name}</strong>\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span className=\"d-flex align-items-center\">\r\n                        <span className=\"td-content\">\r\n                            <strong>{item.description}</strong>\r\n                        </span>\r\n                        </span>\r\n                    </td>\r\n                    <td>{item.createdAt}</td>\r\n                    <td>\r\n                        <Dropdown className=\"dropdown-toggle-menu\">\r\n                        <Dropdown.Toggle variant=\"\" className=\"p-0  mb-2\">\r\n                            <span className=\"table-menu-icon\">\r\n                            <img\r\n                                className=\"menu-img img-fluid\"\r\n                                src={menuIcon}\r\n                                alt=\"menu-icon\"\r\n                            />\r\n                            </span>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item \r\n                            onClick={(e)=>{deleteuserRecord(e, item._id)}}\r\n                            className=\"dropdown-list-item\">\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"dropdown-list-icon\">\r\n                                <img\r\n                                    className=\"dropdown-list-img img-fluid\"\r\n                                    src={takeScreenshotIcon}\r\n                                    alt=\"menu-icon\"\r\n                                />\r\n                                </div>\r\n                                <div className=\"dropdown-menu-list\">\r\n                                <span className=\"menu-heading\">Delete Group</span>\r\n                                </div>\r\n                            </div>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </td>\r\n                    </tr>\r\n                );\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Group;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AddDeviceProfile.jsx",["1050","1051","1052","1053","1054","1055","1056"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport {\r\n  BASE_URL,\r\n  addDeviceProfile,\r\n  updateDeviceProfile,\r\n} from \"../../utils/api\";\r\nimport { toast } from \"react-toastify\";\r\nimport AddMedia from \"../modals/AddMedia\";\r\nimport DragMove from \"./DragMove\";\r\nimport Switch from \"react-switch\";\r\nimport upload from \"../../img/uplaod.svg\";\r\n\r\nconst AddDeviceProfile = ({\r\n  open,\r\n  setShowProfileModel,\r\n  setIsRefresh,\r\n  profileData,\r\n  setProfileData,\r\n  type,\r\n}) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [openMedia, setOpenMedia] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [selectedMedia, setSelectedMedia] = useState(null);\r\n  const [height, setHeight] = useState(0);\r\n  const [width, setWidth] = useState(0);\r\n  const [healthIndicator, setHealthIndicator] = useState(false);\r\n  const [viewPort, setViewPort] = useState(\"portrait\");\r\n  useEffect(() => {\r\n    if (profileData) {\r\n      setSelectedMedia({\r\n        title: profileData.logo.title,\r\n        type: profileData.logo.type,\r\n      });\r\n      setWidth(profileData.logo.dimensions.width);\r\n      setHeight(profileData.logo.dimensions.height);\r\n      setViewPort(profileData.logo.orientation);\r\n      setTranslate({\r\n        x: profileData.logo.coordinates.x,\r\n        y: profileData.logo.coordinates.y,\r\n      });\r\n      setHealthIndicator(profileData.screenHealthIndicator);\r\n      setName(profileData.name);\r\n      console.log(\"profileData\", profileData);\r\n    }\r\n  }, [profileData]);\r\n\r\n  const [translate, setTranslate] = useState({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n  const handleChangeDate = (nextChecked) => {\r\n    console.log(nextChecked, \"yyyy\");\r\n    setHealthIndicator(nextChecked);\r\n  };\r\n  const handleDragMove = (e) => {\r\n    setTranslate({\r\n      x: translate.x + e.movementX,\r\n      y: translate.y + e.movementY,\r\n    });\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let err = \"\";\r\n    if (name === \"\") {\r\n      err = \"Name is Required\";\r\n    }\r\n    if (err !== \"\") {\r\n      setError(err);\r\n      return false;\r\n    } else {\r\n      setError(\"\");\r\n    }\r\n\r\n    if (type && type == \"edit\") {\r\n      const payLoad = {\r\n        name,\r\n        screenHealthIndicator: healthIndicator,\r\n        orientation: viewPort,\r\n        width,\r\n        height,\r\n        x: translate.x,\r\n        y: translate.y,\r\n        title: selectedMedia ? selectedMedia.title : \"\",\r\n        type: selectedMedia ? selectedMedia.type : \"\",\r\n        profileId: profileData._id,\r\n      };\r\n      await updateDeviceProfile(payLoad)\r\n        .then((response) => {\r\n          //setError(null);\r\n          toast.success(\"Device Profile has been Updated successfully !!!\", {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setIsRefresh(true);\r\n          setShowProfileModel(false);\r\n        })\r\n        .catch(function (error) {\r\n          setError(error.response.data.message);\r\n        });\r\n    } else {\r\n      const payLoad = {\r\n        name,\r\n        screenHealthIndicator: healthIndicator,\r\n        orientation: viewPort,\r\n        width,\r\n        height,\r\n        x: translate.x,\r\n        y: translate.y,\r\n        title: selectedMedia ? selectedMedia.title : \"\",\r\n        type: selectedMedia ? selectedMedia.type : \"\",\r\n      };\r\n      await addDeviceProfile(payLoad)\r\n        .then((response) => {\r\n          //setError(null);\r\n          toast.success(\"Device Profile has been added successfully !!!\", {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setIsRefresh(true);\r\n          setShowProfileModel(false);\r\n        })\r\n        .catch(function (error) {\r\n          setError(error.response.data.message);\r\n        });\r\n    }\r\n  };\r\n  const videoMetaDuration = (media) => {\r\n    const properties = JSON.parse(media?.properties);\r\n    if (properties && properties.length) {\r\n      return (properties.length.toFixed(0) / 60).toFixed(0);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AddMedia\r\n        setOpenMedia={setOpenMedia}\r\n        openMedia={openMedia}\r\n        selectedImage={selectedImage}\r\n        setSelectedImage={setSelectedImage}\r\n        setSelectedMedia={setSelectedMedia}\r\n        setHeight={setHeight}\r\n        setWidth={setWidth}\r\n      />\r\n      <Modal className=\"\" show={open} size=\"xl\">\r\n        <Modal.Header>\r\n          <Modal.Title>\r\n            {type && type == \"edit\" ? \"Update \" : \"Add \"} Profile\r\n          </Modal.Title>\r\n          <Button\r\n            variant=\"\"\r\n            className=\"close\"\r\n            onClick={() => setShowProfileModel(false)}\r\n          >\r\n            <img\r\n              className=\"cancel-icon\"\r\n              src={cancelIcon}\r\n              alt=\"cancel-icon\"\r\n              height=\"25px\"\r\n            />\r\n          </Button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            {error && error !== \"\" && (\r\n              <h5 className=\"alert alert-danger\">{error}</h5>\r\n            )}\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <label className=\"mt-3\">Enter Name</label>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  className=\"form-control input-default form-field\"\r\n                  placeholder=\"Enter Name\"\r\n                  onChange={(e) => {\r\n                    setName(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"form-group pt-2\">\r\n                <Switch\r\n                  onColor=\"#B3005E\"\r\n                  onChange={handleChangeDate}\r\n                  checked={healthIndicator}\r\n                  className=\"react-switch\"\r\n                  required={true}\r\n                />\r\n              </div>\r\n              <div className=\"form-group d-flex pt-2\">\r\n                {/* <button\r\n                  onClick={(e) => {\r\n                    setOpenMedia(true);\r\n                  }}\r\n                  className=\"btn btn-primary  primary-btn btn\"\r\n                >\r\n                  Add Image\r\n                </button> */}\r\n                <div className=\"mr-4 add-device-profile-img\">\r\n                  {selectedMedia && (\r\n                    <span className=\"td-content d-flex name-td-content mb-3 \">\r\n                      <span\r\n                        className={`name-img mr-2  ${\r\n                          selectedMedia?.type === \"video\" && \"videotableName\"\r\n                        }`}\r\n                      >\r\n                        {selectedMedia?.type === \"image\" && (\r\n                          <div\r\n                            onClick={() => {\r\n                              //showPreview(selectedMedia.title, selectedMedia.type);\r\n                            }}\r\n                            className=\"media-list-img-zoom\"\r\n                          >\r\n                            <span className=\"media-list-img-zoom-plus\">+</span>\r\n                            <img\r\n                              className=\"media-img img-fluid\"\r\n                              src={`${BASE_URL}${selectedMedia?.title}`}\r\n                              alt=\"media-img\"\r\n                            />\r\n                          </div>\r\n                        )}\r\n                        {selectedMedia?.type === \"video\" && (\r\n                          <button\r\n                            onClick={() => {\r\n                              //showPreview(media.title, media.type);\r\n                            }}\r\n                          >\r\n                            {videoMetaDuration(selectedMedia)}\r\n                          </button>\r\n                        )}\r\n                      </span>\r\n                    </span>\r\n                  )}\r\n                </div>\r\n\r\n                <img\r\n                  onClick={(e) => {\r\n                    setOpenMedia(true);\r\n                  }}\r\n                  src={upload}\r\n                  alt=\"icon\"\r\n                  height=\"35px\"\r\n                  width=\"35px\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                {selectedMedia && (\r\n                  <div>\r\n                    <div className=\"add-device-potrait \">\r\n                      <div\r\n                        onClick={(e) => {\r\n                          setViewPort(\"portrait\");\r\n                        }}\r\n                        className={`${viewPort == \"portrait\" ? \" active\" : \"\"}`}\r\n                      >\r\n                        Potrait\r\n                      </div>\r\n                      <div\r\n                        onClick={(e) => {\r\n                          setViewPort(\"landscape\");\r\n                        }}\r\n                        className={`${\r\n                          viewPort == \"landscape\" ? \" active\" : \"\"\r\n                        }`}\r\n                      >\r\n                        Landscape\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-controle\">\r\n                      <label className=\"mt-3\">X</label>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          value={translate.x}\r\n                          className=\"form-control input-default form-field\"\r\n                          placeholder=\"Enter Name\"\r\n                          onChange={(e) => {\r\n                            setTranslate({\r\n                              ...translate,\r\n                              [\"x\"]: e.target.value,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-controle\">\r\n                      <label className=\"mt-3\">Y</label>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          value={translate.y}\r\n                          className=\"form-control input-default form-field\"\r\n                          placeholder=\"Enter Name\"\r\n                          onChange={(e) => {\r\n                            setTranslate({\r\n                              ...translate,\r\n                              [\"y\"]: e.target.value,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-controle\">\r\n                      <label className=\"mt-3\">Width</label>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          value={width}\r\n                          className=\"form-control input-default form-field\"\r\n                          placeholder=\"Enter Name\"\r\n                          onChange={(e) => {\r\n                            setWidth(e.target.value);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-controle\">\r\n                      <label className=\"mt-3\">Height</label>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          value={height}\r\n                          className=\"form-control input-default form-field\"\r\n                          placeholder=\"Enter Name\"\r\n                          onChange={(e) => {\r\n                            setHeight(e.target.value);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <header className=\"App-header\">\r\n                        <DragMove onDragMove={handleDragMove}>\r\n                          <div\r\n                            style={{\r\n                              transform: `translateX(${translate.x}px) translateY(${translate.y}px)`,\r\n                            }}\r\n                            className=\"w-100\"\r\n                          >\r\n                            <img\r\n                              style={{ width:`${width}px`, height:`${height}px`, maxWidth: \"100%\" }}\r\n                              src={`${BASE_URL}${selectedMedia?.title}`}\r\n                              className={`App-logo  ${width}`}\r\n                              alt=\"logo\"\r\n                            />\r\n                          </div>\r\n                        </DragMove>\r\n                      </header>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Row className=\"w-100 m-0\">\r\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\r\n              <Button\r\n                className=\"cancel-btn w-100\"\r\n                variant=\"outline-light\"\r\n                onClick={() => setShowProfileModel(false)}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\r\n              <Button\r\n                variant=\"\"\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-block primary-btn\"\r\n                onClick={(e) => handleSubmit(e)}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddDeviceProfile;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\settings\\roles.jsx",["1057","1058","1059","1060","1061","1062","1063","1064","1065"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  Dropdown,\r\n  Button,\r\n  Modal,\r\n  Row,\r\n  Col,\r\n  Badge,\r\n} from \"react-bootstrap\";\r\nimport { updateRoles } from \"../../../utils/api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Editor } from \"draft-js\";\r\n\r\nconst Roles = ({ roles, setIsRefresh, isRefresh }) => {\r\n  const [rolesData, setRolesData] = useState(roles.roles);\r\n  const [rolesType, setRolesType] = useState(\"OPERATOR\");\r\n  const [makeRefresh, setMakeRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setMakeRefresh(false);\r\n    if (roles) {\r\n      setRolesData(roles.roles);\r\n    }\r\n  }, [makeRefresh, rolesData]);\r\n\r\n  const handleChange = async (e, set, section, type, val) => {\r\n    rolesData[set][section][type] = val;\r\n    await setRolesData(rolesData);\r\n    setMakeRefresh(true);\r\n  };\r\n\r\n  const handleRoles = async (e) => {\r\n    e.preventDefault();\r\n    console.log(rolesData);\r\n    await updateRoles(rolesData)\r\n      .then((response) => {\r\n        //setError(null);\r\n        toast.success(\"Roles has been updated successfully !\", {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: \"light\",\r\n        });\r\n        setIsRefresh(true);\r\n      })\r\n      .catch(function (error) {\r\n        //setError(error.response.data.message)\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex mb-4\">\r\n        <button\r\n          className=\"btn  btn-success btn btn-primary  primary-btn setting-page-btn \"\r\n          onClick={(e) => {\r\n            handleRoles(e);\r\n          }}\r\n        >\r\n          Update\r\n        </button>\r\n      </div>\r\n      <Row className=\"w-100\" style={{ marginTop: \"10px\" }}>\r\n        <Col lg={3} md={3} sm={3} xs={3} className=\"pl-0 pr-2 card\">\r\n          <div>\r\n            <button\r\n              className={`btn btn-sm w-100 text-left ${\r\n                rolesType === \"OPERATOR\" ? \"btn-success role-btn-bg\" : \"\"\r\n              }`}\r\n              onClick={(e) => {\r\n                setRolesType(\"OPERATOR\");\r\n              }}\r\n            >\r\n              Operator\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <button\r\n              className={`btn btn-sm w-100 text-left ${\r\n                rolesType === \"MANAGER\" ? \"btn-success role-btn-bg\" : \"\"\r\n              }`}\r\n              onClick={(e) => {\r\n                setRolesType(\"MANAGER\");\r\n              }}\r\n            >\r\n              Manager\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <button\r\n              className={`btn btn-sm w-100 text-left ${\r\n                rolesType === \"EDITOR\" ? \"btn-success role-btn-bg\" : \"\"\r\n              }`}\r\n              onClick={(e) => {\r\n                setRolesType(\"EDITOR\");\r\n              }}\r\n            >\r\n              Editor\r\n            </button>\r\n          </div>\r\n        </Col>\r\n        <Col lg={9} md={9} sm={9} xs={9} className=\"pl-2 pr-0\">\r\n          <Table responsive className=\"custom-table screen-table roles-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Permission</th>\r\n                <th>View</th>\r\n                <th>Add</th>\r\n                <th>edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {rolesType && rolesType == \"OPERATOR\" && (\r\n              <tbody>\r\n                <tr>\r\n                  <td>APPS</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-apps-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-apps-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"APPS\",\r\n                          \"view\",\r\n                          !rolesData.OPERATOR.APPS.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.APPS.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-apps-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-apps-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"APPS\",\r\n                          \"add\",\r\n                          !rolesData.OPERATOR.APPS.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.APPS.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-apps-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-apps-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"APPS\",\r\n                          \"edit\",\r\n                          !rolesData.OPERATOR.APPS.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.APPS.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-apps-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-apps-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"APPS\",\r\n                          \"delete\",\r\n                          !rolesData.OPERATOR.APPS.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.APPS.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>ASSETS</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-ASSETS-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-ASSETS-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"ASSETS\",\r\n                          \"view\",\r\n                          !rolesData.OPERATOR.ASSETS.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.ASSETS.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-ASSETS-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-ASSETS-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"ASSETS\",\r\n                          \"add\",\r\n                          !rolesData.OPERATOR.ASSETS.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.ASSETS.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-ASSETS-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-ASSETS-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"ASSETS\",\r\n                          \"edit\",\r\n                          !rolesData.OPERATOR.ASSETS.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.ASSETS.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-ASSETS-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-ASSETS-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"ASSETS\",\r\n                          \"delete\",\r\n                          !rolesData.OPERATOR.ASSETS.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.ASSETS.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>COMPOSITION</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-COMPOSITION-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-COMPOSITION-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"COMPOSITION\",\r\n                          \"view\",\r\n                          !rolesData.OPERATOR.COMPOSITION.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.COMPOSITION.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-COMPOSITION-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-COMPOSITION-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"COMPOSITION\",\r\n                          \"add\",\r\n                          !rolesData.OPERATOR.COMPOSITION.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.COMPOSITION.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-COMPOSITION-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-COMPOSITION-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"COMPOSITION\",\r\n                          \"edit\",\r\n                          !rolesData.OPERATOR.COMPOSITION.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.COMPOSITION.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-COMPOSITION-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-COMPOSITION-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"COMPOSITION\",\r\n                          \"delete\",\r\n                          !rolesData.OPERATOR.COMPOSITION.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.COMPOSITION.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>QUICKPLAY</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-QUICKPLAY-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-QUICKPLAY-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"QUICKPLAY\",\r\n                          \"view\",\r\n                          !rolesData.OPERATOR.QUICKPLAY.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.QUICKPLAY.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-QUICKPLAY-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-QUICKPLAY-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"QUICKPLAY\",\r\n                          \"add\",\r\n                          !rolesData.OPERATOR.QUICKPLAY.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.QUICKPLAY.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-QUICKPLAY-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-QUICKPLAY-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"QUICKPLAY\",\r\n                          \"edit\",\r\n                          !rolesData.OPERATOR.QUICKPLAY.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.QUICKPLAY.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-QUICKPLAY-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-QUICKPLAY-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"QUICKPLAY\",\r\n                          \"delete\",\r\n                          !rolesData.OPERATOR.QUICKPLAY.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.QUICKPLAY.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>REPORTS</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-REPORTS-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-REPORTS-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"REPORTS\",\r\n                          \"view\",\r\n                          !rolesData.OPERATOR.REPORTS.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.REPORTS.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-REPORTS-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-REPORTS-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"REPORTS\",\r\n                          \"add\",\r\n                          !rolesData.OPERATOR.REPORTS.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.REPORTS.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-REPORTS-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-REPORTS-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"REPORTS\",\r\n                          \"edit\",\r\n                          !rolesData.OPERATOR.REPORTS.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.REPORTS.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-REPORTS-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-REPORTS-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"REPORTS\",\r\n                          \"delete\",\r\n                          !rolesData.OPERATOR.REPORTS.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.REPORTS.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>SCHEDULE</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-SCHEDULE-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-SCHEDULE-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"SCHEDULE\",\r\n                          \"view\",\r\n                          !rolesData.OPERATOR.SCHEDULE.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.SCHEDULE.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-SCHEDULE-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-SCHEDULE-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"SCHEDULE\",\r\n                          \"add\",\r\n                          !rolesData.OPERATOR.SCHEDULE.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.SCHEDULE.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-SCHEDULE-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-SCHEDULE-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"SCHEDULE\",\r\n                          \"edit\",\r\n                          !rolesData.OPERATOR.SCHEDULE.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.SCHEDULE.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-SCHEDULE-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-SCHEDULE-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"SCHEDULE\",\r\n                          \"delete\",\r\n                          !rolesData.OPERATOR.SCHEDULE.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.SCHEDULE.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>SCREEN</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-SCREEN-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-SCREEN-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"SCREEN\",\r\n                          \"view\",\r\n                          !rolesData.OPERATOR.SCREEN.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.SCREEN.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-SCREEN-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-SCREEN-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"SCREEN\",\r\n                          \"add\",\r\n                          !rolesData.OPERATOR.SCREEN.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.SCREEN.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-SCREEN-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-SCREEN-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"SCREEN\",\r\n                          \"edit\",\r\n                          !rolesData.OPERATOR.SCREEN.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.SCREEN.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-OPERATOR-SCREEN-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-OPERATOR-SCREEN-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"OPERATOR\",\r\n                          \"SCREEN\",\r\n                          \"delete\",\r\n                          !rolesData.OPERATOR.SCREEN.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.OPERATOR.SCREEN.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n            {rolesType && rolesType == \"MANAGER\" && (\r\n              <tbody>\r\n                <tr>\r\n                  <td>APPS</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-apps-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-apps-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"APPS\",\r\n                          \"view\",\r\n                          !rolesData.MANAGER.APPS.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.APPS.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-apps-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-apps-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"APPS\",\r\n                          \"add\",\r\n                          !rolesData.MANAGER.APPS.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.APPS.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-apps-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-apps-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"APPS\",\r\n                          \"edit\",\r\n                          !rolesData.MANAGER.APPS.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.APPS.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-apps-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-apps-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"APPS\",\r\n                          \"delete\",\r\n                          !rolesData.MANAGER.APPS.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.APPS.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>ASSETS</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-ASSETS-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-ASSETS-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"ASSETS\",\r\n                          \"view\",\r\n                          !rolesData.MANAGER.ASSETS.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.ASSETS.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-ASSETS-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-ASSETS-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"ASSETS\",\r\n                          \"add\",\r\n                          !rolesData.MANAGER.ASSETS.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.ASSETS.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-ASSETS-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-ASSETS-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"ASSETS\",\r\n                          \"edit\",\r\n                          !rolesData.MANAGER.ASSETS.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.ASSETS.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-ASSETS-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-ASSETS-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"ASSETS\",\r\n                          \"delete\",\r\n                          !rolesData.MANAGER.ASSETS.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.ASSETS.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>COMPOSITION</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-COMPOSITION-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-COMPOSITION-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"COMPOSITION\",\r\n                          \"view\",\r\n                          !rolesData.MANAGER.COMPOSITION.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.COMPOSITION.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-COMPOSITION-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-COMPOSITION-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"COMPOSITION\",\r\n                          \"add\",\r\n                          !rolesData.MANAGER.COMPOSITION.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.COMPOSITION.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-COMPOSITION-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-COMPOSITION-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"COMPOSITION\",\r\n                          \"edit\",\r\n                          !rolesData.MANAGER.COMPOSITION.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.COMPOSITION.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-COMPOSITION-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-COMPOSITION-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"COMPOSITION\",\r\n                          \"delete\",\r\n                          !rolesData.MANAGER.COMPOSITION.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.COMPOSITION.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>QUICKPLAY</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-QUICKPLAY-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-QUICKPLAY-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"QUICKPLAY\",\r\n                          \"view\",\r\n                          !rolesData.MANAGER.QUICKPLAY.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.QUICKPLAY.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-QUICKPLAY-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-QUICKPLAY-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"QUICKPLAY\",\r\n                          \"add\",\r\n                          !rolesData.MANAGER.QUICKPLAY.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.QUICKPLAY.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-QUICKPLAY-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-QUICKPLAY-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"QUICKPLAY\",\r\n                          \"edit\",\r\n                          !rolesData.MANAGER.QUICKPLAY.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.QUICKPLAY.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-QUICKPLAY-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-QUICKPLAY-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"QUICKPLAY\",\r\n                          \"delete\",\r\n                          !rolesData.MANAGER.QUICKPLAY.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.QUICKPLAY.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>REPORTS</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-REPORTS-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-REPORTS-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"REPORTS\",\r\n                          \"view\",\r\n                          !rolesData.MANAGER.REPORTS.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.REPORTS.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-REPORTS-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-REPORTS-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"REPORTS\",\r\n                          \"add\",\r\n                          !rolesData.MANAGER.REPORTS.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.REPORTS.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-REPORTS-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-REPORTS-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"REPORTS\",\r\n                          \"edit\",\r\n                          !rolesData.MANAGER.REPORTS.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.REPORTS.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-REPORTS-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-REPORTS-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"REPORTS\",\r\n                          \"delete\",\r\n                          !rolesData.MANAGER.REPORTS.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.REPORTS.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>SCHEDULE</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-SCHEDULE-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-SCHEDULE-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"SCHEDULE\",\r\n                          \"view\",\r\n                          !rolesData.MANAGER.SCHEDULE.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.SCHEDULE.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-SCHEDULE-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-SCHEDULE-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"SCHEDULE\",\r\n                          \"add\",\r\n                          !rolesData.MANAGER.SCHEDULE.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.SCHEDULE.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-SCHEDULE-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-SCHEDULE-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"SCHEDULE\",\r\n                          \"edit\",\r\n                          !rolesData.MANAGER.SCHEDULE.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.SCHEDULE.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-SCHEDULE-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-SCHEDULE-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"SCHEDULE\",\r\n                          \"delete\",\r\n                          !rolesData.MANAGER.SCHEDULE.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.SCHEDULE.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>SCREEN</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-SCREEN-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-SCREEN-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"SCREEN\",\r\n                          \"view\",\r\n                          !rolesData.MANAGER.SCREEN.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.SCREEN.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-SCREEN-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-SCREEN-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"SCREEN\",\r\n                          \"add\",\r\n                          !rolesData.MANAGER.SCREEN.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.SCREEN.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-SCREEN-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-SCREEN-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"SCREEN\",\r\n                          \"edit\",\r\n                          !rolesData.MANAGER.SCREEN.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.SCREEN.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-MANAGER-SCREEN-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-MANAGER-SCREEN-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"MANAGER\",\r\n                          \"SCREEN\",\r\n                          \"delete\",\r\n                          !rolesData.MANAGER.SCREEN.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.MANAGER.SCREEN.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n            {rolesType && rolesType == \"EDITOR\" && (\r\n              <tbody>\r\n                <tr>\r\n                  <td>APPS</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-apps-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-apps-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"APPS\",\r\n                          \"view\",\r\n                          !rolesData.EDITOR.APPS.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.APPS.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-apps-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-apps-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"APPS\",\r\n                          \"add\",\r\n                          !rolesData.EDITOR.APPS.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.APPS.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-apps-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-apps-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"APPS\",\r\n                          \"edit\",\r\n                          !rolesData.EDITOR.APPS.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.APPS.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-apps-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-apps-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"APPS\",\r\n                          \"delete\",\r\n                          !rolesData.EDITOR.APPS.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.APPS.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>ASSETS</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-ASSETS-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-ASSETS-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"ASSETS\",\r\n                          \"view\",\r\n                          !rolesData.EDITOR.ASSETS.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.ASSETS.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-ASSETS-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-ASSETS-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"ASSETS\",\r\n                          \"add\",\r\n                          !rolesData.EDITOR.ASSETS.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.ASSETS.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-ASSETS-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-ASSETS-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"ASSETS\",\r\n                          \"edit\",\r\n                          !rolesData.EDITOR.ASSETS.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.ASSETS.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-ASSETS-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-ASSETS-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"ASSETS\",\r\n                          \"delete\",\r\n                          !rolesData.EDITOR.ASSETS.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.ASSETS.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>COMPOSITION</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-COMPOSITION-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-COMPOSITION-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"COMPOSITION\",\r\n                          \"view\",\r\n                          !rolesData.EDITOR.COMPOSITION.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.COMPOSITION.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-COMPOSITION-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-COMPOSITION-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"COMPOSITION\",\r\n                          \"add\",\r\n                          !rolesData.EDITOR.COMPOSITION.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.COMPOSITION.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-COMPOSITION-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-COMPOSITION-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"COMPOSITION\",\r\n                          \"edit\",\r\n                          !rolesData.EDITOR.COMPOSITION.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.COMPOSITION.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-COMPOSITION-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-COMPOSITION-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"COMPOSITION\",\r\n                          \"delete\",\r\n                          !rolesData.EDITOR.COMPOSITION.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.COMPOSITION.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>QUICKPLAY</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-QUICKPLAY-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-QUICKPLAY-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"QUICKPLAY\",\r\n                          \"view\",\r\n                          !rolesData.EDITOR.QUICKPLAY.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.QUICKPLAY.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-QUICKPLAY-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-QUICKPLAY-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"QUICKPLAY\",\r\n                          \"add\",\r\n                          !rolesData.EDITOR.QUICKPLAY.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.QUICKPLAY.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-QUICKPLAY-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-QUICKPLAY-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"QUICKPLAY\",\r\n                          \"edit\",\r\n                          !rolesData.EDITOR.QUICKPLAY.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.QUICKPLAY.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-QUICKPLAY-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-QUICKPLAY-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"QUICKPLAY\",\r\n                          \"delete\",\r\n                          !rolesData.EDITOR.QUICKPLAY.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.QUICKPLAY.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>REPORTS</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-REPORTS-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-REPORTS-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"REPORTS\",\r\n                          \"view\",\r\n                          !rolesData.EDITOR.REPORTS.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.REPORTS.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-REPORTS-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-REPORTS-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"REPORTS\",\r\n                          \"add\",\r\n                          !rolesData.EDITOR.REPORTS.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.REPORTS.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-REPORTS-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-REPORTS-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"REPORTS\",\r\n                          \"edit\",\r\n                          !rolesData.EDITOR.REPORTS.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.REPORTS.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-REPORTS-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-REPORTS-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"REPORTS\",\r\n                          \"delete\",\r\n                          !rolesData.EDITOR.REPORTS.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.REPORTS.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>SCHEDULE</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-SCHEDULE-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-SCHEDULE-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"SCHEDULE\",\r\n                          \"view\",\r\n                          !rolesData.EDITOR.SCHEDULE.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.SCHEDULE.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-SCHEDULE-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-SCHEDULE-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"SCHEDULE\",\r\n                          \"add\",\r\n                          !rolesData.EDITOR.SCHEDULE.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.SCHEDULE.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-SCHEDULE-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-SCHEDULE-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"SCHEDULE\",\r\n                          \"edit\",\r\n                          !rolesData.EDITOR.SCHEDULE.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.SCHEDULE.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-SCHEDULE-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-SCHEDULE-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"SCHEDULE\",\r\n                          \"delete\",\r\n                          !rolesData.EDITOR.SCHEDULE.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.SCHEDULE.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>SCREEN</td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-SCREEN-view`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-SCREEN-view`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"SCREEN\",\r\n                          \"view\",\r\n                          !rolesData.EDITOR.SCREEN.view\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.SCREEN.view}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-SCREEN-add`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-SCREEN-add`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"SCREEN\",\r\n                          \"add\",\r\n                          !rolesData.EDITOR.SCREEN.add\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.SCREEN.add}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-SCREEN-edit`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-SCREEN-edit`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"SCREEN\",\r\n                          \"edit\",\r\n                          !rolesData.EDITOR.SCREEN.edit\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.SCREEN.edit}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <input\r\n                      className={`day-checkbox`}\r\n                      name={`checkbox-EDITOR-SCREEN-delete`}\r\n                      type=\"checkbox\"\r\n                      id={`checkbox-EDITOR-SCREEN-delete`}\r\n                      onChange={(e) =>\r\n                        handleChange(\r\n                          e,\r\n                          \"EDITOR\",\r\n                          \"SCREEN\",\r\n                          \"delete\",\r\n                          !rolesData.EDITOR.SCREEN.delete\r\n                        )\r\n                      }\r\n                      checked={rolesData.EDITOR.SCREEN.delete}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            )}\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Roles;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AddGroup.jsx",["1066","1067","1068","1069","1070","1071","1072","1073"],"import React, {useState, useEffect} from \"react\";\r\nimport { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\r\nimport Select from \"react-select\";\r\nimport {addGroups, updateGroups} from \"../../utils/api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AddGroup = ({ open, setShowGroupModel , setIsRefresh, group, type}) => {\r\n    console.log(\"group\",group)\r\n    const [name, setName] = useState(group ? group.name : \"\");\r\n    const [description, setDescription] = useState(group ? group.description : \"\");\r\n    const [error, setError] = useState('');\r\n    useEffect(() => {\r\n        if(group){   \r\n            setName(group.name);\r\n            setDescription(group.descripiton);\r\n        }\r\n    },[group])\r\n    const options = [\r\n        { value: \"MANAGER\", label: \"Manager\" },\r\n        { value: \"EDITOR\", label: \"Editor\" },\r\n      ];\r\n    const handleSubmit = async(e, type) => {\r\n        e.preventDefault();\r\n        let err = '';\r\n        if(name == ''){\r\n            err = 'Name is required';\r\n        }\r\n        else if(description == ''){\r\n            err = 'Description is required';\r\n        }\r\n        if(err){\r\n            setError(err);\r\n            return false;\r\n        }\r\n        console.log(\"error\",err)\r\n        \r\n        if(err == ''){\r\n            if(!type){\r\n                const postData = {\r\n                    name,description\r\n                }\r\n                await addGroups(postData)\r\n                  .then(response => {\r\n                    setError(null);\r\n                    setShowGroupModel(false);\r\n                    toast.success(\"Group has been added successfully !!!\", {\r\n                        position: \"top-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        theme: \"light\",\r\n                      });\r\n                      setIsRefresh(true)\r\n                  }).catch(function (error) {\r\n                    setError(error.response.data.message)\r\n                  });\r\n            }else{\r\n                console.log(\"Update\");\r\n                const postData = {\r\n                    name,groupId:group._id,description\r\n                }\r\n                await updateGroups(postData)\r\n                  .then(response => {\r\n                    console.log(response);\r\n                    setError(null);\r\n                    setShowGroupModel(false);\r\n                    toast.success(\"User has been updated successfully !!!\", {\r\n                        position: \"top-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        theme: \"light\",\r\n                      });\r\n                      setIsRefresh(true)\r\n                  }).catch(function (error) {\r\n                    setError(error.response.data.message)\r\n                  });\r\n            }\r\n            console.log(\"Submit\",name, description);\r\n            \r\n            \r\n        }\r\n        \r\n    }\r\n    return (\r\n        <Modal\r\n        className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium\"\r\n        show={open}\r\n        size=\"md\"\r\n        >\r\n        <Modal.Header>\r\n            <Modal.Title>{type && type=='edit' ?'Update ' : 'Add New '}Group</Modal.Title>\r\n            <Button\r\n                variant=\"\"\r\n                className=\"close\"\r\n                onClick={() => setShowGroupModel(false)}\r\n            >\r\n            <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n            </Button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Row>\r\n                {error && <h5 class=\"alert alert-danger text-center\">{error}</h5>}\r\n                <Col lg={12} md={12} sm={12} xs={12}>\r\n                    <label className=\"mt-3\">Enter Name</label>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            className=\"form-control input-default form-field\"\r\n                            placeholder=\"Enter Name\"\r\n                            onChange={(e) => {setName(e.target.value)}}\r\n                        />\r\n                    </div>\r\n                </Col>\r\n                <Col lg={12} md={12} sm={12} xs={12}>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"mt-3\">Enter Description</label>\r\n                        <textarea\r\n                            name=\"description\"\r\n                            value={description}\r\n                            className=\"form-control input-default form-field\"\r\n                            placeholder=\"Enter Description\"\r\n                            onChange={(e) => {setDescription(e.target.value)}}>\r\n                        </textarea>\r\n                    </div>\r\n                </Col>\r\n            \r\n            </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Row className=\"w-100 m-0\">\r\n                <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\r\n                    <Button \r\n                        className=\"cancel-btn w-100\"\r\n                        variant=\"outline-light\"\r\n                        onClick={() => setShowGroupModel(false)}\r\n                    >\r\n                    Cancel\r\n                    </Button>\r\n                </Col>\r\n                <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\r\n                    <Button\r\n                    variant=\"\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary btn-block primary-btn\"\r\n                    onClick={(e) => handleSubmit(e, type)}\r\n                    >\r\n                    Add Group\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AddGroup;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AddUserModal.jsx",["1074","1075","1076","1077","1078","1079","1080"],"import React, {useState, useEffect} from \"react\";\r\nimport { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\r\nimport Select from \"react-select\";\r\nimport {addUsers, updateUsers} from \"../../utils/api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AddUser = ({ open, setShowAddUserModel , setIsRefresh, user, type}) => {\r\n    console.log(\"user\",user)\r\n    const [name, setName] = useState(user ? user.name : \"\");\r\n    const [email, setEmail] = useState(user ? user.email : \"\");\r\n    const [password, setPassword] = useState(user ? user.password : \"\");\r\n    const [role, setRole] = useState(user ? {value:user.role.toUpperCase(),label:user.role} : \"\");\r\n    const [error, setError] = useState('');\r\n    useEffect(() => {\r\n        if(user){   \r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setPassword(user.password);\r\n            setRole({value:user.role.toUpperCase(),label:user.role});\r\n        }\r\n    },[user])\r\n    const options = [\r\n        { value: \"MANAGER\", label: \"Manager\" },\r\n        { value: \"EDITOR\", label: \"Editor\" },\r\n        { value: \"OPERATOR\", label: \"Operator\" },\r\n      ];\r\n    const handleSubmit = async(e, type) => {\r\n        e.preventDefault();\r\n        let err = '';\r\n        if(name == ''){\r\n            err = 'Name is required';\r\n        }\r\n        else if(password == '' && type == null){\r\n            err = 'password is required';\r\n        }\r\n        else if(email == ''){\r\n            err = 'Email is required';\r\n        }\r\n        else if(role == null){\r\n            err = 'Role is required';\r\n        } \r\n        if(err){\r\n            setError(err);\r\n            return false;\r\n        }\r\n        console.log(\"error\",err)\r\n        \r\n        if(err == ''){\r\n            if(!type){\r\n                const postData = {\r\n                    name, email, password, role:role.value\r\n                }\r\n                await addUsers(postData)\r\n                  .then(response => {\r\n                    console.log(response);\r\n                    setError(null);\r\n                    setShowAddUserModel(false);\r\n                    toast.success(\"User has been added successfully !!!\", {\r\n                        position: \"top-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        theme: \"light\",\r\n                      });\r\n                      setIsRefresh(true)\r\n                  }).catch(function (error) {\r\n                    setError(error.response.data.message)\r\n                  });\r\n            }else{\r\n                console.log(\"Update\");\r\n                const postData = {\r\n                    name,role:role.value,userId:user._id\r\n                }\r\n                await updateUsers(postData)\r\n                  .then(response => {\r\n                    console.log(response);\r\n                    setError(null);\r\n                    setShowAddUserModel(false);\r\n                    toast.success(\"User has been updated successfully !!!\", {\r\n                        position: \"top-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        theme: \"light\",\r\n                      });\r\n                      setIsRefresh(true)\r\n                  }).catch(function (error) {\r\n                    setError(error.response.data.message)\r\n                  });\r\n            }\r\n            console.log(\"Submit\",name, email, password,role);\r\n            \r\n            \r\n        }\r\n        \r\n    }\r\n  return (\r\n    <Modal\r\n      className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium\"\r\n      show={open}\r\n      size=\"md\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>{type && type=='edit' ?'Update ' : 'Add New '}User</Modal.Title>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setShowAddUserModel(false)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Row>\r\n            {error && <h5 class=\"alert alert-danger text-center\">{error}</h5>}\r\n          <Col lg={12} md={12} sm={12} xs={12}>\r\n          <label className=\"mt-3\">Enter Name</label>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                className=\"form-control input-default form-field\"\r\n                placeholder=\"Enter Name\"\r\n                onChange={(e) => {setName(e.target.value)}}\r\n              />\r\n            </div>\r\n          </Col>\r\n\r\n          {!type && <><Col lg={12} md={12} sm={12} xs={12}>\r\n            <div className=\"form-group\">\r\n            <label className=\"mt-3\">Enter Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                className=\"form-control input-default form-field\"\r\n                placeholder=\"Enter Email\"\r\n                onChange={(e) => {setEmail(e.target.value)}}\r\n              />\r\n            </div>\r\n          </Col><Col lg={12} md={12} sm={12} xs={12}>\r\n            <div className=\"form-group\">\r\n            <label className=\"mt-3\">Enter Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                className=\"form-control input-default form-field\"\r\n                placeholder=\"Enter Password\"\r\n                onChange={(e) => {setPassword(e.target.value)}}\r\n                autoComplete={false}\r\n              />\r\n            </div>\r\n          </Col></>}\r\n          <Col lg={12} md={12} sm={12} xs={12}>\r\n            <div className=\"form-group\">\r\n            <label className=\"mt-3\">Select Role</label>\r\n              <Select\r\n              value={role}\r\n              onChange={setRole}\r\n              placeholder=\"Select Role\"\r\n              options={options}\r\n              className=\"app-option\"\r\n            />\r\n            </div>\r\n          </Col>\r\n          \r\n        </Row>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Row className=\"w-100 m-0\">\r\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\r\n            <Button \r\n                className=\"cancel-btn w-100\"\r\n                variant=\"outline-light\"\r\n                onClick={() => setShowAddUserModel(false)}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\r\n            <Button\r\n              variant=\"\"\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block primary-btn\"\r\n              onClick={(e) => handleSubmit(e, type)}\r\n            >\r\n              {type && type === 'edit' ? 'Update User' : 'Add User'}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\settings\\User.jsx",["1081","1082","1083","1084","1085","1086","1087"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Dropdown } from \"react-bootstrap\";\r\nimport AddNewTagModal from \"../../modals/AddNewTagModal\";\r\nimport downArrow from \"../../../img/down-arrow.png\";\r\nimport menuIcon from \"../../../img/menu-icon.png\";\r\nimport veiwDetailIcon from \"../../../img/view-detail-icon.png\";\r\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\r\nimport assignIcon from \"../../../img/assign-icon.png\";\r\nimport takeScreenshotIcon from \"../../../img/tack-screenshot-icon.png\";\r\nimport { deleteUsers, updateUsers } from \"../../../utils/api\";\r\nimport { toast } from \"react-toastify\";\r\nimport AddUserModal from '../../modals/AddUserModal';\r\n\r\nconst User = ({ users, setIsRefresh, isRefresh }) => {\r\n//   const [showNewTagModal, setNewTagModal] = useState(false);\r\n//   const [selectedScreen, setSelectedScreen] = useState(\"\");\r\n//   const [showPublishPopUp, setShowPublishPopUp] = useState(false);\r\nconst [showAddUserModel, setShowAddUserModel] = useState(false);\r\nconst [user, setUser] = useState(null);\r\n\r\nconst deleteuserRecord = async (e, id) => {\r\n  e.preventDefault();\r\n  await deleteUsers(id);\r\n  toast.success(\"User has been deleted successfully !!!\", {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  });\r\n  setIsRefresh(!isRefresh);\r\n}\r\n\r\nconst handleEditiUser = (e, item) => {\r\n  e.preventDefault();\r\n  setShowAddUserModel(true);\r\n  setUser(item)\r\n  console.log(\"Add User\")\r\n}\r\n\r\n  return (\r\n    <>\r\n    <AddUserModal open={showAddUserModel} setShowAddUserModel={setShowAddUserModel} setIsRefresh={setIsRefresh} user={user} setUser={setUser} type={'edit'}/>\r\n      <Table responsive className=\"custom-table screen-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Created Date</th>\r\n            <th>Role</th>\r\n            <th>status</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users !== \"\" &&\r\n            users.map((item) => {\r\n              return (\r\n                <tr id={item._id}>\r\n                  <td>\r\n                    <span className=\"td-content\">\r\n                      <strong>{item.name}</strong>\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"d-flex align-items-center\">\r\n                      <span className=\"status status-green\"></span>\r\n                      <span className=\"td-content\">\r\n                        <strong>{item.email}</strong>\r\n                      </span>\r\n                    </span>\r\n                  </td>\r\n                  <td>{item.createdAt}</td>\r\n                  <td>{item.role}</td>\r\n                  <td>{item.isVerified == true ? 'Active' : \"Deactive\"}</td>\r\n                  <td>\r\n                    <Dropdown className=\"dropdown-toggle-menu\">\r\n                      <Dropdown.Toggle variant=\"\" className=\"p-0  mb-2\">\r\n                        <span className=\"table-menu-icon\">\r\n                          <img\r\n                            className=\"menu-img img-fluid\"\r\n                            src={menuIcon}\r\n                            alt=\"menu-icon\"\r\n                          />\r\n                        </span>\r\n                      </Dropdown.Toggle>\r\n                      <Dropdown.Menu>\r\n                        {/* <Dropdown.Item \r\n                          // onClick={() => {\r\n                          //   setShowPublishPopUp(true);\r\n                          //   setSelectedScreen(screen._id)\r\n                          // }}\r\n                          className=\"dropdown-list-item\"\r\n                        >\r\n                          <div className=\"d-flex\">\r\n                            <div className=\"dropdown-list-icon\">\r\n                              <img\r\n                                className=\"dropdown-list-img img-fluid\"\r\n                                src={defaultComparisonIcon}\r\n                                alt=\"menu-icon\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"dropdown-menu-list\">\r\n                              <span className=\"menu-heading\">Disable User</span>\r\n                            </div>\r\n                          </div>\r\n                        </Dropdown.Item> */}\r\n                        <Dropdown.Item \r\n                          onClick={(e) => {handleEditiUser(e, item)}}\r\n                           className=\"dropdown-list-item\">\r\n                          <div className=\"d-flex\">\r\n                            <div className=\"dropdown-list-icon\">\r\n                              <img\r\n                                className=\"dropdown-list-img img-fluid\"\r\n                                src={assignIcon}\r\n                                alt=\"menu-icon\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"dropdown-menu-list\">\r\n                              <span className=\"menu-heading\">Edit User</span>\r\n                            </div>\r\n                          </div>\r\n                        </Dropdown.Item>\r\n                        {/* <Dropdown.Item href=\"#\" className=\"dropdown-list-item\">\r\n                          <div className=\"d-flex\">\r\n                            <div className=\"dropdown-list-icon\">\r\n                              <img\r\n                                className=\"dropdown-list-img img-fluid\"\r\n                                src={takeScreenshotIcon}\r\n                                alt=\"menu-icon\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"dropdown-menu-list\">\r\n                              <span className=\"menu-heading\">Change Password</span>\r\n                            </div>\r\n                          </div>\r\n                        </Dropdown.Item> */}\r\n                        <Dropdown.Item \r\n                           onClick={(e)=>{deleteuserRecord(e, item._id)}}\r\n                           className=\"dropdown-list-item\">\r\n                          <div className=\"d-flex\">\r\n                            <div className=\"dropdown-list-icon\">\r\n                              <img\r\n                                className=\"dropdown-list-img img-fluid\"\r\n                                src={takeScreenshotIcon}\r\n                                alt=\"menu-icon\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"dropdown-menu-list\">\r\n                              <span className=\"menu-heading\">Delete User</span>\r\n                            </div>\r\n                          </div>\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\settings\\defaultComposition.jsx",["1088"],"import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport VideoThumbnail from \"react-video-thumbnail\";\r\nimport emptyMediaImg from \"../../../images/card/1.png\";\r\nimport { BASE_URL, getAllComposition, vendorProfile } from \"../../../utils/api\";\r\nimport DefaultCompositionModal from \"../../modals/DefaultCompositionModal\";\r\n\r\nconst DefaultComposition = () => {\r\n  const defaultMediaUrl = `${BASE_URL}/default/file_1681896290177.png`;\r\n  const [defaultCompositionShow, setDefaultCompositionShow] = useState(false);\r\n  const [compositionList, setCompositionList] = useState();\r\n  const [showDefaultComposition, setShowDefaultComposition] = useState(\"\");\r\n  console.log(showDefaultComposition, \"lloooooo\");\r\n  async function getComPosition() {\r\n    await getAllComposition().then((res) => {\r\n      console.log(res, \"res push screen, DefaultComposition\");\r\n      setCompositionList(res);\r\n    });\r\n  }\r\n  async function getVendorProfile() {\r\n    await vendorProfile().then((res) => {\r\n      console.log(res, \"res push screen, vendorProfile\");\r\n      setShowDefaultComposition(res.data.data.defaultComposition);\r\n    });\r\n  }\r\n  const content = showDefaultComposition?.media?.zones[0].content[0];\r\n  useEffect(() => {\r\n    getComPosition();\r\n    getVendorProfile();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"row settings-default\">\r\n        <Col xl=\"6\">\r\n          <div className=\"default-composition-preview\">\r\n            <div className=\"thumbnail\">\r\n              {content?.type === \"image\" && (\r\n                <img\r\n                  className=\" imgContent\"\r\n                  src={`${BASE_URL}${content.url}`}\r\n                  alt=\"media-img\"\r\n                />\r\n              )}\r\n              {content?.type !== \"image\" && content?.type !== \"video\" && (\r\n                <img\r\n                  className=\"imgContent\"\r\n                  src={defaultMediaUrl}\r\n                  alt=\"Card cap\"\r\n                />\r\n              )}\r\n              {content?.type === \"video\" && (\r\n                <VideoThumbnail\r\n                  videoUrl={`${BASE_URL}/vendor/display/mediaFile?path=${content.url}`}\r\n                  thumbnailHandler={(thumbnail) =>\r\n                    console.log(thumbnail, \"pppppp\")\r\n                  }\r\n                  width={426}\r\n                  height={240}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col xl=\"6\">\r\n          <div className=\"mb-4\">\r\n            <h4 className=\"card-title card-intro-title\">\r\n              Organisation default composition\r\n            </h4>\r\n            <p>\r\n              The composition will be applied to all newly added displays in the\r\n              organization\r\n            </p>\r\n            <p className=\"font-weight-bold\">\r\n              Default Composition: {showDefaultComposition?.media?.name}\r\n              <span\r\n                className=\"btn-icon-right text-info\"\r\n                onClick={() => {\r\n                  setDefaultCompositionShow(true);\r\n                }}\r\n              >\r\n                <i className=\"fa fa-pencil\" />\r\n              </span>\r\n            </p>\r\n            {showDefaultComposition?.duration && (\r\n              <p className=\"font-weight-bold\">\r\n                Duration: {showDefaultComposition?.duration} seconds\r\n              </p>\r\n            )}\r\n          </div>\r\n        </Col>\r\n      </div>\r\n      <DefaultCompositionModal\r\n        close={() => setDefaultCompositionShow(false)}\r\n        show={defaultCompositionShow}\r\n        compositionList={compositionList}\r\n        getVendorProfile={() => getVendorProfile()}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultComposition;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\nav\\Logout.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\UploadMediaFileModal.jsx",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\chatBox\\Alerts.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\chatBox\\Notes.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\chatBox\\Chat.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\duplicateComposition.jsx",["1089","1090"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\layouts\\viewDetails.jsx",["1091"],"import { Button, Modal, Row, Col, Table } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../../img/cancel-icon.png\";\r\n\r\nimport Rectangle from \"../../../img/Rectangle.png\";\r\n\r\nimport \"../../components/Table.css\";\r\nimport layoutSelected from \"../../../img/layout-select-img.png\";\r\n// import tagCloseIcon from \"../../img/tag-close-icon.png\";\r\nimport { BASE_URL } from \"../../../utils/api\";\r\nimport { Link } from \"react-router-dom\";\r\nconst ViewDetails = ({ setViewDetailsModal, composition }) => {\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        className={`fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium`}\r\n        show={true}\r\n        size=\"md\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Composition Details</Modal.Title>\r\n          <Button\r\n            variant=\"\"\r\n            className=\"close\"\r\n            onClick={() => setViewDetailsModal(false)}\r\n          >\r\n            <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n          </Button>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <div>\r\n            <div className=\" d-flex align-items-center justify-content-center flex-column mx-auto\">\r\n              <img className=\"\" src={Rectangle} alt=\"upload-img\" />\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-center flex-column mx-auto\">\r\n              Duration : {composition.duration} sec\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-center flex-column mx-auto\">\r\n              {composition.layout.zones.map((zone) => {\r\n                return (\r\n                  <span variant=\"\" type=\"button\" className=\" zoneName\">\r\n                    {zone.name}\r\n                  </span>\r\n                );\r\n              })}\r\n            </div>\r\n            <hr className=\"new1\" />\r\n            <Table responsive className=\"custom-table mt-3\">\r\n              <tbody>\r\n              {composition.zones[0].content.map((content, index) => {\r\n                return (\r\n                    <tr>\r\n                    <td>{index + 1}.</td>\r\n                    <td>\r\n                    <span className=\"td-content d-flex name-td-content\">\r\n                      <span className={`name-img mr-2  ${content.type === \"video\" && \"videotableName\"}`}>\r\n                      {content.type === \"image\" && <img\r\n                          className=\"media-img img-fluid\"\r\n                          src={`${BASE_URL}${content.url}`}\r\n                          alt=\"media-img\"\r\n                        />}\r\n                         {content.type === \"video\" && content?.duration.toFixed(0)/60}\r\n                      </span>\r\n                      <span className=\"name-content d-flex flex-column flex-grow-1\">\r\n                        <strong>{content.url.split(\"/\")[content.url.split(\"/\").length -1]}</strong>\r\n                        {/* <span>{content.createdBy}</span> */}\r\n                      </span>\r\n                    </span>\r\n                  </td>\r\n\r\n                  <td>\r\n                    <span className=\"my-phone-tag  ml-1\">{(content?.duration).toFixed(0)} Sec</span>\r\n                  </td>\r\n                </tr>\r\n                )\r\n              })}\r\n\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Row className=\"w-100 m-0\">\r\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\r\n              <Button\r\n                className=\"cancel-btn w-100\"\r\n                variant=\"outline-light\"\r\n                onClick={() => {\r\n                  setViewDetailsModal(false);\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\r\n            <Link to={`/composition/edit?id=${composition._id}`}>\r\n            <Button\r\n                variant=\"\"\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-block primary-btn\"\r\n              >\r\n                Edit Details\r\n              </Button>\r\n            </Link>\r\n              \r\n            </Col>\r\n          </Row>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewDetails;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\saveCompositionName.jsx",["1092","1093"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\r\n\r\nconst SaveCompositionName = ({\r\n  setModalState,\r\n  saveComposition,\r\n  name,\r\n  setName,\r\n}) => {\r\n  return (\r\n    <Modal\r\n      className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium\"\r\n      show={true}\r\n      size=\"md\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Save Composition</Modal.Title>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setModalState(false)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"add-screen-paragraph\">\r\n          <p>Give your composition a name.</p>\r\n        </div>\r\n\r\n        <Row>\r\n          <Col lg={12} md={12} sm={12} xs={12}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                value={name}\r\n                onChange={(event) => {\r\n                  setName(event.target.value);\r\n                }}\r\n                type=\"text\"\r\n                className=\"form-control input-default form-field\"\r\n                placeholder=\"Enter Name\"\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Row className=\"w-100 m-0\">\r\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\r\n            <Button\r\n              className=\"cancel-btn w-100\"\r\n              variant=\"outline-light\"\r\n              onClick={() => setModalState(false)}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\r\n            <Button\r\n              variant=\"\"\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block primary-btn\"\r\n              onClick={() =>{\r\n                if(name.length){\r\n                  saveComposition()\r\n                }\r\n              }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SaveCompositionName;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Composition\\ZoneInfoTable.jsx",["1094","1095","1096","1097","1098","1099","1100","1101","1102","1103"],"import React, { useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nimport editBtnImg from \"../../../../img/edit-btn.png\";\r\nimport deleteBtnImg from \"../../../../img/delete-btn.png\";\r\nimport { BASE_URL } from \"../../../../utils/api\";\r\nimport EditSelectedComposition from \"../../../modals/editSelectedComposition\";\r\n\r\nconst ZoneInfoTable = ({\r\n  content,\r\n  setContent,\r\n  setReferenceUrl,\r\n  layout,\r\n  handleLayout,\r\n}) => {\r\n  console.log(\"Content\", content)\r\n  const [editSelected, setEditSelected] = useState(null);\r\n  const [selectedZone, setSelectedZone] = useState(\"Zone1\");\r\n  const [activeClass, setActiveClass] = useState(false);\r\n  const [selectedButtonIndex, setSelectedButtonIndex] = useState(0);\r\n\r\n  const handleChange = (event, index) => {\r\n    const newValue = event.target.value.replace(/[^\\d]/g, \"\");\r\n    setContent((prev) => {\r\n      const updateMedia = prev.map((val, key) => {\r\n        if (key === index) {\r\n          val.duration = newValue;\r\n        }\r\n        return val;\r\n      });\r\n      return [...updateMedia];\r\n    });\r\n  };\r\n  const makeZoneColor = (zones) => {\r\n    const data = {};\r\n    zones.forEach((item, index) => {\r\n      data[item.name] = index == 0 ? true : false;\r\n    });\r\n    return data;\r\n  };\r\n  const [zoneColor, setZoneColor] = useState(makeZoneColor(layout.zones));\r\n\r\n  const handleZoneButton = (zone1) => {\r\n    setZoneColor({ ...zoneColor, [selectedZone]: false, [zone1]: true });\r\n    setSelectedZone(zone1);\r\n    handleLayout(zone1);\r\n  };\r\n\r\n  const Duration = (composition, index) => {\r\n    return (\r\n      <div className=\"tag-container mediaDUrationTag\">\r\n        {\" \"}\r\n        <input\r\n          onChange={(event) => {\r\n            handleChange(event, index);\r\n          }}\r\n          value={Number(composition.duration).toFixed(0)}\r\n          disabled={composition.type === \"video\"}\r\n        />\r\n        <span>sec</span>\r\n      </div>\r\n    );\r\n  };\r\n  const TotalDuration = () => {\r\n    let total = 0;\r\n    content.forEach((composition) => {\r\n      total += Number(composition.duration);\r\n    });\r\n    return total.toFixed(0);\r\n  };\r\n\r\n  const removeComposition = (index) => {\r\n    setContent((prev) => {\r\n      const updateMedia = prev.filter((val, key) => key !== index);\r\n      return [...updateMedia];\r\n    });\r\n\r\n    setReferenceUrl((prev) => {\r\n      const updateUrl = prev.filter((val, key) => key !== index);\r\n      return [...updateUrl];\r\n    });\r\n  };\r\n\r\n  const editComposition = (index) => {\r\n    setEditSelected(index);\r\n  };\r\n\r\n  const updateViewType = (data, viewImage, ImgUrl) => {\r\n    setContent((prev) => {\r\n      const updateMedia = prev.map((val, key) => {\r\n        if (key === editSelected) {\r\n          val.fitToScreen = viewImage === \"fitScreen\";\r\n          val.maintainAspectRatio = viewImage === \"aspectRation\";\r\n          val.crop = viewImage === \"crop\" ? true : false;\r\n        }\r\n        return val;\r\n      });\r\n      return [...updateMedia];\r\n    });\r\n\r\n    setReferenceUrl((prev) => {\r\n      const updateMedia = prev.map((val, key) => {\r\n        if (key === editSelected) {\r\n          return ImgUrl+\"**\"+selectedZone;\r\n        } else {\r\n          return val;\r\n        }\r\n      });\r\n      return [...updateMedia];\r\n    });\r\n  };\r\n\r\n  const handleButtonClick = (index) => {\r\n    setSelectedButtonIndex(index);\r\n    // Perform any other logic specific to the clicked button\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        responsive\r\n        className=\"custom-table screen-table layout-table h-100\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th colSpan={4}>\r\n              <span className=\"d-flex flex-wrap\">\r\n                {layout && (layout.title === 'Single Zone Potrait' || layout.title === 'Two Zone Potrait') ?\r\n                    <span\r\n                      className={`yellow-box-portrait ${layout.title}`}\r\n                      style={{\r\n                        backgroundColor:\r\n                          layout &&\r\n                          (layout.zones.length == 2\r\n                            ? \"#fff\"\r\n                            : \"#ffc12b\"),\r\n                      }}\r\n                    >\r\n                      {layout && layout.zones.length == 2 ? (\r\n                        <>\r\n                          <div\r\n                            className=\"zone-layout2\"\r\n                            style={{\r\n                              backgroundColor: zoneColor[\"Zone1\"] ? \"#ffc12b\" : \"\",\r\n                            }}\r\n                          ></div>\r\n                          <div\r\n                            className=\"zone-layout22\"\r\n                            style={{\r\n                              backgroundColor: zoneColor[\"Zone2\"] ? \"#ffc12b\" : \"\",\r\n                            }}\r\n                          ></div>\r\n                        </>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </span> : \r\n                    <span\r\n                      className={`yellow-box ${layout.title}`}\r\n                      style={{\r\n                        backgroundColor:\r\n                          layout &&\r\n                          (layout.zones.length == 2 || layout.zones.length == 3\r\n                            ? \"#fff\"\r\n                            : \"#ffc12b\"),\r\n                      }}\r\n                    >\r\n                      {layout && layout.zones.length == 2 ? (\r\n                        <>\r\n                          <div\r\n                            className=\"zone-layout2\"\r\n                            style={{\r\n                              backgroundColor: zoneColor[\"Zone1\"] ? \"#ffc12b\" : \"\",\r\n                            }}\r\n                          ></div>\r\n                          <div\r\n                            className=\"zone-layout22\"\r\n                            style={{\r\n                              backgroundColor: zoneColor[\"Zone2\"] ? \"#ffc12b\" : \"\",\r\n                            }}\r\n                          ></div>\r\n                        </>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                      {layout && layout.zones.length == 3 ? (\r\n                        <>\r\n                          <div\r\n                            className=\"zone-layout31\"\r\n                            style={{\r\n                              backgroundColor: zoneColor[\"Zone1\"] ? \"#ffc12b\" : \"\",\r\n                            }}\r\n                          ></div>\r\n                          <div\r\n                            className=\"zone-layout32\"\r\n                            style={{\r\n                              backgroundColor: zoneColor[\"Zone2\"] ? \"#ffc12b\" : \"\",\r\n                            }}\r\n                          ></div>\r\n                          <div\r\n                            className=\"zone-layout33\"\r\n                            style={{\r\n                              backgroundColor: zoneColor[\"Zone3\"] ? \"#ffc12b\" : \"\",\r\n                            }}\r\n                          ></div>\r\n                        </>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </span>\r\n                    }\r\n                \r\n                {layout &&\r\n                  layout.zones.map((item, i) => {\r\n                    return (\r\n                      <button\r\n                        key={i}\r\n                        onClick={() => {\r\n                          handleZoneButton(item.name);\r\n                          handleButtonClick(i);\r\n                          // setActiveClass(true);\r\n                        }}\r\n                        // className=\"zone\"\r\n                        // className={activeClass ? \"zone zone-active \" : \"zone\"}\r\n                        className={\r\n                          selectedButtonIndex === i\r\n                            ? \"zone zone-active \"\r\n                            : \"zone\"\r\n                        }\r\n                      >\r\n                        {item.name}\r\n                      </button>\r\n                    );\r\n                  })}\r\n                <span className=\"duration\">\r\n                  Duration : {TotalDuration()} sec\r\n                </span>\r\n              </span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {content.map((composition, index) => {\r\n            return composition.zone == selectedZone ? (\r\n              <tr key={composition.id}>\r\n                <td>{index + 1}.</td>\r\n                <td>\r\n                  <span className=\"td-content d-flex name-td-content\">\r\n                    <span\r\n                      className={`name-img mr-2  ${\r\n                        composition.type === \"video\" && \"videotableName\"\r\n                      }`}\r\n                    >\r\n                      {composition.type === \"image\" && (\r\n                        <img\r\n                          className=\"media-img img-fluid\"\r\n                          src={`${BASE_URL}${composition.url}`}\r\n                          alt=\"media-img\"\r\n                        />\r\n                      )}\r\n                      {composition.type === \"video\" &&\r\n                        composition.duration.toFixed(0) / 60}\r\n                    </span>\r\n                    <span className=\"name-content d-flex flex-column flex-grow-1\">\r\n                      <strong>\r\n                        {\r\n                          composition.url.split(\"/\")[\r\n                            composition.url.split(\"/\").length - 1\r\n                          ]\r\n                        }\r\n                      </strong>\r\n                      <span>{composition.createdBy}</span>\r\n                    </span>\r\n                  </span>\r\n                </td>\r\n                <td style={{ width: \"180px\" }}>\r\n                  {Duration(composition, index)}\r\n                </td>\r\n                <td>\r\n                  <span className=\"layout-edit-btn mr-2 \">\r\n                    <img\r\n                      className=\"edit-icon cursorPointer\"\r\n                      src={editBtnImg}\r\n                      alt=\"search\"\r\n                      onClick={() => {\r\n                        // if(composition.type === \"image\"){\r\n                        editComposition(index);\r\n                        // }\r\n                      }}\r\n                    />\r\n                  </span>\r\n                  <span\r\n                    className=\"layout-edit-btn\"\r\n                    onClick={() => {\r\n                      removeComposition(index);\r\n                    }}\r\n                  >\r\n                    <img\r\n                      className=\"edit-icon cursorPointer\"\r\n                      src={deleteBtnImg}\r\n                      alt=\"search\"\r\n                    />\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              <></>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {editSelected !== null && (\r\n        <EditSelectedComposition\r\n          composition={content[editSelected]}\r\n          setEditSelected={setEditSelected}\r\n          updateViewType={updateViewType}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ZoneInfoTable;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\layout\\Composition\\CompositionTable.jsx",["1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\previewComposition.jsx",["1133","1134","1135","1136","1137","1138","1139"],"import { Button, Modal } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport WebVideoPlayer from \"../components/web-player/WebVideoPlayer\";\r\nimport { BASE_URL } from \"../../utils/api\";\r\nimport { isBlobUrl } from \"../../utils/UtilsService\";\r\nconst PreviewComposition = ({\r\n  setShowPreview,\r\n  content,\r\n  contentnew,\r\n  layout,\r\n  referenceUrl,\r\n  referenceUrlArray,\r\n}) => {\r\n  console.log(layout, \"layout\");\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [current1Index, setCurrent1Index] = useState(0);\r\n  const [current2Index, setCurrent2Index] = useState(0);\r\n  const timeoutRef = useRef(\"\");\r\n  const timeout1Ref = useRef(\"\");\r\n  const divRef = useRef(null);\r\n  useEffect(() => {\r\n    if (layout && layout.zones.length == 1) {\r\n      if (contentnew.Zone1[currentIndex]) {\r\n        const timeoutDuration = contentnew.Zone1[currentIndex].duration * 1000;\r\n        timeoutRef.current = setTimeout(() => {\r\n          if (currentIndex === contentnew.Zone1.length - 1) {\r\n            setCurrentIndex(0);\r\n          } else {\r\n            setCurrentIndex((currentIndex) => currentIndex + 1);\r\n          }\r\n        }, timeoutDuration);\r\n      }\r\n    } else if (layout && layout.zones.length == 2) {\r\n      if (contentnew.Zone1[currentIndex]) {\r\n        const timeoutDuration = contentnew.Zone1[currentIndex].duration * 1000;\r\n        timeoutRef.current = setTimeout(() => {\r\n          if (currentIndex === contentnew.Zone1.length - 1) {\r\n            setCurrentIndex(0);\r\n          } else {\r\n            setCurrentIndex((currentIndex) => currentIndex + 1);\r\n          }\r\n        }, timeoutDuration);\r\n      }\r\n      if (contentnew.Zone2 && contentnew.Zone2[current1Index]) {\r\n        const timeout1Duration =\r\n          contentnew.Zone2[current1Index].duration * 1000;\r\n        timeout1Ref.current = setTimeout(() => {\r\n          if (current1Index === contentnew.Zone2.length - 1) {\r\n            setCurrent1Index(0);\r\n          } else {\r\n            setCurrent1Index((current1Index) => current1Index + 1);\r\n          }\r\n        }, timeout1Duration);\r\n      }\r\n    } else if (layout && layout.zones.length == 3) {\r\n      if (contentnew.Zone1[currentIndex]) {\r\n        const timeoutDuration = contentnew.Zone1[currentIndex].duration * 1000;\r\n        timeoutRef.current = setTimeout(() => {\r\n          if (currentIndex === contentnew.Zone1.length - 1) {\r\n            setCurrentIndex(0);\r\n          } else {\r\n            setCurrentIndex((currentIndex) => currentIndex + 1);\r\n          }\r\n        }, timeoutDuration);\r\n      }\r\n      if (contentnew.Zone2 && contentnew.Zone2[current1Index]) {\r\n        const timeout1Duration =\r\n          contentnew.Zone2[current1Index].duration * 1000;\r\n        timeout1Ref.current = setTimeout(() => {\r\n          if (current1Index === contentnew.Zone2.length - 1) {\r\n            setCurrent1Index(0);\r\n          } else {\r\n            setCurrent1Index((current1Index) => current1Index + 1);\r\n          }\r\n        }, timeout1Duration);\r\n      }\r\n      if (contentnew.Zone3 && contentnew.Zone3[current2Index]) {\r\n        const timeout1Duration =\r\n          contentnew.Zone3[current2Index]?.duration * 1000;\r\n        timeout1Ref.current = setTimeout(() => {\r\n          if (current2Index === contentnew.Zone3.length - 1) {\r\n            setCurrent2Index(0);\r\n          } else {\r\n            setCurrent2Index((current2Index) => current2Index + 1);\r\n          }\r\n        }, timeout1Duration);\r\n      }\r\n    }\r\n\r\n    return () => clearTimeout(timeoutRef.current);\r\n  }, [currentIndex, current1Index]);\r\n\r\n  const onFullScreen = () => {\r\n    const element = document.getElementsByClassName(\r\n      \"modal-priview-composition\"\r\n    )[0];\r\n    // if (element.classList.contains(\"fullscreen-mode\")) {\r\n    //   element.classList.remove(\"fullscreen-mode\");\r\n    // }\r\n\r\n    if (element) {\r\n      // divRef.current.requestFullscreen();\r\n      if (element.requestFullscreen) {\r\n        element.requestFullscreen();\r\n      } else if (element.webkitRequestFullscreen) {\r\n        element.webkitRequestFullscreen();\r\n      } else if (element.msRequestFullscreen) {\r\n        element.msRequestFullscreen();\r\n      }\r\n      element.classList.add(\"fullscreen-mode\");\r\n    }\r\n  };\r\n\r\n  const viewImage = content[currentIndex].fitToScreen\r\n    ? \"fitScreen\"\r\n    : content[currentIndex].crop\r\n    ? \"crop\"\r\n    : \"aspectRation\";\r\n\r\n  // const url = isBlobUrl(referenceUrl[currentIndex])\r\n  //   ? referenceUrl[currentIndex]\r\n  //   : `${BASE_URL}${referenceUrl[currentIndex]}`;\r\n\r\n  const url =\r\n    referenceUrlArray.Zone1 && referenceUrlArray.Zone1[currentIndex]\r\n      ? isBlobUrl(referenceUrlArray.Zone1[currentIndex])\r\n        ? referenceUrlArray.Zone1[currentIndex]\r\n        : `${BASE_URL}${referenceUrlArray.Zone1[currentIndex]}`\r\n      : \"\";\r\n\r\n  const url1 =\r\n    referenceUrlArray.Zone2 && referenceUrlArray.Zone2[current1Index]\r\n      ? isBlobUrl(referenceUrlArray.Zone2[current1Index])\r\n        ? referenceUrlArray.Zone2[current1Index]\r\n        : `${BASE_URL}${referenceUrlArray.Zone2[current1Index]}`\r\n      : \"\";\r\n\r\n  const url2 =\r\n    referenceUrlArray.Zone3 && referenceUrlArray.Zone3[current2Index]\r\n      ? isBlobUrl(referenceUrlArray.Zone3[current2Index])\r\n        ? referenceUrlArray.Zone3[current2Index]\r\n        : `${BASE_URL}${referenceUrlArray.Zone3[current2Index]}`\r\n      : \"\";\r\n\r\n  return (\r\n    <Modal\r\n      className={`fade bd-example-modal-lg mt-4 custom-modal custom-modal-large custom-modal-preview ${layout.screenType}-view`}\r\n      show={true}\r\n      size=\"xl\"\r\n    >\r\n      <Modal.Header style={{ paddingBottom: \"0px\" }}>\r\n        <Modal.Title className=\"mr-auto\">Preview</Modal.Title>\r\n\r\n        <Button variant=\"\" className=\"close \" onClick={() => onFullScreen()}>\r\n          <i class=\"fa fa-expand fullscreenbtn\"></i>\r\n        </Button>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setShowPreview(false)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body ref={divRef} style={{ padding: \"15px\" }}>\r\n        {layout && layout.zones.length == 1 ? (\r\n          <>\r\n            {content[currentIndex] &&\r\n              content[currentIndex].type === \"image\" && (\r\n                <div\r\n                  className=\"basic-list-group image-preview-container media-content modal-priview-composition\"\r\n                  style={{ height: \"560px\" }}\r\n                >\r\n                  <img\r\n                    className=\"webplayer-preview-img\"\r\n                    style={{\r\n                      objectFit: `${\r\n                        viewImage === \"fitScreen\" ? \"fill\" : \"contain\"\r\n                      }`,\r\n                    }}\r\n                    src={url}\r\n                    alt=\"media-img\"\r\n                  />\r\n                </div>\r\n              )}\r\n            {content[currentIndex] &&\r\n              content[currentIndex].type === \"video\" && (\r\n                <div\r\n                  className={`basic-list-group video-container media-content ${viewImage} ${\r\n                    viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\r\n                  }`}\r\n                >\r\n                  <WebVideoPlayer src={url}></WebVideoPlayer>\r\n                </div>\r\n              )}\r\n          </>\r\n        ) : layout.zones.length == 2 ? (\r\n          <div className=\"modal-priview-composition\" style={{ height: \"80vh\" }}>\r\n            <div className=\"top-div\">\r\n              {contentnew.Zone1[currentIndex] &&\r\n                contentnew.Zone1[currentIndex].type === \"image\" && (\r\n                  <div className=\"basic-list-group image-preview-container media-content\">\r\n                    <img\r\n                      className=\"webplayer-preview-img\"\r\n                      style={{\r\n                        objectFit: `${\r\n                          viewImage === \"fitScreen\" ? \"fill\" : \"contain\"\r\n                        }`,\r\n                      }}\r\n                      //src={`https://ssapi.trendysignage.com/${contentnew.Zone1[currentIndex].url}`}\r\n                      src={url}\r\n                      alt=\"media-img\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              {contentnew.Zone2 &&\r\n                contentnew.Zone1[currentIndex] &&\r\n                contentnew.Zone1[currentIndex].type === \"video\" && (\r\n                  <div\r\n                    className={`basic-list-group video-container media-content ${viewImage} ${\r\n                      viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\r\n                    }`}\r\n                    style={{ height: \"100%\" }}\r\n                  >\r\n                    <WebVideoPlayer\r\n                      //src={`https://ssapi.trendysignage.com/${contentnew.Zone1[currentIndex].url}`}\r\n                      src={url}\r\n                    ></WebVideoPlayer>\r\n                  </div>\r\n                )}\r\n            </div>\r\n            <div className=\"bottom-div\">\r\n              {contentnew.Zone2 &&\r\n                contentnew.Zone2[current1Index] &&\r\n                contentnew.Zone2[current1Index].type === \"image\" && (\r\n                  <div\r\n                    className=\"basic-list-group image-preview-container media-content\"\r\n                    style={{ height: \"100%\" }}\r\n                  >\r\n                    <img\r\n                      className=\"webplayer-preview-img\"\r\n                      style={{\r\n                        objectFit: `${\r\n                          viewImage === \"fitScreen\" ? \"fill\" : \"contain\"\r\n                        }`,\r\n                      }}\r\n                      //src={`https://ssapi.trendysignage.com/${contentnew.Zone2[current1Index].url}`}\r\n                      src={url1}\r\n                      alt=\"media-img\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              {contentnew.Zone2 &&\r\n                contentnew.Zone2[current1Index] &&\r\n                contentnew.Zone2[current1Index].type === \"video\" && (\r\n                  <div\r\n                    className={`basic-list-group video-container media-content ${viewImage} ${\r\n                      viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\r\n                    }`}\r\n                    style={{ height: \"100%\" }}\r\n                  >\r\n                    <WebVideoPlayer\r\n                      //src={`https://ssapi.trendysignage.com/${contentnew.Zone2[current1Index].url}`}\r\n                      src={url1}\r\n                    ></WebVideoPlayer>\r\n                  </div>\r\n                )}\r\n            </div>\r\n          </div>\r\n        ) : layout.zones.length == 3 ? (\r\n          <div\r\n            className=\"modal-priview-composition\"\r\n            style={{ height: \"560px\" }}\r\n          >\r\n            <div className=\"third-compoition-container\">\r\n              <div className=\"third-composition-top-div\">\r\n                {contentnew.Zone1[currentIndex] &&\r\n                  contentnew.Zone1[currentIndex].type === \"image\" && (\r\n                    <div className=\"basic-list-group image-preview-container media-content\">\r\n                      <img\r\n                        className=\"webplayer-preview-img\"\r\n                        style={{\r\n                          objectFit: `${\r\n                            viewImage === \"fitScreen\" ? \"fill\" : \"contain\"\r\n                          }`,\r\n                        }}\r\n                        // src={`https://ssapi.trendysignage.com/${contentnew.Zone1[currentIndex].url}`}\r\n                        src={url}\r\n                        alt=\"media-img\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                {contentnew.Zone1[currentIndex] &&\r\n                  contentnew.Zone1[currentIndex].type === \"video\" && (\r\n                    <div\r\n                      className={`basic-list-group video-container media-content ${viewImage} ${\r\n                        viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\r\n                      }`}\r\n                    >\r\n                      <WebVideoPlayer\r\n                        //src={`https://ssapi.trendysignage.com/${contentnew.Zone1[currentIndex].url}`}\r\n                        src={url}\r\n                      ></WebVideoPlayer>\r\n                    </div>\r\n                  )}\r\n              </div>\r\n              <div className=\"third-composition-second-div\">\r\n                {contentnew.Zone2[current1Index] &&\r\n                  contentnew.Zone2[current1Index].type === \"image\" && (\r\n                    <div className=\"basic-list-group image-preview-container media-content\">\r\n                      <img\r\n                        className=\"webplayer-preview-img\"\r\n                        style={{\r\n                          objectFit: `${\r\n                            viewImage === \"fitScreen\" ? \"fill\" : \"contain\"\r\n                          }`,\r\n                        }}\r\n                        //src={`https://ssapi.trendysignage.com/${contentnew.Zone2[current1Index].url}`}\r\n                        src={url1}\r\n                        alt=\"media-img\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                {contentnew.Zone2[current1Index] &&\r\n                  contentnew.Zone2[current1Index].type === \"video\" && (\r\n                    <div\r\n                      className={`basic-list-group video-container media-content ${viewImage} ${\r\n                        viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\r\n                      }`}\r\n                    >\r\n                      <WebVideoPlayer\r\n                        //src={`https://ssapi.trendysignage.com/${contentnew.Zone2[current1Index].url}`}\r\n                        src={url1}\r\n                      ></WebVideoPlayer>\r\n                    </div>\r\n                  )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"third-composition-third-div\">\r\n              {contentnew.Zone3[current2Index] &&\r\n                contentnew.Zone3[current2Index].type === \"image\" && (\r\n                  <div className=\"basic-list-group image-preview-container media-content\">\r\n                    <img\r\n                      className=\"webplayer-preview-img\"\r\n                      style={{\r\n                        objectFit: `${\r\n                          viewImage === \"fitScreen\" ? \"fill\" : \"contain\"\r\n                        }`,\r\n                      }}\r\n                      //src={`https://ssapi.trendysignage.com/${contentnew.Zone3[current2Index].url}`}\r\n                      src={url2}\r\n                      alt=\"media-img\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              {contentnew.Zone3[current2Index] &&\r\n                contentnew.Zone3[current2Index].type === \"video\" && (\r\n                  <div\r\n                    className={`basic-list-group video-container media-content ${viewImage} ${\r\n                      viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\r\n                    }`}\r\n                  >\r\n                    <WebVideoPlayer\r\n                      //src={`https://ssapi.trendysignage.com/${contentnew.Zone3[current2Index].url}`}\r\n                      src={url}\r\n                    ></WebVideoPlayer>\r\n                  </div>\r\n                )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PreviewComposition;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\SelecteMedia.jsx",["1140","1141","1142","1143"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\SelectScreenModal.jsx",["1144","1145","1146","1147","1148"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\DragMove.jsx",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AddMedia.jsx",["1149"],"import { Button, Modal, Row, Col, Badge, Table } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {getAllMedia, BASE_URL } from \"../../utils/api\";\r\nimport TableLoader from \"../components/TableLoader\";\r\nimport downArrow from \"../../img/down-arrow.png\";\r\nimport '../components/Table.css';\r\nimport {\r\n  getDatetimeIn12Hours,\r\n  humanReadableFormattedDateString,\r\n} from \"../../utils/UtilsService\";\r\n// import tagCloseIcon from \"../../img/tag-close-icon.png\";\r\n\r\nconst PublishMediaModal = ({openMedia, setOpenMedia, selectedImage, setSelectedImage, setSelectedMedia, setHeight, setWidth}) => {\r\n  const [allMedia, setAllMedia] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [sMedia, setSMedia] = useState(null);\r\n  // use effect\r\n  useEffect(() => {\r\n    getAllMediaList();\r\n  }, []);\r\n\r\n  const getAllMediaList = async () => {\r\n    setLoading(true);\r\n    const list = await getAllMedia();\r\n    console.log(\"list\",list)\r\n    setLoading(false);\r\n    setAllMedia(list);\r\n  };\r\n\r\n  const handleCheckboxChange = (event, media) => {\r\n    setSelectedImage(event.target.name);\r\n    setSMedia(media);\r\n\r\n  };\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(sMedia)\r\n    setSelectedMedia(sMedia)\r\n    const prp = JSON.parse(sMedia.properties)\r\n    setOpenMedia(false);\r\n    setHeight(prp.height);\r\n    setWidth(prp.width);\r\n  };\r\n\r\n    const parseMeta = (media) => {\r\n        const meta = JSON.parse(media.properties);\r\n        return (\r\n        <span className=\"td-content\">\r\n            {media?.type === \"image\" && (\r\n            <strong>\r\n                {meta.height} x {meta.width}\r\n            </strong>\r\n            )}\r\n            {media?.type === \"video\" && meta?.length && (\r\n            <strong>{parseInt((meta.length / 60) * 100) / 100} Min.</strong>\r\n            )}\r\n            {meta?.size && <span>{meta.size} MB</span>}\r\n        </span>\r\n        );\r\n    };\r\n\r\n    const videoMetaDuration = (media) => {\r\n    const properties = JSON.parse(media?.properties);\r\n    if (properties && properties.length) {\r\n        return (properties.length.toFixed(0) / 60).toFixed(0);\r\n    }\r\n    return null;\r\n    };\r\n\r\n  return (\r\n      <>\r\n      <Modal\r\n        className={`fade bd-example-modal-lg mt-4 custom-modal custom-modal-large`}\r\n        show={openMedia}\r\n        size=\"lg\"\r\n      >\r\n        <Modal.Header>\r\n          <Modal.Title>Add Media</Modal.Title>\r\n          <Button\r\n            variant=\"\"\r\n            className=\"close\"\r\n            onClick={() => setOpenMedia(false)}\r\n          >\r\n            <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n          </Button>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n            <Table responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"width50\">\r\n                    <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        className=\"custom-control-input\"\r\n                        id=\"checkbox1_exam_all\"\r\n                        disabled\r\n                        required=\"\"\r\n                      />\r\n                      <label\r\n                        className=\"custom-control-label\"\r\n                        htmlFor=\"checkbox1_exam_all\"\r\n                      ></label>\r\n                    </div>\r\n                  </th>\r\n                  <th>Name</th>\r\n                  <th>Type</th>\r\n                  <th>Uploaded Date</th>\r\n                  <th>Properties</th>\r\n                  <th>Tags</th>\r\n                </tr>\r\n              </thead>\r\n              {loading  ? (\r\n            <TableLoader colSpan={5}/>\r\n          ) : (\r\n              <tbody>\r\n                {allMedia  && allMedia.length > 0 && \r\n                  allMedia.map((media) => {\r\n                    return (media.type === 'image' ?\r\n                    <tr>\r\n                        <td>\r\n                          <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              className=\"custom-control-input\"\r\n                              id={media._id}\r\n                              name={media._id}\r\n                              checked={selectedImage === media._id}\r\n                              onChange={(e) => {handleCheckboxChange(e, media)}}\r\n                            />\r\n                            <label\r\n                              className=\"custom-control-label\"\r\n                              htmlFor={media._id}\r\n                            ></label>\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                         <span className=\"td-content d-flex name-td-content\">\r\n                            <span\r\n                                className={`name-img mr-2  ${\r\n                                media?.type === \"video\" && \"videotableName\"\r\n                                }`}\r\n                            >\r\n                                {media?.type === \"image\" && (\r\n                                <div\r\n                                    onClick={() => {\r\n                                        //showPreview(media.title, media.type);\r\n                                    }}\r\n                                    className=\"media-list-img-zoom\"\r\n                                >\r\n                                    <span className=\"media-list-img-zoom-plus\">+</span>\r\n                                    <img\r\n                                    className=\"media-img img-fluid\"\r\n                                    src={`${BASE_URL}${media?.title}`}\r\n                                    alt=\"media-img\"\r\n                                    />\r\n                                </div>\r\n                                )}\r\n                                {media?.type === \"video\" && (\r\n                                <button\r\n                                    onClick={() => {\r\n                                        //showPreview(media.title, media.type);\r\n                                    }}\r\n                                >\r\n                                    {videoMetaDuration(media)}\r\n                                </button>\r\n                                )}\r\n                            </span>\r\n                            <span className=\"name-content d-flex flex-column flex-grow-1\">\r\n                                <strong>\r\n                                {\r\n                                    media.title.split(\"/\")[\r\n                                    media.title.split(\"/\").length - 1\r\n                                    ]\r\n                                }\r\n                                </strong>\r\n                                <span>{media.createdBy.name}</span>\r\n                            </span>\r\n                        </span>\r\n                        </td>\r\n                        <td>\r\n                            {media.type.slice(0, 1).toUpperCase() + media.type.slice(1)}\r\n                        </td>\r\n                        <td>\r\n                            <span className=\"td-content\">\r\n                            <strong>\r\n                                {humanReadableFormattedDateString(media.createdAt)}\r\n                            </strong>\r\n                            <span>{getDatetimeIn12Hours(media.createdAt)}</span>\r\n                            </span>\r\n                        </td>\r\n                        <td>{parseMeta(media)}</td>\r\n                        <td>\r\n                            {media.tags.map((tag) => {\r\n                            return (\r\n                                <span className=\"my-phone-tag text-truncate ml-1\">\r\n                                {tag}\r\n                                </span>\r\n                            );\r\n                            })}\r\n                            <span\r\n                            className=\"down-arrow\"\r\n                            onClick={() => {\r\n                                //setSelectedMedia(media);\r\n                                //setNewTagModal(true);\r\n                            }}\r\n                            >\r\n                            <img\r\n                                className=\"down-arrow-img img-fluid\"\r\n                                src={downArrow}\r\n                                alt=\"arrow\"\r\n                            />\r\n                            </span>\r\n                        </td>\r\n                      </tr>\r\n                    : ''\r\n                      \r\n                    )\r\n                  })}\r\n              </tbody>\r\n              )}\r\n            </Table>\r\n          </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n            <Row className=\"w-100 m-0\">\r\n              <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\r\n                <Button className=\"cancel-btn w-100\"\r\n                    onClick={(e) => setOpenMedia(false)}\r\n                 variant=\"outline-light\">\r\n                  Cancel\r\n                </Button>\r\n              </Col>\r\n              <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\r\n                <Button\r\n                  disabled={selectedImage === null}\r\n                  variant=\"\"\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary btn-block primary-btn\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Publish\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PublishMediaModal;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\DefaultCompositionModal.jsx",["1150","1151","1152","1153","1154","1155"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport icon from \"../../img/link-alt 1.svg\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport downArrow from \"../../img/down-arrow.png\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport { useState } from \"react\";\r\nimport { assignDefaultComposition, BASE_URL } from \"../../utils/api\";\r\nimport {\r\n  getDatetimeIn12Hours,\r\n  humanReadableFormattedDateString,\r\n} from \"../../utils/UtilsService\";\r\nimport AddNewTagModal from \"./AddNewTagModal\";\r\nconst DefaultCompositionModal = ({\r\n  close,\r\n  show,\r\n  compositionList,\r\n  getVendorProfile,\r\n}) => {\r\n  const [showNewTagModal, setNewTagModal] = useState(false);\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [compositionId, setCompositionId] = useState(\"\");\r\n  const [duration, setDuration] = useState(\"\");\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(compositionId, duration, \"iiiiiii\");\r\n    await assignDefaultComposition({\r\n      compositionId: compositionId,\r\n\r\n      duration: duration,\r\n    }).then((res) => {\r\n      console.log(res, \"assignDefaultComposition\");\r\n      if (res.data.statusCode === 200) {\r\n        getVendorProfile();\r\n        close();\r\n      }\r\n    });\r\n\r\n    // setShowPublishPopUp(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        className=\"fade bd-example-modal-lg mt-4 app-modal\"\r\n        show={show}\r\n        size=\"xl\"\r\n      >\r\n        <Modal.Header className=\"border-0 d-flex justify-content-between align-items-center\">\r\n          <div>\r\n            <Button variant=\"\" className=\"\" onClick={() => close(false)}>\r\n              <img\r\n                className=\"cancel-icon\"\r\n                src={cancelIcon}\r\n                alt=\"cancel-icon\"\r\n                height=\"25px\"\r\n                width=\"25px\"\r\n              />\r\n            </Button>\r\n          </div>\r\n\r\n          <Button\r\n            variant=\"\"\r\n            type=\"button\"\r\n            className=\"btn btn-primary btn-block primary-btn\"\r\n            style={{ width: \"fit-content\" }}\r\n            //   onClick={() => setNewTagModal(false)}\r\n            disabled={compositionId.length === 0}\r\n            onClick={handleSubmit}\r\n          >\r\n            Assign\r\n          </Button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Table\r\n            responsive\r\n            className=\"custom-table screen-table\"\r\n            style={{ marginBottom: \"36px\" }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Composition</th>\r\n                <th>Date Added</th>\r\n                <th>Duration</th>\r\n                <th>Associated Schedule</th>\r\n                <th>Tags</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {compositionList &&\r\n                compositionList.map((composition) => {\r\n                  const content = composition.zones[0].content[0];\r\n                  return (\r\n                    <tr\r\n                      key={composition._id}\r\n                      id={composition._id}\r\n                      onClick={() => {\r\n                        setCompositionId(composition._id);\r\n                        setDuration(composition.duration);\r\n                      }}\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        background:\r\n                          composition._id === compositionId ? \"#f5f5f5\" : \"\",\r\n                      }}\r\n                    >\r\n                      <td>\r\n                        <span className=\"td-content d-flex name-td-content\">\r\n                          <span\r\n                            className={`name-img mr-2  ${\r\n                              content.type === \"video\" && \"videotableName\"\r\n                            }`}\r\n                          >\r\n                            {content.type === \"image\" && (\r\n                              <img\r\n                                className=\"media-img img-fluid\"\r\n                                src={`${BASE_URL}${content.url}`}\r\n                                alt=\"media-img\"\r\n                              />\r\n                            )}\r\n                            {content.type === \"video\" &&\r\n                              content.duration.toFixed(0) / 60}\r\n                          </span>\r\n                          <span className=\"name-content d-flex flex-column flex-grow-1\">\r\n                            <strong>{composition.name}</strong>\r\n                            <span>{composition.createdBy}</span>\r\n                          </span>\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <span className=\"td-content\">\r\n                          <strong>\r\n                            {humanReadableFormattedDateString(\r\n                              composition.createdAt\r\n                            )}\r\n                          </strong>\r\n                          <span>\r\n                            {getDatetimeIn12Hours(composition.createdAt)}\r\n                          </span>\r\n                        </span>\r\n                      </td>\r\n                      <td> {composition.duration} Sec</td>\r\n                      <td>No Schedule</td>\r\n                      <td style={{ width: \"180px\" }}>\r\n                        <span className=\"tag-container\">\r\n                          {composition.tags &&\r\n                            composition.tags.map((tag) => {\r\n                              return (\r\n                                <span className=\"my-phone-tag text-truncate ml-1 mr-1 mb-1\">\r\n                                  {tag}\r\n                                </span>\r\n                              );\r\n                            })}\r\n                        </span>\r\n\r\n                        <span\r\n                          className=\"down-arrow\"\r\n                          onClick={() => {\r\n                            setSelected(composition);\r\n                            setNewTagModal(true);\r\n                          }}\r\n                        >\r\n                          <img\r\n                            className=\"down-arrow-img img-fluid\"\r\n                            src={downArrow}\r\n                            alt=\"arrow\"\r\n                          />\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {showNewTagModal && (\r\n        <AddNewTagModal\r\n          setNewTagModal={setNewTagModal}\r\n          allScreens={compositionList}\r\n          selected={selected}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultCompositionModal;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\chatBox\\MsgBox.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\media\\fileUploadWithPreview.jsx",["1156","1157","1158"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\editSelectedComposition.jsx",["1159","1160","1161","1162","1163"],"import { useCallback, useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport WebVideoPlayer from \"../components/web-player/WebVideoPlayer\";\r\nimport { BASE_URL } from \"../../utils/api\";\r\nimport ImageCroper from \"../components/cropImage\";\r\nimport getCroppedImg from \"../components/cropImage/cropImage\";\r\nimport VideoThumbnail from \"react-video-thumbnail\";\r\nconst EditSelectedComposition = ({\r\n  composition,\r\n  setEditSelected,\r\n  updateViewType,\r\n}) => {\r\n  const getDefault = composition.fitToScreen\r\n    ? \"fitScreen\"\r\n    : composition.crop\r\n    ? \"crop\"\r\n    : \"aspectRation\";\r\n  const [viewImage, setViewImage] = useState(getDefault);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [zoom, setZoom] = useState(\r\n    composition.crop ? composition.crop.zoom : 1\r\n  );\r\n\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(\r\n    composition.crop ? composition.crop : null\r\n  );\r\n  const handleUpload = async () => {\r\n    const data = {\r\n      ...croppedAreaPixels,\r\n      zoom: zoom,\r\n    };\r\n    let ImgUrl = \"\";\r\n    if (viewImage === \"crop\") {\r\n      const getData = await getCroppedImg(\r\n        `${BASE_URL}/vendor/display/mediaFile?path=${composition.url}`,\r\n        croppedAreaPixels\r\n      );\r\n      ImgUrl = getData;\r\n    } else {\r\n      ImgUrl = composition.url;\r\n    }\r\n\r\n    updateViewType(data, viewImage, ImgUrl);\r\n    setEditSelected(null);\r\n  };\r\n\r\n  const handleOptionChange = (e) => {\r\n    setViewImage(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-large custom-modal-preview\"\r\n      show={true}\r\n      size=\"xl\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title className=\"mr-auto\">Preview</Modal.Title>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setEditSelected(null)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"custom-container\">\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"viewImage\"\r\n              value=\"fitScreen\"\r\n              id=\"fitScreen\"\r\n              onChange={handleOptionChange}\r\n              defaultChecked={viewImage === \"fitScreen\"}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"fitScreen\">\r\n              Fit to Screen\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"viewImage\"\r\n              value=\"aspectRation\"\r\n              id=\"aspectRation\"\r\n              onChange={handleOptionChange}\r\n              defaultChecked={viewImage === \"aspectRation\"}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"aspectRation\">\r\n              Maintain Aspect Ratio\r\n            </label>\r\n          </div>\r\n          {composition.type !== \"video\" && (\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"viewImage\"\r\n                value=\"crop\"\r\n                id=\"crop\"\r\n                onChange={handleOptionChange}\r\n                defaultChecked={viewImage === \"crop\"}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"crop\">\r\n                Crop\r\n              </label>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {composition && composition.type === \"image\" && (\r\n          <>\r\n            <div\r\n              className=\"basic-list-group image-preview-container media-content image-preview-editable\"\r\n              style={{\r\n                border: \"1px solid\",\r\n                marginTop: viewImage == \"crop\" ? \"0%\" : \"4%\",\r\n                height: viewImage == \"crop\" ? \"560px\" : \"560px\",\r\n              }}\r\n            >\r\n              {viewImage === \"crop\" && (\r\n                <ImageCroper\r\n                  imgSrc={`${composition.url}`}\r\n                  zoom={zoom}\r\n                  setZoom={setZoom}\r\n                  croppedAreaPixels={croppedAreaPixels}\r\n                  setCroppedAreaPixels={setCroppedAreaPixels}\r\n                />\r\n              )}\r\n              {viewImage !== \"crop\" && (\r\n                <img\r\n                  className=\"webplayer-preview-img\"\r\n                  style={{\r\n                    objectFit: `${\r\n                      viewImage === \"fitScreen\" ? \"fill\" : \"contain\"\r\n                    }`,\r\n                  }}\r\n                  src={`${BASE_URL}${composition.url}`}\r\n                  alt=\"media-img\"\r\n                />\r\n              )}\r\n            </div>{\" \"}\r\n            {viewImage === \"crop\" && (\r\n              <div className=\"controls\">\r\n                <input\r\n                  type=\"range\"\r\n                  value={zoom}\r\n                  min={1}\r\n                  max={3}\r\n                  step={0.1}\r\n                  aria-labelledby=\"Zoom\"\r\n                  onChange={(e) => {\r\n                    setZoom(e.target.value);\r\n                  }}\r\n                  className=\"zoom-range\"\r\n                />\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n        {composition && composition.type === \"video\" && (\r\n          <div\r\n            className={`basic-list-group image-preview-container media-content image-preview-editable ${\r\n              viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\r\n            }`}\r\n            style={{ border: \"1px solid\", marginTop: \"15px\" }}\r\n          >\r\n            <VideoThumbnail\r\n              videoUrl={`${BASE_URL}/vendor/display/mediaFile?path=${composition.url}`}\r\n              thumbnailHandler={(thumbnail) => console.log(thumbnail)}\r\n              width={1280}\r\n              height={720}\r\n            />\r\n          </div>\r\n        )}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div className=\"loader-button-container\">\r\n          <Button\r\n            variant=\"\"\r\n            type=\"button\"\r\n            disabled={isLoading}\r\n            className={`btn btn-primary btn-block primary-btn`}\r\n            onClick={() => handleUpload()}\r\n          >\r\n            {isLoading ? <div className=\"loader\"></div> : \"Apply\"}\r\n          </Button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditSelectedComposition;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\web-player\\WebVideoPlayer.jsx",["1164","1165"],"import React, { useEffect, useRef } from 'react';\r\nimport videojs from 'video.js';\r\n\r\nimport 'video.js/dist/video-js.css';\r\nconst WebVideoPlayer = (props) => {\r\n  console.log(props, \"WebVideoPlayer.jsx props\")\r\n  const videoRef = useRef(null);\r\n  const playerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    videoRef.current?.load();\r\n    // playerRef.current = videojs(videoRef.current, {\r\n    //   autoplay: true,\r\n    //   controls: false,\r\n    //   muted:true,\r\n    //   loop:true,\r\n    //   src: props.src\r\n    // });\r\n    // console.log(\"test\",playerRef.current, videoRef.current)\r\n    return () => {\r\n      videoRef.current?.load();\r\n      if (playerRef.current) {\r\n        playerRef.current.dispose();\r\n        playerRef.current = null;\r\n      }\r\n    };\r\n  }, [props.src]);\r\n\r\n  useEffect(() => {\r\n    if (playerRef.current) {\r\n      playerRef.current.src({ src: props.src });\r\n    }\r\n  }, [props.src]);\r\n\r\n  // useEffect(() => {\r\n  //   if (playerRef.current && playerRef.current.tech()) {\r\n  //     playerRef.current.tech().src({ src: props.src });\r\n  //     playerRef.current.load();\r\n  //   }\r\n  // }, [props.src]);\r\n\r\n\r\n\r\n\r\n  // const videoRef = useRef(null);\r\n  // const playerRef = useRef(null);\r\n\r\n  // useEffect(() => {\r\n  //   // Create the Video.js player instance\r\n  //   playerRef.current = videojs(videoRef.current, {\r\n  //     autoplay: true,\r\n  //     controls: false,\r\n  //     loop: true,\r\n  //     muted: true,\r\n  //     sources: [{\r\n  //       src: props.src,\r\n        \r\n  //     }],\r\n  //   });\r\n\r\n  //   // Cleanup when component unmounts\r\n  //   return () => {\r\n  //     if (playerRef.current) {\r\n  //       playerRef.current.dispose();\r\n  //       playerRef.current = null;\r\n  //     }\r\n  //   };\r\n  // }, []);\r\n\r\n  // const videoRef = useRef(null);\r\n  // useEffect(() => {\r\n  //   const video = videoRef.current;\r\n\r\n  //   const handleEnded = () => {\r\n  //     video.currentTime = 0; // Restart the video from the beginning\r\n  //     video.play(); // Start playing the video again\r\n  //   };\r\n\r\n  //   video.addEventListener('ended', handleEnded);\r\n\r\n  //   return () => {\r\n  //     video.removeEventListener('ended', handleEnded);\r\n  //   };\r\n  // }, []);\r\n  return (\r\n  //<> <video ref={videoRef} className=\"video-js\" /></>\r\n  // <> <video ref={videoRef}   className=\"video-js\" </video></>\r\n\r\n    <video ref={videoRef} className=\"video-js\" autoPlay muted loop>\r\n      <source src={props.src} type=\"video/mp4\" />\r\n    </video>\r\n  );\r\n};\r\n\r\nexport default WebVideoPlayer;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\RssFeedAppModal.jsx",["1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\WeatherAppModal.jsx",["1186","1187","1188","1189","1190","1191","1192","1193","1194","1195"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\TextAppModal.jsx",["1196","1197","1198","1199","1200","1201","1202","1203","1204"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\ScrollerTextAppModal.jsx",["1205","1206","1207","1208","1209","1210","1211","1212"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\UrlAppModal.jsx",["1213","1214","1215","1216","1217","1218","1219"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\cropImage\\cropImage.jsx",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\cropImage\\index.jsx",["1220","1221","1222"],"import React, { useState, useCallback } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Cropper from 'react-easy-crop'\r\n\r\nimport getCroppedImg from \"./cropImage\";\r\nimport { BASE_URL } from \"../../../utils/api\";\r\n\r\nconst ImageCroper = ({\r\n  imgSrc,\r\n  zoom,\r\n  setZoom,\r\n  setCroppedAreaPixels,\r\n  croppedAreaPixels,\r\n}) => {\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n\r\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels);\r\n  }, []);\r\n\r\n  return (\r\n    <Cropper\r\n      image={`${BASE_URL}${imgSrc}`}\r\n      crop={crop}\r\n      zoom={zoom}\r\n      aspect={16 / 9}\r\n      onCropChange={setCrop}\r\n      onCropComplete={onCropComplete}\r\n      onZoomChange={setZoom}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ImageCroper;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\Clock.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\FilterModal.jsx",["1223","1224","1225","1226","1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AddScreenModal.jsx",["1238"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\screen\\listScreens.jsx",["1239","1240","1241","1242","1243"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\CompolistionListModel.jsx",["1244","1245","1246","1247","1248","1249"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\screen\\tagInputField.jsx",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\utils\\fetchClient.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\web-player\\main.jsx",["1250","1251","1252","1253","1254"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\web-player\\compositionPlayer.jsx",["1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267"],"import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport WebVideoPlayer from \"./WebVideoPlayer\";\r\nimport { BASE_URL } from \"../../../utils/api\";\r\nimport ReactPlayer from \"react-player\";\r\nimport Iframe from \"react-iframe\";\r\nimport { fontSize } from \"@material-ui/system\";\r\nimport Zone1 from \"./Zone1\";\r\nimport Zone2 from \"./Zone2\";\r\nimport Zone3 from \"./Zone3\";\r\nimport { getWeather } from \"../../../utils/api\";\r\nconst CompositionPlayer = ({ contents, content, referenceUrl }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [current1Index, setCurrent1Index] = useState(0);\r\n  const [current2Index, setCurrent2Index] = useState(0);\r\n  const timeout1Ref = useRef(\"\");\r\n  const timeout2Ref = useRef(\"\");\r\n  const timeoutRef = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    if (contents && contents.zones.length == 1) {\r\n      if (contents.zones[0].content[currentIndex]) {\r\n        const timeoutDuration =\r\n          contents.zones[0].content[currentIndex].duration * 1000;\r\n        timeoutRef.current = setTimeout(() => {\r\n          if (currentIndex === contents.zones[0].content.length - 1) {\r\n            setCurrentIndex(0);\r\n          } else {\r\n            setCurrentIndex((currentIndex) => currentIndex + 1);\r\n          }\r\n        }, timeoutDuration);\r\n      }\r\n    } else if (contents && contents.zones.length == 2) {\r\n      if (contents.zones[0].content[currentIndex]) {\r\n        const timeoutDuration =\r\n          contents.zones[0].content[currentIndex].duration * 1000;\r\n        timeoutRef.current = setTimeout(() => {\r\n          if (currentIndex === contents.zones[0].content.length - 1) {\r\n            setCurrentIndex(0);\r\n          } else {\r\n            setCurrentIndex((currentIndex) => currentIndex + 1);\r\n          }\r\n        }, timeoutDuration);\r\n      }\r\n      if (contents.zones[1].content[current1Index]) {\r\n        const timeout1Duration =\r\n          contents.zones[1].content[current1Index].duration * 1000;\r\n        timeout1Ref.current = setTimeout(() => {\r\n          if (current1Index === contents.zones[1].content.length - 1) {\r\n            setCurrent1Index(0);\r\n          } else {\r\n            setCurrent1Index((current1Index) => current1Index + 1);\r\n          }\r\n        }, timeout1Duration);\r\n      }\r\n    } else if (contents && contents.zones.length == 3) {\r\n      if (contents.zones[0].content[currentIndex]) {\r\n        const timeoutDuration = contents.zones[0].content[currentIndex].duration * 1000;\r\n        timeout1Ref.current = setTimeout(() => {\r\n          console.log(currentIndex, contents.zones[0].content)\r\n          if (currentIndex === contents.zones[0].content.length - 1) {\r\n            setCurrentIndex(0);\r\n          } else {\r\n            setCurrentIndex(currentIndex + 1);\r\n          }\r\n        }, timeoutDuration);\r\n      }\r\n      if (contents.zones[1].content[current1Index]) {\r\n        const timeout1Duration =\r\n          contents.zones[1].content[current1Index].duration * 1000;\r\n        timeout1Ref.current = setTimeout(() => {\r\n          if (current1Index === contents.zones[1].content.length - 1) {\r\n            setCurrent1Index(0);\r\n          } else {\r\n            setCurrent1Index(current1Index + 1);\r\n          }\r\n        }, timeout1Duration);\r\n      }\r\n      if (contents.zones[2].content[current2Index]) {\r\n        const timeout1Duration =\r\n          contents.zones[2].content[current2Index].duration * 1000;\r\n        timeout2Ref.current = setTimeout(() => {\r\n          if (current2Index === contents.zones[2].content.length - 1) {\r\n            setCurrent2Index(0);\r\n          } else {\r\n            setCurrent2Index(current2Index + 1);\r\n          }\r\n        }, timeout1Duration);\r\n      }\r\n    }\r\n    console.log(`%c${currentIndex}`, \"font-size:20px;color:red\");\r\n    return () => {clearTimeout(timeoutRef.current);clearTimeout(timeout1Ref.current);clearTimeout(timeout2Ref.current)};\r\n  }, [currentIndex, current1Index, current2Index]);\r\n  const viewImage = content[currentIndex]?.fitToScreen\r\n    ? \"fitScreen\"\r\n    : content[currentIndex]?.crop\r\n    ? \"crop\"\r\n    : \"aspectRation\";\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {contents && contents.zones.length == 1 ? (\r\n        <Zone1\r\n          contents={contents}\r\n          currentIndex={currentIndex}\r\n          current1Index={current1Index}\r\n          current2Index={current2Index}\r\n          viewImage={viewImage}\r\n        />\r\n      ) : contents.zones.length == 2 ? (\r\n        <Zone2\r\n          contents={contents}\r\n          currentIndex={currentIndex}\r\n          current1Index={current1Index}\r\n          current2Index={current2Index}\r\n          viewImage={viewImage}\r\n        />\r\n      ) : contents.zones.length == 3 ? (\r\n        <Zone3\r\n          contents={contents}\r\n          currentIndex={currentIndex}\r\n          current1Index={current1Index}\r\n          current2Index={current2Index}\r\n          viewImage={viewImage}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompositionPlayer;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\web-player\\Zone2.jsx",["1268","1269","1270"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\web-player\\Zone1.jsx",["1271","1272","1273"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\web-player\\Zone3.jsx",["1274","1275","1276","1277"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\pages\\LockScreen.js",["1278"],"import React from \"react\";\r\n\r\nconst LockScreen = ({ history, message }) => {\r\n   const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      history.push(\"/\");\r\n   };\r\n   return (\r\n      <div className=\"row justify-content-center h-100 align-items-center\">\r\n         <div className=\"col-md-6\">\r\n            <div className=\"authincation-content\">\r\n               <div className=\"row no-gutters\">\r\n                  <div className=\"col-xl-12\">\r\n                     <div className=\"auth-form\">\r\n                        <h4 className=\"text-center mb-4\">{message}</h4>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default LockScreen;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\CustomNoRowsOverlay.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\QuickSearchToolbar.js",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\media\\listMedia.jsx",["1279","1280","1281","1282","1283","1284","1285","1286","1287","1288","1289","1290","1291"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\pages\\Verification.jsx",["1292","1293"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\ResetPassword.jsx",["1294"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport { resetPassword } from \"../../store/actions/AuthActions\"\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst ResetPassword = ({errorMessage, successMessage, show, setShowResetPassword, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [errMsg, setErrMsg] = useState(null)\r\n  const dispatch = useDispatch();  \r\n  useEffect(() => {\r\n\r\n  },[])\r\n  \r\n\r\n  const handleCreateApp = async(e) => {\r\n    e.preventDefault();\r\n    setErrMsg(\"\");\r\n    if(email === ''){\r\n        setErrMsg('Email is Required');\r\n        return \r\n    }\r\n    dispatch(resetPassword(email, history));\r\n    \r\n  }\r\n  return (\r\n    <>\r\n    <Modal\r\n      className=\"fade bd-example-modal-lg mt-4 app-modal\"\r\n      show={show}\r\n      size=\"xl\"\r\n      centered\r\n    >\r\n      <Modal.Header className=\"border-0\">\r\n        <Modal.Title className=\"mr-auto app-modal-heading\">\r\n          Reset Password\r\n        </Modal.Title>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setShowResetPassword(false)}\r\n        >\r\n          <img\r\n            className=\"cancel-icon\"\r\n            src={cancelIcon}\r\n            alt=\"cancel-icon\"\r\n            height=\"25px\"\r\n            width=\"25px\"\r\n          />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n          {errorMessage && (\r\n            <h5 className=\"alert alert-danger\">{errorMessage}</h5>\r\n          )}\r\n          {successMessage && (\r\n            <h5 className=\"alert alert-success\">{successMessage}</h5>\r\n          )}\r\n          {errMsg && (\r\n            <h5 className=\"alert alert-danger\">{errMsg}</h5>\r\n          )}\r\n        <form\r\n          className=\"row\"\r\n        >\r\n          <div className=\"form-group col-12 mb-0  url-app-form\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"  form-control \"\r\n              placeholder=\"Enter Your Email...\"\r\n              required\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n            />\r\n\r\n            \r\n          </div>\r\n        </form>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"border-0 mb-2\">\r\n        <Row className=\"w-100 m-0\">\r\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\r\n            <Button className=\"cancel-btn w-100\" variant=\"outline-light\"\r\n                onClick={() => setShowResetPassword(false)}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\r\n            <Button\r\n              variant=\"\"\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block primary-btn\"\r\n              onClick={(e) => handleCreateApp(e)}\r\n            >\r\n              Reset Password\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Modal.Footer>\r\n    </Modal>\r\n      </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      errorMessage: state.auth.errorMessage,\r\n      successMessage: state.auth.successMessage,\r\n      showLoading: state.auth.showLoading,\r\n    };\r\n  };\r\nexport default connect(mapStateToProps)(ResetPassword);\r\n\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\ClockApp.jsx",["1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\ChangePassword.jsx",["1308","1309"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\r\n\r\nconst ChangePassword = ({ setShowModel, show }) => {\r\n  return (\r\n    <Modal\r\n      className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium\"\r\n      show={show}\r\n      size=\"md\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Change Password</Modal.Title>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setShowModel(false)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form>\r\n          <div className=\"mb-3\">\r\n            <strong>\r\n              <label className=\"mb-3\"> Old Password</label>\r\n            </strong>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control input-default form-field\"\r\n              placeholder=\"Old Password\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <strong>\r\n              <label className=\"mb-3\"> New Password</label>\r\n            </strong>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control input-default form-field\"\r\n              placeholder=\"New Password\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Row className=\"w-100 m-0\">\r\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\r\n            <Button className=\"cancel-btn w-100\" variant=\"outline-light\">\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\r\n            <Button\r\n              variant=\"\"\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block primary-btn\"\r\n              onClick={() => setShowModel(false)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\integrations\\PeopleSpace.jsx",[],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\integrations\\Createtemplate.jsx",["1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321","1322","1323","1324","1325","1326","1327","1328","1329"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\EditTemplate.jsx",["1330","1331","1332"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\TemplateAddContent.jsx",["1333","1334","1335","1336","1337"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\GoogleSlideAppModal.jsx",["1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\QuoteModel.jsx",["1349","1350","1351","1352","1353","1354","1355","1356"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\modals\\AllNewsAppModal.jsx",["1357","1358","1359","1360","1361","1362","1363","1364","1365","1366"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\integrations\\PeopleSpacePreview.jsx",["1367","1368","1369","1370","1371","1372"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\pages\\VerificationBkp.jsx",["1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\layouts\\nav\\MfaPage.jsx",["1387","1388","1389","1390"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\ScheduleList.jsx",["1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1416"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\QuickPlayList.jsx",["1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439","1440","1441","1442","1443","1444","1445","1446","1447","1448","1449"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\push\\DefComplist.jsx",["1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1470","1471","1472","1473","1474","1475","1476","1477","1478","1479","1480","1481","1482","1483","1484"],"C:\\xampp\\htdocs\\treny_front\\trendy-content-display-frontend\\src\\jsx\\components\\cropImage\\ImageRotation.jsx",["1485","1486","1487","1488","1489","1490","1491","1492","1493"],{"ruleId":"1494","replacedBy":"1495"},{"ruleId":"1496","replacedBy":"1497"},{"ruleId":"1498","severity":1,"message":"1499","line":1,"column":37,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":45},{"ruleId":"1498","severity":1,"message":"1502","line":2,"column":10,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":12},{"ruleId":"1498","severity":1,"message":"1503","line":16,"column":8,"nodeType":"1500","messageId":"1501","endLine":16,"endColumn":16},{"ruleId":"1504","severity":1,"message":"1505","line":41,"column":8,"nodeType":"1506","endLine":41,"endColumn":33,"suggestions":"1507"},{"ruleId":"1498","severity":1,"message":"1508","line":11,"column":10,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1509","line":11,"column":15,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1510","line":11,"column":20,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":24},{"ruleId":"1498","severity":1,"message":"1511","line":12,"column":10,"nodeType":"1500","messageId":"1501","endLine":12,"endColumn":27},{"ruleId":"1498","severity":1,"message":"1512","line":12,"column":29,"nodeType":"1500","messageId":"1501","endLine":12,"endColumn":43},{"ruleId":"1498","severity":1,"message":"1513","line":18,"column":8,"nodeType":"1500","messageId":"1501","endLine":18,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1514","line":21,"column":9,"nodeType":"1500","messageId":"1501","endLine":21,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1515","line":24,"column":16,"nodeType":"1500","messageId":"1501","endLine":24,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1516","line":52,"column":9,"nodeType":"1500","messageId":"1501","endLine":52,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1517","line":77,"column":10,"nodeType":"1500","messageId":"1501","endLine":77,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1518","line":77,"column":20,"nodeType":"1500","messageId":"1501","endLine":77,"endColumn":31},{"ruleId":"1498","severity":1,"message":"1519","line":78,"column":10,"nodeType":"1500","messageId":"1501","endLine":78,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1520","line":78,"column":19,"nodeType":"1500","messageId":"1501","endLine":78,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1521","line":80,"column":9,"nodeType":"1500","messageId":"1501","endLine":80,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1522","line":92,"column":9,"nodeType":"1500","messageId":"1501","endLine":92,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1523","line":14,"column":5,"nodeType":"1500","messageId":"1501","endLine":14,"endColumn":33},{"ruleId":"1498","severity":1,"message":"1524","line":30,"column":8,"nodeType":"1500","messageId":"1501","endLine":30,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1525","line":42,"column":8,"nodeType":"1500","messageId":"1501","endLine":42,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1526","line":46,"column":8,"nodeType":"1500","messageId":"1501","endLine":46,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1527","line":5,"column":8,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1528","line":6,"column":8,"nodeType":"1500","messageId":"1501","endLine":6,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1529","line":8,"column":25,"nodeType":"1500","messageId":"1501","endLine":8,"endColumn":33},{"ruleId":"1498","severity":1,"message":"1530","line":24,"column":8,"nodeType":"1500","messageId":"1501","endLine":24,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1531","line":25,"column":8,"nodeType":"1500","messageId":"1501","endLine":25,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1532","line":26,"column":8,"nodeType":"1500","messageId":"1501","endLine":26,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1533","line":27,"column":8,"nodeType":"1500","messageId":"1501","endLine":27,"endColumn":12},{"ruleId":"1498","severity":1,"message":"1534","line":54,"column":10,"nodeType":"1500","messageId":"1501","endLine":54,"endColumn":24},{"ruleId":"1498","severity":1,"message":"1535","line":54,"column":26,"nodeType":"1500","messageId":"1501","endLine":54,"endColumn":43},{"ruleId":"1504","severity":1,"message":"1536","line":113,"column":6,"nodeType":"1506","endLine":113,"endColumn":30,"suggestions":"1537"},{"ruleId":"1498","severity":1,"message":"1538","line":132,"column":9,"nodeType":"1500","messageId":"1501","endLine":132,"endColumn":27},{"ruleId":"1498","severity":1,"message":"1539","line":137,"column":9,"nodeType":"1500","messageId":"1501","endLine":137,"endColumn":28},{"ruleId":"1498","severity":1,"message":"1540","line":142,"column":12,"nodeType":"1500","messageId":"1501","endLine":142,"endColumn":42},{"ruleId":"1498","severity":1,"message":"1541","line":177,"column":12,"nodeType":"1500","messageId":"1501","endLine":177,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":187,"column":14,"nodeType":"1544","messageId":"1545","endLine":187,"endColumn":16},{"ruleId":"1542","severity":1,"message":"1543","line":221,"column":14,"nodeType":"1544","messageId":"1545","endLine":221,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1546","line":3,"column":8,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1547","line":4,"column":8,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1548","line":7,"column":8,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":14},{"ruleId":"1504","severity":1,"message":"1549","line":47,"column":5,"nodeType":"1506","endLine":47,"endColumn":16,"suggestions":"1550"},{"ruleId":"1498","severity":1,"message":"1551","line":2,"column":5,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1552","line":3,"column":5,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1553","line":5,"column":5,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":11},{"ruleId":"1498","severity":1,"message":"1554","line":9,"column":92,"nodeType":"1500","messageId":"1501","endLine":9,"endColumn":107},{"ruleId":"1498","severity":1,"message":"1529","line":17,"column":17,"nodeType":"1500","messageId":"1501","endLine":17,"endColumn":25},{"ruleId":"1498","severity":1,"message":"1531","line":20,"column":8,"nodeType":"1500","messageId":"1501","endLine":20,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1528","line":21,"column":8,"nodeType":"1500","messageId":"1501","endLine":21,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1555","line":23,"column":8,"nodeType":"1500","messageId":"1501","endLine":23,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1532","line":24,"column":8,"nodeType":"1500","messageId":"1501","endLine":24,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1556","line":38,"column":11,"nodeType":"1500","messageId":"1501","endLine":38,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1557","line":39,"column":13,"nodeType":"1500","messageId":"1501","endLine":39,"endColumn":15},{"ruleId":"1498","severity":1,"message":"1558","line":57,"column":11,"nodeType":"1500","messageId":"1501","endLine":57,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1559","line":630,"column":9,"nodeType":"1500","messageId":"1501","endLine":630,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1560","line":16,"column":8,"nodeType":"1500","messageId":"1501","endLine":16,"endColumn":10},{"ruleId":"1498","severity":1,"message":"1561","line":24,"column":10,"nodeType":"1500","messageId":"1501","endLine":24,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1562","line":24,"column":22,"nodeType":"1500","messageId":"1501","endLine":24,"endColumn":35},{"ruleId":"1498","severity":1,"message":"1563","line":25,"column":10,"nodeType":"1500","messageId":"1501","endLine":25,"endColumn":29},{"ruleId":"1504","severity":1,"message":"1564","line":60,"column":6,"nodeType":"1506","endLine":60,"endColumn":10,"suggestions":"1565"},{"ruleId":"1542","severity":1,"message":"1543","line":128,"column":18,"nodeType":"1544","messageId":"1545","endLine":128,"endColumn":20},{"ruleId":"1542","severity":1,"message":"1543","line":283,"column":38,"nodeType":"1544","messageId":"1545","endLine":283,"endColumn":40},{"ruleId":"1542","severity":1,"message":"1543","line":334,"column":44,"nodeType":"1544","messageId":"1545","endLine":334,"endColumn":46},{"ruleId":"1566","severity":1,"message":"1567","line":449,"column":21,"nodeType":"1568","endLine":454,"endColumn":23},{"ruleId":"1566","severity":1,"message":"1567","line":457,"column":21,"nodeType":"1568","endLine":462,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1569","line":1,"column":28,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":34},{"ruleId":"1498","severity":1,"message":"1570","line":11,"column":3,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1571","line":13,"column":3,"nodeType":"1500","messageId":"1501","endLine":13,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1529","line":20,"column":17,"nodeType":"1500","messageId":"1501","endLine":20,"endColumn":25},{"ruleId":"1498","severity":1,"message":"1572","line":25,"column":10,"nodeType":"1500","messageId":"1501","endLine":25,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1573","line":27,"column":7,"nodeType":"1500","messageId":"1501","endLine":27,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1574","line":36,"column":10,"nodeType":"1500","messageId":"1501","endLine":36,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1575","line":36,"column":20,"nodeType":"1500","messageId":"1501","endLine":36,"endColumn":31},{"ruleId":"1498","severity":1,"message":"1576","line":39,"column":15,"nodeType":"1500","messageId":"1501","endLine":39,"endColumn":27},{"ruleId":"1498","severity":1,"message":"1577","line":43,"column":33,"nodeType":"1500","messageId":"1501","endLine":43,"endColumn":39},{"ruleId":"1498","severity":1,"message":"1557","line":82,"column":11,"nodeType":"1500","messageId":"1501","endLine":82,"endColumn":13},{"ruleId":"1542","severity":1,"message":"1578","line":83,"column":55,"nodeType":"1544","messageId":"1545","endLine":83,"endColumn":57},{"ruleId":"1542","severity":1,"message":"1543","line":85,"column":22,"nodeType":"1544","messageId":"1545","endLine":85,"endColumn":24},{"ruleId":"1579","severity":1,"message":"1580","line":89,"column":13,"nodeType":"1581","messageId":"1582","endLine":89,"endColumn":59,"fix":"1583"},{"ruleId":"1579","severity":1,"message":"1584","line":90,"column":13,"nodeType":"1581","messageId":"1582","endLine":90,"endColumn":77,"fix":"1585"},{"ruleId":"1579","severity":1,"message":"1586","line":91,"column":13,"nodeType":"1581","messageId":"1582","endLine":91,"endColumn":75,"fix":"1587"},{"ruleId":"1579","severity":1,"message":"1580","line":95,"column":13,"nodeType":"1581","messageId":"1582","endLine":95,"endColumn":59,"fix":"1588"},{"ruleId":"1542","severity":1,"message":"1543","line":137,"column":22,"nodeType":"1544","messageId":"1545","endLine":137,"endColumn":24},{"ruleId":"1542","severity":1,"message":"1543","line":142,"column":21,"nodeType":"1544","messageId":"1545","endLine":142,"endColumn":23},{"ruleId":"1579","severity":1,"message":"1580","line":146,"column":13,"nodeType":"1581","messageId":"1582","endLine":146,"endColumn":35,"fix":"1589"},{"ruleId":"1579","severity":1,"message":"1590","line":147,"column":13,"nodeType":"1581","messageId":"1582","endLine":147,"endColumn":54,"fix":"1591"},{"ruleId":"1579","severity":1,"message":"1592","line":148,"column":13,"nodeType":"1581","messageId":"1582","endLine":148,"endColumn":52,"fix":"1593"},{"ruleId":"1542","severity":1,"message":"1578","line":170,"column":43,"nodeType":"1544","messageId":"1545","endLine":170,"endColumn":45},{"ruleId":"1542","severity":1,"message":"1543","line":189,"column":19,"nodeType":"1544","messageId":"1545","endLine":189,"endColumn":21},{"ruleId":"1579","severity":1,"message":"1580","line":194,"column":13,"nodeType":"1581","messageId":"1582","endLine":194,"endColumn":59,"fix":"1594"},{"ruleId":"1579","severity":1,"message":"1590","line":195,"column":13,"nodeType":"1581","messageId":"1582","endLine":195,"endColumn":78,"fix":"1595"},{"ruleId":"1579","severity":1,"message":"1592","line":196,"column":13,"nodeType":"1581","messageId":"1582","endLine":196,"endColumn":76,"fix":"1596"},{"ruleId":"1579","severity":1,"message":"1580","line":199,"column":29,"nodeType":"1581","messageId":"1582","endLine":199,"endColumn":75,"fix":"1597"},{"ruleId":"1542","severity":1,"message":"1578","line":221,"column":40,"nodeType":"1544","messageId":"1545","endLine":221,"endColumn":42},{"ruleId":"1566","severity":1,"message":"1567","line":256,"column":13,"nodeType":"1568","endLine":256,"endColumn":75},{"ruleId":"1498","severity":1,"message":"1569","line":1,"column":28,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":34},{"ruleId":"1498","severity":1,"message":"1570","line":11,"column":3,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1571","line":13,"column":3,"nodeType":"1500","messageId":"1501","endLine":13,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1529","line":21,"column":17,"nodeType":"1500","messageId":"1501","endLine":21,"endColumn":25},{"ruleId":"1498","severity":1,"message":"1572","line":26,"column":10,"nodeType":"1500","messageId":"1501","endLine":26,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1573","line":28,"column":7,"nodeType":"1500","messageId":"1501","endLine":28,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1574","line":37,"column":10,"nodeType":"1500","messageId":"1501","endLine":37,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1575","line":37,"column":20,"nodeType":"1500","messageId":"1501","endLine":37,"endColumn":31},{"ruleId":"1498","severity":1,"message":"1577","line":44,"column":33,"nodeType":"1500","messageId":"1501","endLine":44,"endColumn":39},{"ruleId":"1504","severity":1,"message":"1598","line":118,"column":6,"nodeType":"1506","endLine":118,"endColumn":13,"suggestions":"1599"},{"ruleId":"1498","severity":1,"message":"1557","line":123,"column":11,"nodeType":"1500","messageId":"1501","endLine":123,"endColumn":13},{"ruleId":"1542","severity":1,"message":"1578","line":124,"column":55,"nodeType":"1544","messageId":"1545","endLine":124,"endColumn":57},{"ruleId":"1542","severity":1,"message":"1543","line":126,"column":22,"nodeType":"1544","messageId":"1545","endLine":126,"endColumn":24},{"ruleId":"1579","severity":1,"message":"1580","line":130,"column":13,"nodeType":"1581","messageId":"1582","endLine":130,"endColumn":59,"fix":"1600"},{"ruleId":"1579","severity":1,"message":"1584","line":131,"column":13,"nodeType":"1581","messageId":"1582","endLine":131,"endColumn":77,"fix":"1601"},{"ruleId":"1579","severity":1,"message":"1586","line":132,"column":13,"nodeType":"1581","messageId":"1582","endLine":132,"endColumn":75,"fix":"1602"},{"ruleId":"1579","severity":1,"message":"1580","line":136,"column":13,"nodeType":"1581","messageId":"1582","endLine":136,"endColumn":59,"fix":"1603"},{"ruleId":"1542","severity":1,"message":"1543","line":157,"column":24,"nodeType":"1544","messageId":"1545","endLine":157,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":162,"column":26,"nodeType":"1544","messageId":"1545","endLine":162,"endColumn":28},{"ruleId":"1579","severity":1,"message":"1580","line":164,"column":15,"nodeType":"1581","messageId":"1582","endLine":164,"endColumn":37,"fix":"1604"},{"ruleId":"1579","severity":1,"message":"1584","line":165,"column":15,"nodeType":"1581","messageId":"1582","endLine":165,"endColumn":55,"fix":"1605"},{"ruleId":"1579","severity":1,"message":"1586","line":166,"column":15,"nodeType":"1581","messageId":"1582","endLine":166,"endColumn":53,"fix":"1606"},{"ruleId":"1542","severity":1,"message":"1578","line":186,"column":55,"nodeType":"1544","messageId":"1545","endLine":186,"endColumn":57},{"ruleId":"1542","severity":1,"message":"1578","line":290,"column":39,"nodeType":"1544","messageId":"1545","endLine":290,"endColumn":41},{"ruleId":"1542","severity":1,"message":"1543","line":301,"column":60,"nodeType":"1544","messageId":"1545","endLine":301,"endColumn":62},{"ruleId":"1566","severity":1,"message":"1567","line":321,"column":13,"nodeType":"1568","endLine":321,"endColumn":75},{"ruleId":"1498","severity":1,"message":"1607","line":2,"column":8,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":13},{"ruleId":"1542","severity":1,"message":"1578","line":82,"column":19,"nodeType":"1544","messageId":"1545","endLine":82,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1608","line":153,"column":9,"nodeType":"1500","messageId":"1501","endLine":153,"endColumn":17},{"ruleId":"1542","severity":1,"message":"1578","line":324,"column":17,"nodeType":"1544","messageId":"1545","endLine":324,"endColumn":19},{"ruleId":"1542","severity":1,"message":"1543","line":412,"column":18,"nodeType":"1544","messageId":"1545","endLine":412,"endColumn":20},{"ruleId":"1542","severity":1,"message":"1543","line":415,"column":18,"nodeType":"1544","messageId":"1545","endLine":415,"endColumn":20},{"ruleId":"1542","severity":1,"message":"1543","line":418,"column":18,"nodeType":"1544","messageId":"1545","endLine":418,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1529","line":153,"column":18,"nodeType":"1500","messageId":"1501","endLine":153,"endColumn":26},{"ruleId":"1498","severity":1,"message":"1609","line":157,"column":10,"nodeType":"1500","messageId":"1501","endLine":157,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1610","line":164,"column":10,"nodeType":"1500","messageId":"1501","endLine":164,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1611","line":164,"column":21,"nodeType":"1500","messageId":"1501","endLine":164,"endColumn":33},{"ruleId":"1498","severity":1,"message":"1569","line":1,"column":28,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":34},{"ruleId":"1498","severity":1,"message":"1573","line":9,"column":7,"nodeType":"1500","messageId":"1501","endLine":9,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1612","line":18,"column":17,"nodeType":"1500","messageId":"1501","endLine":18,"endColumn":25},{"ruleId":"1498","severity":1,"message":"1613","line":100,"column":11,"nodeType":"1500","messageId":"1501","endLine":100,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1614","line":126,"column":20,"nodeType":"1500","messageId":"1501","endLine":126,"endColumn":28},{"ruleId":"1566","severity":1,"message":"1567","line":188,"column":17,"nodeType":"1568","endLine":188,"endColumn":43},{"ruleId":"1498","severity":1,"message":"1615","line":604,"column":13,"nodeType":"1500","messageId":"1501","endLine":604,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1616","line":741,"column":13,"nodeType":"1500","messageId":"1501","endLine":741,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1617","line":758,"column":11,"nodeType":"1500","messageId":"1501","endLine":758,"endColumn":24},{"ruleId":"1498","severity":1,"message":"1618","line":784,"column":15,"nodeType":"1500","messageId":"1501","endLine":784,"endColumn":28},{"ruleId":"1498","severity":1,"message":"1569","line":2,"column":28,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":34},{"ruleId":"1498","severity":1,"message":"1573","line":10,"column":7,"nodeType":"1500","messageId":"1501","endLine":10,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1612","line":19,"column":17,"nodeType":"1500","messageId":"1501","endLine":19,"endColumn":25},{"ruleId":"1498","severity":1,"message":"1613","line":99,"column":11,"nodeType":"1500","messageId":"1501","endLine":99,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1619","line":116,"column":9,"nodeType":"1500","messageId":"1501","endLine":116,"endColumn":25},{"ruleId":"1498","severity":1,"message":"1614","line":124,"column":20,"nodeType":"1500","messageId":"1501","endLine":124,"endColumn":28},{"ruleId":"1566","severity":1,"message":"1567","line":171,"column":17,"nodeType":"1568","endLine":171,"endColumn":43},{"ruleId":"1498","severity":1,"message":"1556","line":10,"column":9,"nodeType":"1500","messageId":"1501","endLine":10,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1620","line":12,"column":18,"nodeType":"1500","messageId":"1501","endLine":12,"endColumn":27},{"ruleId":"1498","severity":1,"message":"1621","line":13,"column":10,"nodeType":"1500","messageId":"1501","endLine":13,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1622","line":22,"column":11,"nodeType":"1500","messageId":"1501","endLine":22,"endColumn":19},{"ruleId":"1623","severity":1,"message":"1624","line":28,"column":40,"nodeType":"1625","messageId":"1626","endLine":30,"endColumn":10},{"ruleId":"1504","severity":1,"message":"1564","line":41,"column":6,"nodeType":"1506","endLine":41,"endColumn":10,"suggestions":"1627"},{"ruleId":"1498","severity":1,"message":"1628","line":43,"column":10,"nodeType":"1500","messageId":"1501","endLine":43,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1629","line":50,"column":11,"nodeType":"1500","messageId":"1501","endLine":50,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1630","line":74,"column":9,"nodeType":"1500","messageId":"1501","endLine":74,"endColumn":19},{"ruleId":"1504","severity":1,"message":"1631","line":52,"column":6,"nodeType":"1506","endLine":52,"endColumn":17,"suggestions":"1632"},{"ruleId":"1633","severity":1,"message":"1634","line":55,"column":29,"nodeType":"1625","messageId":"1635","endLine":55,"endColumn":31},{"ruleId":"1504","severity":1,"message":"1636","line":61,"column":6,"nodeType":"1506","endLine":61,"endColumn":14,"suggestions":"1637"},{"ruleId":"1542","severity":1,"message":"1543","line":98,"column":25,"nodeType":"1544","messageId":"1545","endLine":98,"endColumn":27},{"ruleId":"1542","severity":1,"message":"1543","line":101,"column":47,"nodeType":"1544","messageId":"1545","endLine":101,"endColumn":49},{"ruleId":"1498","severity":1,"message":"1638","line":209,"column":11,"nodeType":"1500","messageId":"1501","endLine":209,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1639","line":224,"column":11,"nodeType":"1500","messageId":"1501","endLine":224,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1640","line":230,"column":11,"nodeType":"1500","messageId":"1501","endLine":230,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1609","line":3,"column":10,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1641","line":5,"column":10,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1642","line":5,"column":18,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":83,"column":33,"nodeType":"1544","messageId":"1545","endLine":83,"endColumn":35},{"ruleId":"1542","severity":1,"message":"1543","line":84,"column":33,"nodeType":"1544","messageId":"1545","endLine":84,"endColumn":35},{"ruleId":"1542","severity":1,"message":"1543","line":85,"column":33,"nodeType":"1544","messageId":"1545","endLine":85,"endColumn":35},{"ruleId":"1498","severity":1,"message":"1548","line":2,"column":8,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":14},{"ruleId":"1504","severity":1,"message":"1643","line":27,"column":6,"nodeType":"1506","endLine":27,"endColumn":10,"suggestions":"1644"},{"ruleId":"1498","severity":1,"message":"1642","line":2,"column":10,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":15},{"ruleId":"1498","severity":1,"message":"1645","line":17,"column":3,"nodeType":"1500","messageId":"1501","endLine":17,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1646","line":123,"column":9,"nodeType":"1500","messageId":"1501","endLine":123,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1647","line":124,"column":13,"nodeType":"1500","messageId":"1501","endLine":124,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1546","line":6,"column":8,"nodeType":"1500","messageId":"1501","endLine":6,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1547","line":7,"column":8,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1648","line":17,"column":10,"nodeType":"1500","messageId":"1501","endLine":17,"endColumn":25},{"ruleId":"1498","severity":1,"message":"1649","line":17,"column":27,"nodeType":"1500","messageId":"1501","endLine":17,"endColumn":41},{"ruleId":"1504","severity":1,"message":"1650","line":29,"column":6,"nodeType":"1506","endLine":29,"endColumn":17,"suggestions":"1651"},{"ruleId":"1498","severity":1,"message":"1652","line":2,"column":10,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":15},{"ruleId":"1498","severity":1,"message":"1641","line":2,"column":17,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1530","line":3,"column":8,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1653","line":6,"column":10,"nodeType":"1500","messageId":"1501","endLine":6,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1654","line":7,"column":8,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1655","line":9,"column":8,"nodeType":"1500","messageId":"1501","endLine":9,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1656","line":11,"column":8,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1657","line":13,"column":8,"nodeType":"1500","messageId":"1501","endLine":13,"endColumn":12},{"ruleId":"1658","severity":1,"message":"1659","line":96,"column":7,"nodeType":"1660","messageId":"1661","endLine":96,"endColumn":13},{"ruleId":"1658","severity":1,"message":"1659","line":99,"column":7,"nodeType":"1660","messageId":"1661","endLine":99,"endColumn":13},{"ruleId":"1658","severity":1,"message":"1659","line":102,"column":7,"nodeType":"1660","messageId":"1661","endLine":102,"endColumn":13},{"ruleId":"1658","severity":1,"message":"1659","line":105,"column":7,"nodeType":"1660","messageId":"1661","endLine":105,"endColumn":13},{"ruleId":"1542","severity":1,"message":"1543","line":201,"column":47,"nodeType":"1544","messageId":"1545","endLine":201,"endColumn":49},{"ruleId":"1542","severity":1,"message":"1543","line":213,"column":54,"nodeType":"1544","messageId":"1545","endLine":213,"endColumn":56},{"ruleId":"1662","severity":1,"message":"1663","line":244,"column":43,"nodeType":"1568","endLine":244,"endColumn":89},{"ruleId":"1662","severity":1,"message":"1663","line":291,"column":35,"nodeType":"1568","endLine":291,"endColumn":80},{"ruleId":"1662","severity":1,"message":"1663","line":315,"column":15,"nodeType":"1568","endLine":315,"endColumn":81},{"ruleId":"1542","severity":1,"message":"1543","line":356,"column":24,"nodeType":"1544","messageId":"1545","endLine":356,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":361,"column":23,"nodeType":"1544","messageId":"1545","endLine":361,"endColumn":25},{"ruleId":"1664","severity":1,"message":"1665","line":364,"column":9,"nodeType":"1568","endLine":368,"endColumn":10},{"ruleId":"1542","severity":1,"message":"1543","line":373,"column":30,"nodeType":"1544","messageId":"1545","endLine":373,"endColumn":32},{"ruleId":"1664","severity":1,"message":"1665","line":376,"column":9,"nodeType":"1568","endLine":380,"endColumn":10},{"ruleId":"1664","severity":1,"message":"1665","line":387,"column":7,"nodeType":"1568","endLine":391,"endColumn":8},{"ruleId":"1498","severity":1,"message":"1666","line":409,"column":7,"nodeType":"1500","messageId":"1501","endLine":409,"endColumn":10},{"ruleId":"1542","severity":1,"message":"1543","line":410,"column":17,"nodeType":"1544","messageId":"1545","endLine":410,"endColumn":19},{"ruleId":"1542","severity":1,"message":"1543","line":426,"column":24,"nodeType":"1544","messageId":"1545","endLine":426,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":475,"column":20,"nodeType":"1544","messageId":"1545","endLine":475,"endColumn":22},{"ruleId":"1542","severity":1,"message":"1543","line":476,"column":20,"nodeType":"1544","messageId":"1545","endLine":476,"endColumn":22},{"ruleId":"1542","severity":1,"message":"1543","line":508,"column":24,"nodeType":"1544","messageId":"1545","endLine":508,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":510,"column":31,"nodeType":"1544","messageId":"1545","endLine":510,"endColumn":33},{"ruleId":"1542","severity":1,"message":"1543","line":551,"column":33,"nodeType":"1544","messageId":"1545","endLine":551,"endColumn":35},{"ruleId":"1542","severity":1,"message":"1543","line":552,"column":21,"nodeType":"1544","messageId":"1545","endLine":552,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":553,"column":23,"nodeType":"1544","messageId":"1545","endLine":553,"endColumn":25},{"ruleId":"1566","severity":1,"message":"1567","line":590,"column":19,"nodeType":"1568","endLine":590,"endColumn":40},{"ruleId":"1542","severity":1,"message":"1543","line":614,"column":28,"nodeType":"1544","messageId":"1545","endLine":614,"endColumn":30},{"ruleId":"1542","severity":1,"message":"1543","line":615,"column":29,"nodeType":"1544","messageId":"1545","endLine":615,"endColumn":31},{"ruleId":"1542","severity":1,"message":"1543","line":616,"column":29,"nodeType":"1544","messageId":"1545","endLine":616,"endColumn":31},{"ruleId":"1542","severity":1,"message":"1543","line":617,"column":29,"nodeType":"1544","messageId":"1545","endLine":617,"endColumn":31},{"ruleId":"1566","severity":1,"message":"1567","line":633,"column":31,"nodeType":"1568","endLine":633,"endColumn":52},{"ruleId":"1566","severity":1,"message":"1567","line":668,"column":13,"nodeType":"1568","endLine":671,"endColumn":15},{"ruleId":"1542","severity":1,"message":"1543","line":697,"column":28,"nodeType":"1544","messageId":"1545","endLine":697,"endColumn":30},{"ruleId":"1667","severity":1,"message":"1668","line":713,"column":21,"nodeType":"1669","messageId":"1670","endLine":715,"endColumn":22},{"ruleId":"1566","severity":1,"message":"1567","line":725,"column":33,"nodeType":"1568","endLine":731,"endColumn":35},{"ruleId":"1542","severity":1,"message":"1543","line":766,"column":35,"nodeType":"1544","messageId":"1545","endLine":766,"endColumn":37},{"ruleId":"1542","severity":1,"message":"1543","line":768,"column":27,"nodeType":"1544","messageId":"1545","endLine":768,"endColumn":29},{"ruleId":"1566","severity":1,"message":"1567","line":837,"column":19,"nodeType":"1568","endLine":843,"endColumn":21},{"ruleId":"1542","severity":1,"message":"1543","line":850,"column":34,"nodeType":"1544","messageId":"1545","endLine":850,"endColumn":36},{"ruleId":"1566","severity":1,"message":"1567","line":900,"column":21,"nodeType":"1568","endLine":906,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":914,"column":34,"nodeType":"1544","messageId":"1545","endLine":914,"endColumn":36},{"ruleId":"1566","severity":1,"message":"1567","line":974,"column":19,"nodeType":"1568","endLine":980,"endColumn":21},{"ruleId":"1542","severity":1,"message":"1543","line":987,"column":34,"nodeType":"1544","messageId":"1545","endLine":987,"endColumn":36},{"ruleId":"1566","severity":1,"message":"1567","line":1042,"column":19,"nodeType":"1568","endLine":1048,"endColumn":21},{"ruleId":"1542","severity":1,"message":"1543","line":1055,"column":34,"nodeType":"1544","messageId":"1545","endLine":1055,"endColumn":36},{"ruleId":"1566","severity":1,"message":"1567","line":1084,"column":21,"nodeType":"1568","endLine":1090,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":1130,"column":34,"nodeType":"1544","messageId":"1545","endLine":1130,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":1141,"column":35,"nodeType":"1544","messageId":"1545","endLine":1141,"endColumn":37},{"ruleId":"1542","severity":1,"message":"1543","line":1143,"column":27,"nodeType":"1544","messageId":"1545","endLine":1143,"endColumn":29},{"ruleId":"1566","severity":1,"message":"1567","line":1206,"column":19,"nodeType":"1568","endLine":1212,"endColumn":21},{"ruleId":"1542","severity":1,"message":"1543","line":1219,"column":34,"nodeType":"1544","messageId":"1545","endLine":1219,"endColumn":36},{"ruleId":"1566","severity":1,"message":"1567","line":1269,"column":21,"nodeType":"1568","endLine":1275,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":1283,"column":34,"nodeType":"1544","messageId":"1545","endLine":1283,"endColumn":36},{"ruleId":"1566","severity":1,"message":"1567","line":1343,"column":19,"nodeType":"1568","endLine":1349,"endColumn":21},{"ruleId":"1542","severity":1,"message":"1543","line":1356,"column":34,"nodeType":"1544","messageId":"1545","endLine":1356,"endColumn":36},{"ruleId":"1566","severity":1,"message":"1567","line":1411,"column":19,"nodeType":"1568","endLine":1417,"endColumn":21},{"ruleId":"1542","severity":1,"message":"1543","line":1424,"column":34,"nodeType":"1544","messageId":"1545","endLine":1424,"endColumn":36},{"ruleId":"1566","severity":1,"message":"1567","line":1453,"column":21,"nodeType":"1568","endLine":1459,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":1499,"column":34,"nodeType":"1544","messageId":"1545","endLine":1499,"endColumn":36},{"ruleId":"1498","severity":1,"message":"1671","line":1670,"column":9,"nodeType":"1500","messageId":"1501","endLine":1670,"endColumn":12},{"ruleId":"1542","severity":1,"message":"1543","line":1704,"column":30,"nodeType":"1544","messageId":"1545","endLine":1704,"endColumn":32},{"ruleId":"1542","severity":1,"message":"1543","line":1705,"column":31,"nodeType":"1544","messageId":"1545","endLine":1705,"endColumn":33},{"ruleId":"1542","severity":1,"message":"1543","line":1706,"column":31,"nodeType":"1544","messageId":"1545","endLine":1706,"endColumn":33},{"ruleId":"1542","severity":1,"message":"1543","line":1707,"column":31,"nodeType":"1544","messageId":"1545","endLine":1707,"endColumn":33},{"ruleId":"1542","severity":1,"message":"1543","line":1770,"column":42,"nodeType":"1544","messageId":"1545","endLine":1770,"endColumn":44},{"ruleId":"1542","severity":1,"message":"1543","line":1782,"column":42,"nodeType":"1544","messageId":"1545","endLine":1782,"endColumn":44},{"ruleId":"1542","severity":1,"message":"1543","line":1791,"column":42,"nodeType":"1544","messageId":"1545","endLine":1791,"endColumn":44},{"ruleId":"1542","severity":1,"message":"1543","line":1816,"column":49,"nodeType":"1544","messageId":"1545","endLine":1816,"endColumn":51},{"ruleId":"1667","severity":1,"message":"1668","line":1839,"column":21,"nodeType":"1669","messageId":"1670","endLine":1841,"endColumn":22},{"ruleId":"1542","severity":1,"message":"1543","line":1860,"column":50,"nodeType":"1544","messageId":"1545","endLine":1860,"endColumn":52},{"ruleId":"1542","severity":1,"message":"1543","line":1870,"column":50,"nodeType":"1544","messageId":"1545","endLine":1870,"endColumn":52},{"ruleId":"1542","severity":1,"message":"1543","line":1889,"column":55,"nodeType":"1544","messageId":"1545","endLine":1889,"endColumn":57},{"ruleId":"1667","severity":1,"message":"1668","line":1907,"column":21,"nodeType":"1669","messageId":"1670","endLine":1909,"endColumn":22},{"ruleId":"1542","severity":1,"message":"1543","line":1928,"column":50,"nodeType":"1544","messageId":"1545","endLine":1928,"endColumn":52},{"ruleId":"1542","severity":1,"message":"1543","line":1937,"column":50,"nodeType":"1544","messageId":"1545","endLine":1937,"endColumn":52},{"ruleId":"1542","severity":1,"message":"1543","line":1955,"column":55,"nodeType":"1544","messageId":"1545","endLine":1955,"endColumn":57},{"ruleId":"1542","severity":1,"message":"1543","line":1960,"column":30,"nodeType":"1544","messageId":"1545","endLine":1960,"endColumn":32},{"ruleId":"1542","severity":1,"message":"1543","line":1969,"column":34,"nodeType":"1544","messageId":"1545","endLine":1969,"endColumn":36},{"ruleId":"1667","severity":1,"message":"1668","line":1982,"column":19,"nodeType":"1669","messageId":"1670","endLine":1984,"endColumn":20},{"ruleId":"1542","severity":1,"message":"1543","line":2003,"column":48,"nodeType":"1544","messageId":"1545","endLine":2003,"endColumn":50},{"ruleId":"1542","severity":1,"message":"1543","line":2012,"column":48,"nodeType":"1544","messageId":"1545","endLine":2012,"endColumn":50},{"ruleId":"1542","severity":1,"message":"1543","line":2058,"column":38,"nodeType":"1544","messageId":"1545","endLine":2058,"endColumn":40},{"ruleId":"1542","severity":1,"message":"1543","line":2117,"column":45,"nodeType":"1544","messageId":"1545","endLine":2117,"endColumn":47},{"ruleId":"1542","severity":1,"message":"1543","line":2179,"column":45,"nodeType":"1544","messageId":"1545","endLine":2179,"endColumn":47},{"ruleId":"1542","severity":1,"message":"1543","line":2222,"column":45,"nodeType":"1544","messageId":"1545","endLine":2222,"endColumn":47},{"ruleId":"1542","severity":1,"message":"1543","line":2265,"column":45,"nodeType":"1544","messageId":"1545","endLine":2265,"endColumn":47},{"ruleId":"1542","severity":1,"message":"1543","line":2309,"column":45,"nodeType":"1544","messageId":"1545","endLine":2309,"endColumn":47},{"ruleId":"1498","severity":1,"message":"1672","line":1,"column":17,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":26},{"ruleId":"1498","severity":1,"message":"1653","line":17,"column":10,"nodeType":"1500","messageId":"1501","endLine":17,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1641","line":21,"column":10,"nodeType":"1500","messageId":"1501","endLine":21,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1673","line":26,"column":8,"nodeType":"1500","messageId":"1501","endLine":26,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1674","line":27,"column":8,"nodeType":"1500","messageId":"1501","endLine":27,"endColumn":11},{"ruleId":"1498","severity":1,"message":"1675","line":28,"column":8,"nodeType":"1500","messageId":"1501","endLine":28,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1652","line":29,"column":8,"nodeType":"1500","messageId":"1501","endLine":29,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1676","line":30,"column":8,"nodeType":"1500","messageId":"1501","endLine":30,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1677","line":31,"column":8,"nodeType":"1500","messageId":"1501","endLine":31,"endColumn":24},{"ruleId":"1542","severity":1,"message":"1543","line":74,"column":24,"nodeType":"1544","messageId":"1545","endLine":74,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":77,"column":24,"nodeType":"1544","messageId":"1545","endLine":77,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":80,"column":24,"nodeType":"1544","messageId":"1545","endLine":80,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":83,"column":24,"nodeType":"1544","messageId":"1545","endLine":83,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":86,"column":24,"nodeType":"1544","messageId":"1545","endLine":86,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":89,"column":24,"nodeType":"1544","messageId":"1545","endLine":89,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":92,"column":24,"nodeType":"1544","messageId":"1545","endLine":92,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":95,"column":24,"nodeType":"1544","messageId":"1545","endLine":95,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":98,"column":24,"nodeType":"1544","messageId":"1545","endLine":98,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":101,"column":24,"nodeType":"1544","messageId":"1545","endLine":101,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":104,"column":24,"nodeType":"1544","messageId":"1545","endLine":104,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":107,"column":24,"nodeType":"1544","messageId":"1545","endLine":107,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":110,"column":24,"nodeType":"1544","messageId":"1545","endLine":110,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":113,"column":24,"nodeType":"1544","messageId":"1545","endLine":113,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":116,"column":24,"nodeType":"1544","messageId":"1545","endLine":116,"endColumn":26},{"ruleId":"1498","severity":1,"message":"1678","line":131,"column":9,"nodeType":"1500","messageId":"1501","endLine":131,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1679","line":164,"column":10,"nodeType":"1500","messageId":"1501","endLine":164,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1680","line":164,"column":19,"nodeType":"1500","messageId":"1501","endLine":164,"endColumn":29},{"ruleId":"1566","severity":1,"message":"1567","line":320,"column":19,"nodeType":"1568","endLine":320,"endColumn":57},{"ruleId":"1498","severity":1,"message":"1681","line":4,"column":8,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1546","line":6,"column":8,"nodeType":"1500","messageId":"1501","endLine":6,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1547","line":7,"column":8,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1682","line":9,"column":8,"nodeType":"1500","messageId":"1501","endLine":9,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1683","line":11,"column":19,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":30},{"ruleId":"1498","severity":1,"message":"1684","line":11,"column":32,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":43},{"ruleId":"1498","severity":1,"message":"1548","line":13,"column":8,"nodeType":"1500","messageId":"1501","endLine":13,"endColumn":14},{"ruleId":"1504","severity":1,"message":"1685","line":53,"column":5,"nodeType":"1506","endLine":53,"endColumn":16,"suggestions":"1686"},{"ruleId":"1542","severity":1,"message":"1543","line":40,"column":71,"nodeType":"1544","messageId":"1545","endLine":40,"endColumn":73},{"ruleId":"1542","severity":1,"message":"1543","line":54,"column":36,"nodeType":"1544","messageId":"1545","endLine":54,"endColumn":38},{"ruleId":"1542","severity":1,"message":"1543","line":57,"column":36,"nodeType":"1544","messageId":"1545","endLine":57,"endColumn":38},{"ruleId":"1542","severity":1,"message":"1543","line":60,"column":36,"nodeType":"1544","messageId":"1545","endLine":60,"endColumn":38},{"ruleId":"1504","severity":1,"message":"1687","line":64,"column":6,"nodeType":"1506","endLine":64,"endColumn":18,"suggestions":"1688"},{"ruleId":"1542","severity":1,"message":"1543","line":210,"column":37,"nodeType":"1544","messageId":"1545","endLine":210,"endColumn":39},{"ruleId":"1542","severity":1,"message":"1543","line":215,"column":37,"nodeType":"1544","messageId":"1545","endLine":215,"endColumn":39},{"ruleId":"1542","severity":1,"message":"1543","line":220,"column":37,"nodeType":"1544","messageId":"1545","endLine":220,"endColumn":39},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1690","line":4,"column":39,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":51},{"ruleId":"1498","severity":1,"message":"1691","line":11,"column":10,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1515","line":11,"column":16,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1692","line":4,"column":10,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":15},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1529","line":1,"column":42,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":50},{"ruleId":"1498","severity":1,"message":"1693","line":3,"column":8,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1572","line":4,"column":10,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1546","line":5,"column":8,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1508","line":1,"column":25,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":28},{"ruleId":"1498","severity":1,"message":"1509","line":1,"column":30,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":33},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1529","line":1,"column":42,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":50},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1529","line":1,"column":42,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":50},{"ruleId":"1498","severity":1,"message":"1499","line":1,"column":17,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":25},{"ruleId":"1498","severity":1,"message":"1641","line":2,"column":10,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1642","line":2,"column":18,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1529","line":2,"column":25,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":33},{"ruleId":"1498","severity":1,"message":"1499","line":1,"column":17,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":25},{"ruleId":"1498","severity":1,"message":"1641","line":2,"column":10,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1642","line":2,"column":18,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1529","line":2,"column":25,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":33},{"ruleId":"1498","severity":1,"message":"1694","line":4,"column":5,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":37},{"ruleId":"1498","severity":1,"message":"1556","line":17,"column":9,"nodeType":"1500","messageId":"1501","endLine":17,"endColumn":16},{"ruleId":"1542","severity":1,"message":"1543","line":65,"column":20,"nodeType":"1544","messageId":"1545","endLine":65,"endColumn":22},{"ruleId":"1542","severity":1,"message":"1543","line":125,"column":41,"nodeType":"1544","messageId":"1545","endLine":125,"endColumn":43},{"ruleId":"1542","severity":1,"message":"1543","line":137,"column":40,"nodeType":"1544","messageId":"1545","endLine":137,"endColumn":42},{"ruleId":"1542","severity":1,"message":"1543","line":148,"column":43,"nodeType":"1544","messageId":"1545","endLine":148,"endColumn":45},{"ruleId":"1542","severity":1,"message":"1543","line":164,"column":46,"nodeType":"1544","messageId":"1545","endLine":164,"endColumn":48},{"ruleId":"1542","severity":1,"message":"1543","line":176,"column":46,"nodeType":"1544","messageId":"1545","endLine":176,"endColumn":48},{"ruleId":"1542","severity":1,"message":"1543","line":187,"column":41,"nodeType":"1544","messageId":"1545","endLine":187,"endColumn":43},{"ruleId":"1542","severity":1,"message":"1543","line":200,"column":44,"nodeType":"1544","messageId":"1545","endLine":200,"endColumn":46},{"ruleId":"1542","severity":1,"message":"1543","line":209,"column":44,"nodeType":"1544","messageId":"1545","endLine":209,"endColumn":46},{"ruleId":"1498","severity":1,"message":"1499","line":1,"column":17,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":25},{"ruleId":"1498","severity":1,"message":"1642","line":2,"column":10,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":15},{"ruleId":"1498","severity":1,"message":"1546","line":4,"column":8,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1547","line":5,"column":8,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":16},{"ruleId":"1579","severity":1,"message":"1695","line":36,"column":37,"nodeType":"1581","messageId":"1582","endLine":36,"endColumn":56,"fix":"1696"},{"ruleId":"1542","severity":1,"message":"1543","line":60,"column":19,"nodeType":"1544","messageId":"1545","endLine":60,"endColumn":21},{"ruleId":"1542","severity":1,"message":"1543","line":64,"column":19,"nodeType":"1544","messageId":"1545","endLine":64,"endColumn":21},{"ruleId":"1542","severity":1,"message":"1543","line":68,"column":19,"nodeType":"1544","messageId":"1545","endLine":68,"endColumn":21},{"ruleId":"1542","severity":1,"message":"1543","line":98,"column":22,"nodeType":"1544","messageId":"1545","endLine":98,"endColumn":24},{"ruleId":"1542","severity":1,"message":"1543","line":98,"column":47,"nodeType":"1544","messageId":"1545","endLine":98,"endColumn":49},{"ruleId":"1498","severity":1,"message":"1697","line":110,"column":13,"nodeType":"1500","messageId":"1501","endLine":110,"endColumn":15},{"ruleId":"1542","severity":1,"message":"1578","line":120,"column":25,"nodeType":"1544","messageId":"1545","endLine":120,"endColumn":27},{"ruleId":"1542","severity":1,"message":"1578","line":120,"column":49,"nodeType":"1544","messageId":"1545","endLine":120,"endColumn":51},{"ruleId":"1498","severity":1,"message":"1528","line":5,"column":8,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":29},{"ruleId":"1542","severity":1,"message":"1578","line":16,"column":21,"nodeType":"1544","messageId":"1545","endLine":16,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":20,"column":23,"nodeType":"1544","messageId":"1545","endLine":20,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":22,"column":29,"nodeType":"1544","messageId":"1545","endLine":22,"endColumn":31},{"ruleId":"1542","severity":1,"message":"1543","line":24,"column":29,"nodeType":"1544","messageId":"1545","endLine":24,"endColumn":31},{"ruleId":"1542","severity":1,"message":"1578","line":40,"column":21,"nodeType":"1544","messageId":"1545","endLine":40,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":43,"column":23,"nodeType":"1544","messageId":"1545","endLine":43,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":45,"column":29,"nodeType":"1544","messageId":"1545","endLine":45,"endColumn":31},{"ruleId":"1542","severity":1,"message":"1543","line":47,"column":29,"nodeType":"1544","messageId":"1545","endLine":47,"endColumn":31},{"ruleId":"1498","severity":1,"message":"1698","line":5,"column":8,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":24},{"ruleId":"1498","severity":1,"message":"1699","line":9,"column":8,"nodeType":"1500","messageId":"1501","endLine":9,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1700","line":14,"column":9,"nodeType":"1500","messageId":"1501","endLine":14,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1701","line":7,"column":8,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":12},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1702","line":16,"column":10,"nodeType":"1500","messageId":"1501","endLine":16,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1703","line":17,"column":10,"nodeType":"1500","messageId":"1501","endLine":17,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1704","line":18,"column":10,"nodeType":"1500","messageId":"1501","endLine":18,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1705","line":18,"column":21,"nodeType":"1500","messageId":"1501","endLine":18,"endColumn":33},{"ruleId":"1542","severity":1,"message":"1543","line":40,"column":21,"nodeType":"1544","messageId":"1545","endLine":40,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":46,"column":24,"nodeType":"1544","messageId":"1545","endLine":46,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":57,"column":34,"nodeType":"1544","messageId":"1545","endLine":57,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":208,"column":54,"nodeType":"1544","messageId":"1545","endLine":208,"endColumn":56},{"ruleId":"1542","severity":1,"message":"1543","line":239,"column":43,"nodeType":"1544","messageId":"1545","endLine":239,"endColumn":45},{"ruleId":"1566","severity":1,"message":"1567","line":271,"column":19,"nodeType":"1568","endLine":271,"endColumn":81},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1702","line":20,"column":10,"nodeType":"1500","messageId":"1501","endLine":20,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1703","line":21,"column":10,"nodeType":"1500","messageId":"1501","endLine":21,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1704","line":27,"column":10,"nodeType":"1500","messageId":"1501","endLine":27,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1705","line":27,"column":21,"nodeType":"1500","messageId":"1501","endLine":27,"endColumn":33},{"ruleId":"1542","severity":1,"message":"1543","line":65,"column":21,"nodeType":"1544","messageId":"1545","endLine":65,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":71,"column":24,"nodeType":"1544","messageId":"1545","endLine":71,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":77,"column":25,"nodeType":"1544","messageId":"1545","endLine":77,"endColumn":27},{"ruleId":"1542","severity":1,"message":"1543","line":83,"column":24,"nodeType":"1544","messageId":"1545","endLine":83,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":99,"column":34,"nodeType":"1544","messageId":"1545","endLine":99,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":341,"column":53,"nodeType":"1544","messageId":"1545","endLine":341,"endColumn":55},{"ruleId":"1542","severity":1,"message":"1543","line":379,"column":43,"nodeType":"1544","messageId":"1545","endLine":379,"endColumn":45},{"ruleId":"1566","severity":1,"message":"1567","line":411,"column":19,"nodeType":"1568","endLine":411,"endColumn":81},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1675","line":10,"column":8,"nodeType":"1500","messageId":"1501","endLine":10,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1704","line":40,"column":10,"nodeType":"1500","messageId":"1501","endLine":40,"endColumn":19},{"ruleId":"1542","severity":1,"message":"1543","line":70,"column":14,"nodeType":"1544","messageId":"1545","endLine":70,"endColumn":16},{"ruleId":"1542","severity":1,"message":"1543","line":76,"column":24,"nodeType":"1544","messageId":"1545","endLine":76,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":77,"column":25,"nodeType":"1544","messageId":"1545","endLine":77,"endColumn":27},{"ruleId":"1542","severity":1,"message":"1543","line":78,"column":26,"nodeType":"1544","messageId":"1545","endLine":78,"endColumn":28},{"ruleId":"1542","severity":1,"message":"1543","line":93,"column":34,"nodeType":"1544","messageId":"1545","endLine":93,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":352,"column":43,"nodeType":"1544","messageId":"1545","endLine":352,"endColumn":45},{"ruleId":"1566","severity":1,"message":"1567","line":384,"column":19,"nodeType":"1568","endLine":384,"endColumn":81},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1702","line":31,"column":10,"nodeType":"1500","messageId":"1501","endLine":31,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1703","line":32,"column":10,"nodeType":"1500","messageId":"1501","endLine":32,"endColumn":20},{"ruleId":"1542","severity":1,"message":"1578","line":83,"column":19,"nodeType":"1544","messageId":"1545","endLine":83,"endColumn":21},{"ruleId":"1542","severity":1,"message":"1543","line":131,"column":14,"nodeType":"1544","messageId":"1545","endLine":131,"endColumn":16},{"ruleId":"1542","severity":1,"message":"1543","line":146,"column":34,"nodeType":"1544","messageId":"1545","endLine":146,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":295,"column":49,"nodeType":"1544","messageId":"1545","endLine":295,"endColumn":51},{"ruleId":"1542","severity":1,"message":"1543","line":305,"column":49,"nodeType":"1544","messageId":"1545","endLine":305,"endColumn":51},{"ruleId":"1542","severity":1,"message":"1543","line":322,"column":48,"nodeType":"1544","messageId":"1545","endLine":322,"endColumn":50},{"ruleId":"1542","severity":1,"message":"1543","line":587,"column":43,"nodeType":"1544","messageId":"1545","endLine":587,"endColumn":45},{"ruleId":"1566","severity":1,"message":"1567","line":619,"column":19,"nodeType":"1568","endLine":619,"endColumn":81},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1702","line":31,"column":10,"nodeType":"1500","messageId":"1501","endLine":31,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1703","line":32,"column":10,"nodeType":"1500","messageId":"1501","endLine":32,"endColumn":20},{"ruleId":"1542","severity":1,"message":"1543","line":62,"column":21,"nodeType":"1544","messageId":"1545","endLine":62,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":79,"column":34,"nodeType":"1544","messageId":"1545","endLine":79,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":334,"column":35,"nodeType":"1544","messageId":"1545","endLine":334,"endColumn":37},{"ruleId":"1542","severity":1,"message":"1543","line":347,"column":35,"nodeType":"1544","messageId":"1545","endLine":347,"endColumn":37},{"ruleId":"1542","severity":1,"message":"1543","line":360,"column":35,"nodeType":"1544","messageId":"1545","endLine":360,"endColumn":37},{"ruleId":"1542","severity":1,"message":"1543","line":398,"column":43,"nodeType":"1544","messageId":"1545","endLine":398,"endColumn":45},{"ruleId":"1566","severity":1,"message":"1567","line":430,"column":19,"nodeType":"1568","endLine":430,"endColumn":81},{"ruleId":"1498","severity":1,"message":"1672","line":1,"column":27,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":36},{"ruleId":"1498","severity":1,"message":"1642","line":2,"column":10,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":15},{"ruleId":"1498","severity":1,"message":"1510","line":2,"column":27,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":31},{"ruleId":"1498","severity":1,"message":"1641","line":2,"column":33,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":39},{"ruleId":"1498","severity":1,"message":"1706","line":6,"column":10,"nodeType":"1500","messageId":"1501","endLine":6,"endColumn":26},{"ruleId":"1498","severity":1,"message":"1645","line":13,"column":20,"nodeType":"1500","messageId":"1501","endLine":13,"endColumn":37},{"ruleId":"1498","severity":1,"message":"1707","line":168,"column":9,"nodeType":"1500","messageId":"1501","endLine":168,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1672","line":1,"column":27,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":36},{"ruleId":"1498","severity":1,"message":"1708","line":3,"column":8,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1709","line":4,"column":8,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1710","line":6,"column":8,"nodeType":"1500","messageId":"1501","endLine":6,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1528","line":7,"column":8,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1711","line":8,"column":8,"nodeType":"1500","messageId":"1501","endLine":8,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1712","line":10,"column":24,"nodeType":"1500","messageId":"1501","endLine":10,"endColumn":36},{"ruleId":"1498","severity":1,"message":"1689","line":2,"column":35,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":40},{"ruleId":"1542","severity":1,"message":"1543","line":78,"column":22,"nodeType":"1544","messageId":"1545","endLine":78,"endColumn":24},{"ruleId":"1542","severity":1,"message":"1543","line":165,"column":27,"nodeType":"1544","messageId":"1545","endLine":165,"endColumn":29},{"ruleId":"1542","severity":1,"message":"1543","line":273,"column":48,"nodeType":"1544","messageId":"1545","endLine":273,"endColumn":50},{"ruleId":"1542","severity":1,"message":"1543","line":282,"column":36,"nodeType":"1544","messageId":"1545","endLine":282,"endColumn":38},{"ruleId":"1579","severity":1,"message":"1713","line":300,"column":31,"nodeType":"1581","messageId":"1582","endLine":300,"endColumn":52,"fix":"1714"},{"ruleId":"1579","severity":1,"message":"1715","line":318,"column":31,"nodeType":"1581","messageId":"1582","endLine":318,"endColumn":52,"fix":"1716"},{"ruleId":"1498","severity":1,"message":"1529","line":4,"column":3,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":11},{"ruleId":"1498","severity":1,"message":"1641","line":5,"column":3,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":9},{"ruleId":"1498","severity":1,"message":"1717","line":6,"column":3,"nodeType":"1500","messageId":"1501","endLine":6,"endColumn":8},{"ruleId":"1498","severity":1,"message":"1689","line":9,"column":3,"nodeType":"1500","messageId":"1501","endLine":9,"endColumn":8},{"ruleId":"1498","severity":1,"message":"1718","line":13,"column":10,"nodeType":"1500","messageId":"1501","endLine":13,"endColumn":16},{"ruleId":"1504","severity":1,"message":"1719","line":25,"column":6,"nodeType":"1506","endLine":25,"endColumn":30,"suggestions":"1720"},{"ruleId":"1542","severity":1,"message":"1543","line":119,"column":37,"nodeType":"1544","messageId":"1545","endLine":119,"endColumn":39},{"ruleId":"1542","severity":1,"message":"1543","line":648,"column":37,"nodeType":"1544","messageId":"1545","endLine":648,"endColumn":39},{"ruleId":"1542","severity":1,"message":"1543","line":1177,"column":37,"nodeType":"1544","messageId":"1545","endLine":1177,"endColumn":39},{"ruleId":"1498","severity":1,"message":"1689","line":2,"column":35,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1693","line":4,"column":8,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1721","line":5,"column":8,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1722","line":20,"column":11,"nodeType":"1500","messageId":"1501","endLine":20,"endColumn":18},{"ruleId":"1542","severity":1,"message":"1543","line":27,"column":17,"nodeType":"1544","messageId":"1545","endLine":27,"endColumn":19},{"ruleId":"1542","severity":1,"message":"1543","line":30,"column":29,"nodeType":"1544","messageId":"1545","endLine":30,"endColumn":31},{"ruleId":"1542","severity":1,"message":"1543","line":39,"column":16,"nodeType":"1544","messageId":"1545","endLine":39,"endColumn":18},{"ruleId":"1542","severity":1,"message":"1543","line":100,"column":39,"nodeType":"1544","messageId":"1545","endLine":100,"endColumn":41},{"ruleId":"1498","severity":1,"message":"1689","line":2,"column":35,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1693","line":4,"column":8,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":20},{"ruleId":"1542","severity":1,"message":"1543","line":32,"column":17,"nodeType":"1544","messageId":"1545","endLine":32,"endColumn":19},{"ruleId":"1542","severity":1,"message":"1543","line":35,"column":26,"nodeType":"1544","messageId":"1545","endLine":35,"endColumn":28},{"ruleId":"1542","severity":1,"message":"1543","line":38,"column":23,"nodeType":"1544","messageId":"1545","endLine":38,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":50,"column":16,"nodeType":"1544","messageId":"1545","endLine":50,"endColumn":18},{"ruleId":"1542","severity":1,"message":"1543","line":112,"column":35,"nodeType":"1544","messageId":"1545","endLine":112,"endColumn":37},{"ruleId":"1498","severity":1,"message":"1672","line":1,"column":27,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":36},{"ruleId":"1498","severity":1,"message":"1708","line":3,"column":8,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1709","line":4,"column":8,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1710","line":6,"column":8,"nodeType":"1500","messageId":"1501","endLine":6,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1528","line":7,"column":8,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1723","line":10,"column":23,"nodeType":"1500","messageId":"1501","endLine":10,"endColumn":34},{"ruleId":"1542","severity":1,"message":"1543","line":78,"column":40,"nodeType":"1544","messageId":"1545","endLine":78,"endColumn":42},{"ruleId":"1498","severity":1,"message":"1724","line":5,"column":8,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1693","line":3,"column":8,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1725","line":7,"column":8,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1693","line":3,"column":8,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1726","line":19,"column":10,"nodeType":"1500","messageId":"1501","endLine":19,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1727","line":19,"column":23,"nodeType":"1500","messageId":"1501","endLine":19,"endColumn":37},{"ruleId":"1542","severity":1,"message":"1543","line":37,"column":31,"nodeType":"1544","messageId":"1545","endLine":37,"endColumn":33},{"ruleId":"1542","severity":1,"message":"1543","line":134,"column":48,"nodeType":"1544","messageId":"1545","endLine":134,"endColumn":50},{"ruleId":"1542","severity":1,"message":"1543","line":139,"column":54,"nodeType":"1544","messageId":"1545","endLine":139,"endColumn":56},{"ruleId":"1542","severity":1,"message":"1543","line":163,"column":48,"nodeType":"1544","messageId":"1545","endLine":163,"endColumn":50},{"ruleId":"1542","severity":1,"message":"1543","line":163,"column":76,"nodeType":"1544","messageId":"1545","endLine":163,"endColumn":78},{"ruleId":"1542","severity":1,"message":"1543","line":168,"column":54,"nodeType":"1544","messageId":"1545","endLine":168,"endColumn":56},{"ruleId":"1542","severity":1,"message":"1543","line":186,"column":54,"nodeType":"1544","messageId":"1545","endLine":186,"endColumn":56},{"ruleId":"1542","severity":1,"message":"1543","line":244,"column":37,"nodeType":"1544","messageId":"1545","endLine":244,"endColumn":39},{"ruleId":"1542","severity":1,"message":"1543","line":49,"column":19,"nodeType":"1544","messageId":"1545","endLine":49,"endColumn":21},{"ruleId":"1542","severity":1,"message":"1543","line":51,"column":26,"nodeType":"1544","messageId":"1545","endLine":51,"endColumn":28},{"ruleId":"1542","severity":1,"message":"1543","line":54,"column":23,"nodeType":"1544","messageId":"1545","endLine":54,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":57,"column":23,"nodeType":"1544","messageId":"1545","endLine":57,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":60,"column":23,"nodeType":"1544","messageId":"1545","endLine":60,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":63,"column":23,"nodeType":"1544","messageId":"1545","endLine":63,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":66,"column":23,"nodeType":"1544","messageId":"1545","endLine":66,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":69,"column":23,"nodeType":"1544","messageId":"1545","endLine":69,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":72,"column":23,"nodeType":"1544","messageId":"1545","endLine":72,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":75,"column":23,"nodeType":"1544","messageId":"1545","endLine":75,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":78,"column":23,"nodeType":"1544","messageId":"1545","endLine":78,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":81,"column":23,"nodeType":"1544","messageId":"1545","endLine":81,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":84,"column":23,"nodeType":"1544","messageId":"1545","endLine":84,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":87,"column":23,"nodeType":"1544","messageId":"1545","endLine":87,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":235,"column":35,"nodeType":"1544","messageId":"1545","endLine":235,"endColumn":37},{"ruleId":"1542","severity":1,"message":"1543","line":236,"column":34,"nodeType":"1544","messageId":"1545","endLine":236,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":237,"column":34,"nodeType":"1544","messageId":"1545","endLine":237,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":238,"column":34,"nodeType":"1544","messageId":"1545","endLine":238,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":239,"column":34,"nodeType":"1544","messageId":"1545","endLine":239,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":240,"column":34,"nodeType":"1544","messageId":"1545","endLine":240,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":241,"column":34,"nodeType":"1544","messageId":"1545","endLine":241,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":242,"column":34,"nodeType":"1544","messageId":"1545","endLine":242,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":243,"column":34,"nodeType":"1544","messageId":"1545","endLine":243,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":244,"column":34,"nodeType":"1544","messageId":"1545","endLine":244,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":245,"column":34,"nodeType":"1544","messageId":"1545","endLine":245,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":246,"column":34,"nodeType":"1544","messageId":"1545","endLine":246,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":247,"column":34,"nodeType":"1544","messageId":"1545","endLine":247,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":248,"column":34,"nodeType":"1544","messageId":"1545","endLine":248,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":249,"column":34,"nodeType":"1544","messageId":"1545","endLine":249,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":23,"column":39,"nodeType":"1544","messageId":"1545","endLine":23,"endColumn":41},{"ruleId":"1542","severity":1,"message":"1543","line":34,"column":46,"nodeType":"1544","messageId":"1545","endLine":34,"endColumn":48},{"ruleId":"1542","severity":1,"message":"1543","line":56,"column":46,"nodeType":"1544","messageId":"1545","endLine":56,"endColumn":48},{"ruleId":"1504","severity":1,"message":"1728","line":92,"column":6,"nodeType":"1506","endLine":92,"endColumn":35,"suggestions":"1729"},{"ruleId":"1542","severity":1,"message":"1543","line":167,"column":40,"nodeType":"1544","messageId":"1545","endLine":167,"endColumn":42},{"ruleId":"1542","severity":1,"message":"1543","line":198,"column":33,"nodeType":"1544","messageId":"1545","endLine":198,"endColumn":35},{"ruleId":"1542","severity":1,"message":"1543","line":271,"column":33,"nodeType":"1544","messageId":"1545","endLine":271,"endColumn":35},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1730","line":7,"column":10,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":15},{"ruleId":"1498","severity":1,"message":"1611","line":12,"column":21,"nodeType":"1500","messageId":"1501","endLine":12,"endColumn":33},{"ruleId":"1542","severity":1,"message":"1543","line":106,"column":32,"nodeType":"1544","messageId":"1545","endLine":106,"endColumn":34},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1691","line":11,"column":10,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1515","line":11,"column":16,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1611","line":14,"column":21,"nodeType":"1500","messageId":"1501","endLine":14,"endColumn":33},{"ruleId":"1542","severity":1,"message":"1543","line":256,"column":66,"nodeType":"1544","messageId":"1545","endLine":256,"endColumn":68},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1508","line":1,"column":25,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":28},{"ruleId":"1498","severity":1,"message":"1509","line":1,"column":30,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":33},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1731","line":3,"column":8,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":12},{"ruleId":"1498","severity":1,"message":"1572","line":7,"column":10,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1721","line":8,"column":8,"nodeType":"1500","messageId":"1501","endLine":8,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1732","line":14,"column":10,"nodeType":"1500","messageId":"1501","endLine":14,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1733","line":14,"column":19,"nodeType":"1500","messageId":"1501","endLine":14,"endColumn":29},{"ruleId":"1566","severity":1,"message":"1567","line":102,"column":17,"nodeType":"1568","endLine":106,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1734","line":1,"column":10,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1735","line":4,"column":8,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1736","line":20,"column":21,"nodeType":"1500","messageId":"1501","endLine":20,"endColumn":33},{"ruleId":"1542","severity":1,"message":"1543","line":121,"column":38,"nodeType":"1544","messageId":"1545","endLine":121,"endColumn":40},{"ruleId":"1542","severity":1,"message":"1543","line":122,"column":35,"nodeType":"1544","messageId":"1545","endLine":122,"endColumn":37},{"ruleId":"1498","severity":1,"message":"1737","line":2,"column":8,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":15},{"ruleId":"1504","severity":1,"message":"1738","line":21,"column":16,"nodeType":"1500","endLine":21,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1739","line":8,"column":41,"nodeType":"1500","messageId":"1501","endLine":8,"endColumn":50},{"ruleId":"1498","severity":1,"message":"1675","line":9,"column":8,"nodeType":"1500","messageId":"1501","endLine":9,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1673","line":11,"column":8,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1674","line":12,"column":8,"nodeType":"1500","messageId":"1501","endLine":12,"endColumn":11},{"ruleId":"1498","severity":1,"message":"1652","line":13,"column":8,"nodeType":"1500","messageId":"1501","endLine":13,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1676","line":14,"column":8,"nodeType":"1500","messageId":"1501","endLine":14,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1740","line":15,"column":8,"nodeType":"1500","messageId":"1501","endLine":15,"endColumn":15},{"ruleId":"1498","severity":1,"message":"1702","line":37,"column":10,"nodeType":"1500","messageId":"1501","endLine":37,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1741","line":40,"column":10,"nodeType":"1500","messageId":"1501","endLine":40,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1742","line":40,"column":19,"nodeType":"1500","messageId":"1501","endLine":40,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1704","line":41,"column":10,"nodeType":"1500","messageId":"1501","endLine":41,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1705","line":41,"column":21,"nodeType":"1500","messageId":"1501","endLine":41,"endColumn":33},{"ruleId":"1542","severity":1,"message":"1543","line":64,"column":21,"nodeType":"1544","messageId":"1545","endLine":64,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":70,"column":24,"nodeType":"1544","messageId":"1545","endLine":70,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":85,"column":34,"nodeType":"1544","messageId":"1545","endLine":85,"endColumn":36},{"ruleId":"1498","severity":1,"message":"1743","line":138,"column":9,"nodeType":"1500","messageId":"1501","endLine":138,"endColumn":13},{"ruleId":"1744","severity":1,"message":"1745","line":172,"column":9,"nodeType":"1746","messageId":"1545","endLine":172,"endColumn":16},{"ruleId":"1542","severity":1,"message":"1543","line":410,"column":43,"nodeType":"1544","messageId":"1545","endLine":410,"endColumn":45},{"ruleId":"1566","severity":1,"message":"1567","line":442,"column":19,"nodeType":"1568","endLine":442,"endColumn":81},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1747","line":4,"column":10,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":25},{"ruleId":"1498","severity":1,"message":"1748","line":10,"column":8,"nodeType":"1500","messageId":"1501","endLine":10,"endColumn":12},{"ruleId":"1542","severity":1,"message":"1543","line":84,"column":21,"nodeType":"1544","messageId":"1545","endLine":84,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":90,"column":24,"nodeType":"1544","messageId":"1545","endLine":90,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":91,"column":25,"nodeType":"1544","messageId":"1545","endLine":91,"endColumn":27},{"ruleId":"1542","severity":1,"message":"1543","line":92,"column":26,"nodeType":"1544","messageId":"1545","endLine":92,"endColumn":28},{"ruleId":"1542","severity":1,"message":"1543","line":111,"column":34,"nodeType":"1544","messageId":"1545","endLine":111,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":389,"column":43,"nodeType":"1544","messageId":"1545","endLine":389,"endColumn":45},{"ruleId":"1566","severity":1,"message":"1567","line":421,"column":19,"nodeType":"1568","endLine":421,"endColumn":81},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1703","line":50,"column":10,"nodeType":"1500","messageId":"1501","endLine":50,"endColumn":20},{"ruleId":"1504","severity":1,"message":"1749","line":76,"column":6,"nodeType":"1506","endLine":76,"endColumn":17,"suggestions":"1750"},{"ruleId":"1542","severity":1,"message":"1543","line":83,"column":21,"nodeType":"1544","messageId":"1545","endLine":83,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":89,"column":24,"nodeType":"1544","messageId":"1545","endLine":89,"endColumn":26},{"ruleId":"1542","severity":1,"message":"1543","line":109,"column":36,"nodeType":"1544","messageId":"1545","endLine":109,"endColumn":38},{"ruleId":"1566","severity":1,"message":"1567","line":349,"column":19,"nodeType":"1568","endLine":349,"endColumn":81},{"ruleId":"1542","severity":1,"message":"1543","line":373,"column":43,"nodeType":"1544","messageId":"1545","endLine":373,"endColumn":45},{"ruleId":"1566","severity":1,"message":"1567","line":405,"column":19,"nodeType":"1568","endLine":405,"endColumn":81},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1504","severity":1,"message":"1749","line":50,"column":5,"nodeType":"1506","endLine":50,"endColumn":16,"suggestions":"1751"},{"ruleId":"1542","severity":1,"message":"1543","line":58,"column":20,"nodeType":"1544","messageId":"1545","endLine":58,"endColumn":22},{"ruleId":"1542","severity":1,"message":"1543","line":64,"column":20,"nodeType":"1544","messageId":"1545","endLine":64,"endColumn":22},{"ruleId":"1542","severity":1,"message":"1543","line":82,"column":35,"nodeType":"1544","messageId":"1545","endLine":82,"endColumn":37},{"ruleId":"1566","severity":1,"message":"1567","line":235,"column":19,"nodeType":"1568","endLine":235,"endColumn":81},{"ruleId":"1542","severity":1,"message":"1543","line":259,"column":45,"nodeType":"1544","messageId":"1545","endLine":259,"endColumn":47},{"ruleId":"1566","severity":1,"message":"1567","line":292,"column":17,"nodeType":"1568","endLine":292,"endColumn":79},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1542","severity":1,"message":"1543","line":37,"column":20,"nodeType":"1544","messageId":"1545","endLine":37,"endColumn":22},{"ruleId":"1542","severity":1,"message":"1543","line":43,"column":23,"nodeType":"1544","messageId":"1545","endLine":43,"endColumn":25},{"ruleId":"1542","severity":1,"message":"1543","line":54,"column":33,"nodeType":"1544","messageId":"1545","endLine":54,"endColumn":35},{"ruleId":"1566","severity":1,"message":"1567","line":153,"column":19,"nodeType":"1568","endLine":153,"endColumn":81},{"ruleId":"1542","severity":1,"message":"1543","line":178,"column":43,"nodeType":"1544","messageId":"1545","endLine":178,"endColumn":45},{"ruleId":"1566","severity":1,"message":"1567","line":212,"column":17,"nodeType":"1568","endLine":212,"endColumn":79},{"ruleId":"1498","severity":1,"message":"1752","line":2,"column":8,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1753","line":5,"column":8,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":21},{"ruleId":"1504","severity":1,"message":"1754","line":19,"column":6,"nodeType":"1506","endLine":19,"endColumn":8,"suggestions":"1755"},{"ruleId":"1498","severity":1,"message":"1508","line":2,"column":25,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":28},{"ruleId":"1498","severity":1,"message":"1509","line":2,"column":30,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":33},{"ruleId":"1498","severity":1,"message":"1689","line":2,"column":35,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1693","line":4,"column":8,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1572","line":5,"column":10,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":14},{"ruleId":"1504","severity":1,"message":"1756","line":19,"column":6,"nodeType":"1506","endLine":19,"endColumn":8,"suggestions":"1757"},{"ruleId":"1542","severity":1,"message":"1543","line":37,"column":25,"nodeType":"1544","messageId":"1545","endLine":37,"endColumn":27},{"ruleId":"1542","severity":1,"message":"1543","line":40,"column":47,"nodeType":"1544","messageId":"1545","endLine":40,"endColumn":49},{"ruleId":"1542","severity":1,"message":"1543","line":44,"column":25,"nodeType":"1544","messageId":"1545","endLine":44,"endColumn":27},{"ruleId":"1542","severity":1,"message":"1543","line":47,"column":47,"nodeType":"1544","messageId":"1545","endLine":47,"endColumn":49},{"ruleId":"1542","severity":1,"message":"1543","line":52,"column":27,"nodeType":"1544","messageId":"1545","endLine":52,"endColumn":29},{"ruleId":"1542","severity":1,"message":"1543","line":55,"column":51,"nodeType":"1544","messageId":"1545","endLine":55,"endColumn":53},{"ruleId":"1579","severity":1,"message":"1758","line":112,"column":82,"nodeType":"1581","messageId":"1582","endLine":112,"endColumn":107,"fix":"1759"},{"ruleId":"1579","severity":1,"message":"1760","line":125,"column":66,"nodeType":"1581","messageId":"1582","endLine":125,"endColumn":94,"fix":"1761"},{"ruleId":"1579","severity":1,"message":"1762","line":138,"column":66,"nodeType":"1581","messageId":"1582","endLine":138,"endColumn":98,"fix":"1763"},{"ruleId":"1542","severity":1,"message":"1543","line":40,"column":50,"nodeType":"1544","messageId":"1545","endLine":40,"endColumn":52},{"ruleId":"1498","severity":1,"message":"1672","line":1,"column":27,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":36},{"ruleId":"1498","severity":1,"message":"1642","line":2,"column":10,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":15},{"ruleId":"1498","severity":1,"message":"1711","line":9,"column":8,"nodeType":"1500","messageId":"1501","endLine":9,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1764","line":11,"column":8,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":26},{"ruleId":"1498","severity":1,"message":"1645","line":19,"column":3,"nodeType":"1500","messageId":"1501","endLine":19,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1691","line":15,"column":10,"nodeType":"1500","messageId":"1501","endLine":15,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1515","line":15,"column":16,"nodeType":"1500","messageId":"1501","endLine":15,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1765","line":16,"column":10,"nodeType":"1500","messageId":"1501","endLine":16,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1766","line":48,"column":9,"nodeType":"1500","messageId":"1501","endLine":48,"endColumn":30},{"ruleId":"1542","severity":1,"message":"1543","line":84,"column":65,"nodeType":"1544","messageId":"1545","endLine":84,"endColumn":67},{"ruleId":"1498","severity":1,"message":"1767","line":5,"column":3,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1509","line":8,"column":10,"nodeType":"1500","messageId":"1501","endLine":8,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1548","line":12,"column":8,"nodeType":"1500","messageId":"1501","endLine":12,"endColumn":14},{"ruleId":"1504","severity":1,"message":"1768","line":68,"column":6,"nodeType":"1506","endLine":68,"endColumn":18,"suggestions":"1769"},{"ruleId":"1504","severity":1,"message":"1770","line":244,"column":6,"nodeType":"1506","endLine":244,"endColumn":19,"suggestions":"1771"},{"ruleId":"1498","severity":1,"message":"1735","line":3,"column":8,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1772","line":4,"column":10,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1773","line":5,"column":8,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1774","line":6,"column":8,"nodeType":"1500","messageId":"1501","endLine":6,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1775","line":7,"column":10,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1653","line":11,"column":10,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":20},{"ruleId":"1542","severity":1,"message":"1543","line":21,"column":43,"nodeType":"1544","messageId":"1545","endLine":21,"endColumn":45},{"ruleId":"1542","severity":1,"message":"1543","line":33,"column":50,"nodeType":"1544","messageId":"1545","endLine":33,"endColumn":52},{"ruleId":"1542","severity":1,"message":"1543","line":56,"column":50,"nodeType":"1544","messageId":"1545","endLine":56,"endColumn":52},{"ruleId":"1504","severity":1,"message":"1776","line":93,"column":6,"nodeType":"1506","endLine":93,"endColumn":50,"suggestions":"1777"},{"ruleId":"1542","severity":1,"message":"1543","line":103,"column":42,"nodeType":"1544","messageId":"1545","endLine":103,"endColumn":44},{"ruleId":"1542","severity":1,"message":"1543","line":111,"column":33,"nodeType":"1544","messageId":"1545","endLine":111,"endColumn":35},{"ruleId":"1542","severity":1,"message":"1543","line":119,"column":33,"nodeType":"1544","messageId":"1545","endLine":119,"endColumn":35},{"ruleId":"1498","severity":1,"message":"1671","line":152,"column":11,"nodeType":"1500","messageId":"1501","endLine":152,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1671","line":166,"column":11,"nodeType":"1500","messageId":"1501","endLine":166,"endColumn":14},{"ruleId":"1542","severity":1,"message":"1543","line":203,"column":42,"nodeType":"1544","messageId":"1545","endLine":203,"endColumn":44},{"ruleId":"1498","severity":1,"message":"1672","line":1,"column":17,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":26},{"ruleId":"1498","severity":1,"message":"1671","line":88,"column":11,"nodeType":"1500","messageId":"1501","endLine":88,"endColumn":14},{"ruleId":"1542","severity":1,"message":"1543","line":115,"column":42,"nodeType":"1544","messageId":"1545","endLine":115,"endColumn":44},{"ruleId":"1498","severity":1,"message":"1671","line":204,"column":11,"nodeType":"1500","messageId":"1501","endLine":204,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1671","line":218,"column":11,"nodeType":"1500","messageId":"1501","endLine":218,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1671","line":233,"column":11,"nodeType":"1500","messageId":"1501","endLine":233,"endColumn":14},{"ruleId":"1542","severity":1,"message":"1543","line":278,"column":42,"nodeType":"1544","messageId":"1545","endLine":278,"endColumn":44},{"ruleId":"1498","severity":1,"message":"1778","line":4,"column":10,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1642","line":2,"column":10,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":15},{"ruleId":"1498","severity":1,"message":"1724","line":7,"column":8,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1508","line":8,"column":25,"nodeType":"1500","messageId":"1501","endLine":8,"endColumn":28},{"ruleId":"1498","severity":1,"message":"1509","line":8,"column":30,"nodeType":"1500","messageId":"1501","endLine":8,"endColumn":33},{"ruleId":"1498","severity":1,"message":"1689","line":8,"column":35,"nodeType":"1500","messageId":"1501","endLine":8,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1645","line":22,"column":3,"nodeType":"1500","messageId":"1501","endLine":22,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1779","line":87,"column":9,"nodeType":"1500","messageId":"1501","endLine":87,"endColumn":18},{"ruleId":"1542","severity":1,"message":"1543","line":90,"column":20,"nodeType":"1544","messageId":"1545","endLine":90,"endColumn":22},{"ruleId":"1542","severity":1,"message":"1543","line":90,"column":45,"nodeType":"1544","messageId":"1545","endLine":90,"endColumn":47},{"ruleId":"1498","severity":1,"message":"1780","line":93,"column":13,"nodeType":"1500","messageId":"1501","endLine":93,"endColumn":21},{"ruleId":"1542","severity":1,"message":"1543","line":153,"column":33,"nodeType":"1544","messageId":"1545","endLine":153,"endColumn":35},{"ruleId":"1542","severity":1,"message":"1543","line":154,"column":22,"nodeType":"1544","messageId":"1545","endLine":154,"endColumn":24},{"ruleId":"1566","severity":1,"message":"1567","line":401,"column":15,"nodeType":"1568","endLine":404,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1781","line":7,"column":2,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1513","line":13,"column":8,"nodeType":"1500","messageId":"1501","endLine":13,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1782","line":11,"column":10,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1783","line":19,"column":9,"nodeType":"1500","messageId":"1501","endLine":19,"endColumn":24},{"ruleId":"1498","severity":1,"message":"1703","line":44,"column":10,"nodeType":"1500","messageId":"1501","endLine":44,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1784","line":52,"column":10,"nodeType":"1500","messageId":"1501","endLine":52,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1704","line":54,"column":10,"nodeType":"1500","messageId":"1501","endLine":54,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1785","line":61,"column":9,"nodeType":"1500","messageId":"1501","endLine":61,"endColumn":21},{"ruleId":"1542","severity":1,"message":"1543","line":92,"column":21,"nodeType":"1544","messageId":"1545","endLine":92,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":98,"column":18,"nodeType":"1544","messageId":"1545","endLine":98,"endColumn":20},{"ruleId":"1542","severity":1,"message":"1543","line":119,"column":34,"nodeType":"1544","messageId":"1545","endLine":119,"endColumn":36},{"ruleId":"1542","severity":1,"message":"1543","line":218,"column":53,"nodeType":"1544","messageId":"1545","endLine":218,"endColumn":55},{"ruleId":"1542","severity":1,"message":"1543","line":435,"column":43,"nodeType":"1544","messageId":"1545","endLine":435,"endColumn":45},{"ruleId":"1566","severity":1,"message":"1567","line":467,"column":19,"nodeType":"1568","endLine":467,"endColumn":81},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1693","line":3,"column":8,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":20},{"ruleId":"1542","severity":1,"message":"1543","line":29,"column":27,"nodeType":"1544","messageId":"1545","endLine":29,"endColumn":29},{"ruleId":"1542","severity":1,"message":"1543","line":29,"column":51,"nodeType":"1544","messageId":"1545","endLine":29,"endColumn":53},{"ruleId":"1542","severity":1,"message":"1543","line":47,"column":31,"nodeType":"1544","messageId":"1545","endLine":47,"endColumn":33},{"ruleId":"1542","severity":1,"message":"1543","line":48,"column":18,"nodeType":"1544","messageId":"1545","endLine":48,"endColumn":20},{"ruleId":"1542","severity":1,"message":"1543","line":49,"column":18,"nodeType":"1544","messageId":"1545","endLine":49,"endColumn":20},{"ruleId":"1542","severity":1,"message":"1543","line":50,"column":18,"nodeType":"1544","messageId":"1545","endLine":50,"endColumn":20},{"ruleId":"1542","severity":1,"message":"1543","line":71,"column":16,"nodeType":"1544","messageId":"1545","endLine":71,"endColumn":18},{"ruleId":"1542","severity":1,"message":"1543","line":83,"column":17,"nodeType":"1544","messageId":"1545","endLine":83,"endColumn":19},{"ruleId":"1542","severity":1,"message":"1543","line":95,"column":17,"nodeType":"1544","messageId":"1545","endLine":95,"endColumn":19},{"ruleId":"1542","severity":1,"message":"1543","line":107,"column":17,"nodeType":"1544","messageId":"1545","endLine":107,"endColumn":19},{"ruleId":"1542","severity":1,"message":"1543","line":119,"column":17,"nodeType":"1544","messageId":"1545","endLine":119,"endColumn":19},{"ruleId":"1542","severity":1,"message":"1543","line":131,"column":17,"nodeType":"1544","messageId":"1545","endLine":131,"endColumn":19},{"ruleId":"1504","severity":1,"message":"1786","line":178,"column":6,"nodeType":"1506","endLine":178,"endColumn":35,"suggestions":"1787"},{"ruleId":"1504","severity":1,"message":"1788","line":184,"column":6,"nodeType":"1506","endLine":184,"endColumn":10,"suggestions":"1789"},{"ruleId":"1542","severity":1,"message":"1543","line":196,"column":17,"nodeType":"1544","messageId":"1545","endLine":196,"endColumn":19},{"ruleId":"1542","severity":1,"message":"1543","line":207,"column":25,"nodeType":"1544","messageId":"1545","endLine":207,"endColumn":27},{"ruleId":"1542","severity":1,"message":"1543","line":218,"column":30,"nodeType":"1544","messageId":"1545","endLine":218,"endColumn":32},{"ruleId":"1667","severity":1,"message":"1668","line":247,"column":11,"nodeType":"1669","messageId":"1670","endLine":260,"endColumn":12},{"ruleId":"1667","severity":1,"message":"1668","line":270,"column":11,"nodeType":"1669","messageId":"1670","endLine":284,"endColumn":12},{"ruleId":"1662","severity":1,"message":"1663","line":468,"column":15,"nodeType":"1568","endLine":474,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1508","line":1,"column":25,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":28},{"ruleId":"1498","severity":1,"message":"1509","line":1,"column":30,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":33},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1508","line":2,"column":25,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":28},{"ruleId":"1498","severity":1,"message":"1509","line":2,"column":30,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":33},{"ruleId":"1498","severity":1,"message":"1689","line":2,"column":35,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":40},{"ruleId":"1542","severity":1,"message":"1543","line":33,"column":14,"nodeType":"1544","messageId":"1545","endLine":33,"endColumn":16},{"ruleId":"1542","severity":1,"message":"1543","line":38,"column":17,"nodeType":"1544","messageId":"1545","endLine":38,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1790","line":16,"column":27,"nodeType":"1500","messageId":"1501","endLine":16,"endColumn":39},{"ruleId":"1498","severity":1,"message":"1732","line":23,"column":10,"nodeType":"1500","messageId":"1501","endLine":23,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1733","line":23,"column":19,"nodeType":"1500","messageId":"1501","endLine":23,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1704","line":24,"column":10,"nodeType":"1500","messageId":"1501","endLine":24,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1705","line":24,"column":21,"nodeType":"1500","messageId":"1501","endLine":24,"endColumn":33},{"ruleId":"1504","severity":1,"message":"1791","line":87,"column":6,"nodeType":"1506","endLine":87,"endColumn":36,"suggestions":"1792"},{"ruleId":"1542","severity":1,"message":"1543","line":94,"column":21,"nodeType":"1544","messageId":"1545","endLine":94,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":115,"column":36,"nodeType":"1544","messageId":"1545","endLine":115,"endColumn":38},{"ruleId":"1542","severity":1,"message":"1543","line":364,"column":43,"nodeType":"1544","messageId":"1545","endLine":364,"endColumn":45},{"ruleId":"1566","severity":1,"message":"1567","line":396,"column":19,"nodeType":"1568","endLine":396,"endColumn":81},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1704","line":38,"column":10,"nodeType":"1500","messageId":"1501","endLine":38,"endColumn":19},{"ruleId":"1504","severity":1,"message":"1749","line":54,"column":6,"nodeType":"1506","endLine":54,"endColumn":17,"suggestions":"1793"},{"ruleId":"1542","severity":1,"message":"1543","line":61,"column":21,"nodeType":"1544","messageId":"1545","endLine":61,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":75,"column":36,"nodeType":"1544","messageId":"1545","endLine":75,"endColumn":38},{"ruleId":"1498","severity":1,"message":"1671","line":101,"column":11,"nodeType":"1500","messageId":"1501","endLine":101,"endColumn":14},{"ruleId":"1542","severity":1,"message":"1543","line":324,"column":43,"nodeType":"1544","messageId":"1545","endLine":324,"endColumn":45},{"ruleId":"1566","severity":1,"message":"1567","line":356,"column":19,"nodeType":"1568","endLine":356,"endColumn":81},{"ruleId":"1498","severity":1,"message":"1689","line":1,"column":35,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1675","line":9,"column":8,"nodeType":"1500","messageId":"1501","endLine":9,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1703","line":43,"column":10,"nodeType":"1500","messageId":"1501","endLine":43,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1704","line":45,"column":10,"nodeType":"1500","messageId":"1501","endLine":45,"endColumn":19},{"ruleId":"1504","severity":1,"message":"1749","line":62,"column":6,"nodeType":"1506","endLine":62,"endColumn":17,"suggestions":"1794"},{"ruleId":"1542","severity":1,"message":"1543","line":69,"column":21,"nodeType":"1544","messageId":"1545","endLine":69,"endColumn":23},{"ruleId":"1542","severity":1,"message":"1543","line":85,"column":36,"nodeType":"1544","messageId":"1545","endLine":85,"endColumn":38},{"ruleId":"1498","severity":1,"message":"1671","line":112,"column":11,"nodeType":"1500","messageId":"1501","endLine":112,"endColumn":14},{"ruleId":"1542","severity":1,"message":"1543","line":340,"column":43,"nodeType":"1544","messageId":"1545","endLine":340,"endColumn":45},{"ruleId":"1566","severity":1,"message":"1567","line":372,"column":19,"nodeType":"1568","endLine":372,"endColumn":81},{"ruleId":"1498","severity":1,"message":"1508","line":2,"column":25,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":28},{"ruleId":"1498","severity":1,"message":"1509","line":2,"column":30,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":33},{"ruleId":"1498","severity":1,"message":"1689","line":2,"column":35,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1642","line":2,"column":42,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":47},{"ruleId":"1498","severity":1,"message":"1795","line":3,"column":8,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1556","line":14,"column":9,"nodeType":"1500","messageId":"1501","endLine":14,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1781","line":11,"column":3,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1641","line":14,"column":10,"nodeType":"1500","messageId":"1501","endLine":14,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1513","line":17,"column":8,"nodeType":"1500","messageId":"1501","endLine":17,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1796","line":18,"column":10,"nodeType":"1500","messageId":"1501","endLine":18,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1797","line":29,"column":10,"nodeType":"1500","messageId":"1501","endLine":29,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1798","line":30,"column":10,"nodeType":"1500","messageId":"1501","endLine":30,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1799","line":30,"column":23,"nodeType":"1500","messageId":"1501","endLine":30,"endColumn":37},{"ruleId":"1498","severity":1,"message":"1800","line":31,"column":18,"nodeType":"1500","messageId":"1501","endLine":31,"endColumn":27},{"ruleId":"1498","severity":1,"message":"1801","line":38,"column":12,"nodeType":"1500","messageId":"1501","endLine":38,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1802","line":85,"column":9,"nodeType":"1500","messageId":"1501","endLine":85,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1803","line":90,"column":9,"nodeType":"1500","messageId":"1501","endLine":90,"endColumn":25},{"ruleId":"1498","severity":1,"message":"1804","line":118,"column":9,"nodeType":"1500","messageId":"1501","endLine":118,"endColumn":16},{"ruleId":"1504","severity":1,"message":"1805","line":162,"column":6,"nodeType":"1506","endLine":162,"endColumn":8,"suggestions":"1806"},{"ruleId":"1566","severity":1,"message":"1567","line":187,"column":19,"nodeType":"1568","endLine":187,"endColumn":60},{"ruleId":"1498","severity":1,"message":"1572","line":3,"column":10,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1807","line":4,"column":10,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1808","line":8,"column":10,"nodeType":"1500","messageId":"1501","endLine":8,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1809","line":9,"column":8,"nodeType":"1500","messageId":"1501","endLine":9,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1509","line":2,"column":10,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1508","line":2,"column":15,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1810","line":3,"column":10,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1811","line":4,"column":8,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1527","line":5,"column":8,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1528","line":6,"column":8,"nodeType":"1500","messageId":"1501","endLine":6,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1572","line":7,"column":10,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1642","line":8,"column":18,"nodeType":"1500","messageId":"1501","endLine":8,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1812","line":10,"column":5,"nodeType":"1500","messageId":"1501","endLine":10,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1813","line":11,"column":5,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1814","line":12,"column":5,"nodeType":"1500","messageId":"1501","endLine":12,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1815","line":13,"column":5,"nodeType":"1500","messageId":"1501","endLine":13,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1816","line":14,"column":5,"nodeType":"1500","messageId":"1501","endLine":14,"endColumn":26},{"ruleId":"1498","severity":1,"message":"1817","line":15,"column":5,"nodeType":"1500","messageId":"1501","endLine":15,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1818","line":16,"column":5,"nodeType":"1500","messageId":"1501","endLine":16,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1819","line":17,"column":5,"nodeType":"1500","messageId":"1501","endLine":17,"endColumn":26},{"ruleId":"1498","severity":1,"message":"1772","line":18,"column":5,"nodeType":"1500","messageId":"1501","endLine":18,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1672","line":20,"column":12,"nodeType":"1500","messageId":"1501","endLine":20,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1820","line":29,"column":12,"nodeType":"1500","messageId":"1501","endLine":29,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1821","line":30,"column":10,"nodeType":"1500","messageId":"1501","endLine":30,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1822","line":31,"column":10,"nodeType":"1500","messageId":"1501","endLine":31,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1823","line":32,"column":10,"nodeType":"1500","messageId":"1501","endLine":32,"endColumn":27},{"ruleId":"1498","severity":1,"message":"1645","line":40,"column":5,"nodeType":"1500","messageId":"1501","endLine":40,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1638","line":310,"column":13,"nodeType":"1500","messageId":"1501","endLine":310,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1639","line":325,"column":13,"nodeType":"1500","messageId":"1501","endLine":325,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1640","line":331,"column":13,"nodeType":"1500","messageId":"1501","endLine":331,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1509","line":2,"column":10,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1508","line":2,"column":15,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1810","line":3,"column":10,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1811","line":4,"column":8,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1527","line":5,"column":8,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1528","line":6,"column":8,"nodeType":"1500","messageId":"1501","endLine":6,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1572","line":7,"column":10,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1641","line":8,"column":10,"nodeType":"1500","messageId":"1501","endLine":8,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1642","line":8,"column":18,"nodeType":"1500","messageId":"1501","endLine":8,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1812","line":10,"column":5,"nodeType":"1500","messageId":"1501","endLine":10,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1813","line":11,"column":5,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1814","line":12,"column":5,"nodeType":"1500","messageId":"1501","endLine":12,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1815","line":13,"column":5,"nodeType":"1500","messageId":"1501","endLine":13,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1816","line":14,"column":5,"nodeType":"1500","messageId":"1501","endLine":14,"endColumn":26},{"ruleId":"1498","severity":1,"message":"1817","line":15,"column":5,"nodeType":"1500","messageId":"1501","endLine":15,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1818","line":16,"column":5,"nodeType":"1500","messageId":"1501","endLine":16,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1819","line":17,"column":5,"nodeType":"1500","messageId":"1501","endLine":17,"endColumn":26},{"ruleId":"1498","severity":1,"message":"1772","line":18,"column":5,"nodeType":"1500","messageId":"1501","endLine":18,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1672","line":20,"column":12,"nodeType":"1500","messageId":"1501","endLine":20,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1530","line":25,"column":10,"nodeType":"1500","messageId":"1501","endLine":25,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1533","line":28,"column":10,"nodeType":"1500","messageId":"1501","endLine":28,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1820","line":29,"column":12,"nodeType":"1500","messageId":"1501","endLine":29,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1821","line":30,"column":10,"nodeType":"1500","messageId":"1501","endLine":30,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1822","line":31,"column":10,"nodeType":"1500","messageId":"1501","endLine":31,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1823","line":32,"column":10,"nodeType":"1500","messageId":"1501","endLine":32,"endColumn":27},{"ruleId":"1498","severity":1,"message":"1547","line":36,"column":12,"nodeType":"1500","messageId":"1501","endLine":36,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1645","line":40,"column":5,"nodeType":"1500","messageId":"1501","endLine":40,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1681","line":51,"column":10,"nodeType":"1500","messageId":"1501","endLine":51,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1824","line":77,"column":12,"nodeType":"1500","messageId":"1501","endLine":77,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1825","line":77,"column":24,"nodeType":"1500","messageId":"1501","endLine":77,"endColumn":37},{"ruleId":"1498","severity":1,"message":"1648","line":80,"column":12,"nodeType":"1500","messageId":"1501","endLine":80,"endColumn":27},{"ruleId":"1498","severity":1,"message":"1649","line":80,"column":29,"nodeType":"1500","messageId":"1501","endLine":80,"endColumn":43},{"ruleId":"1498","severity":1,"message":"1826","line":141,"column":11,"nodeType":"1500","messageId":"1501","endLine":141,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1509","line":2,"column":10,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1508","line":2,"column":15,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1810","line":3,"column":10,"nodeType":"1500","messageId":"1501","endLine":3,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1811","line":4,"column":8,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1527","line":5,"column":8,"nodeType":"1500","messageId":"1501","endLine":5,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1528","line":6,"column":8,"nodeType":"1500","messageId":"1501","endLine":6,"endColumn":29},{"ruleId":"1498","severity":1,"message":"1572","line":7,"column":10,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1641","line":8,"column":10,"nodeType":"1500","messageId":"1501","endLine":8,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1642","line":8,"column":18,"nodeType":"1500","messageId":"1501","endLine":8,"endColumn":23},{"ruleId":"1498","severity":1,"message":"1529","line":8,"column":25,"nodeType":"1500","messageId":"1501","endLine":8,"endColumn":33},{"ruleId":"1498","severity":1,"message":"1812","line":10,"column":5,"nodeType":"1500","messageId":"1501","endLine":10,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1813","line":11,"column":5,"nodeType":"1500","messageId":"1501","endLine":11,"endColumn":19},{"ruleId":"1498","severity":1,"message":"1814","line":12,"column":5,"nodeType":"1500","messageId":"1501","endLine":12,"endColumn":17},{"ruleId":"1498","severity":1,"message":"1815","line":13,"column":5,"nodeType":"1500","messageId":"1501","endLine":13,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1816","line":14,"column":5,"nodeType":"1500","messageId":"1501","endLine":14,"endColumn":26},{"ruleId":"1498","severity":1,"message":"1817","line":15,"column":5,"nodeType":"1500","messageId":"1501","endLine":15,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1818","line":16,"column":5,"nodeType":"1500","messageId":"1501","endLine":16,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1819","line":17,"column":5,"nodeType":"1500","messageId":"1501","endLine":17,"endColumn":26},{"ruleId":"1498","severity":1,"message":"1772","line":18,"column":5,"nodeType":"1500","messageId":"1501","endLine":18,"endColumn":13},{"ruleId":"1498","severity":1,"message":"1672","line":20,"column":12,"nodeType":"1500","messageId":"1501","endLine":20,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1531","line":26,"column":10,"nodeType":"1500","messageId":"1501","endLine":26,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1532","line":27,"column":10,"nodeType":"1500","messageId":"1501","endLine":27,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1533","line":28,"column":10,"nodeType":"1500","messageId":"1501","endLine":28,"endColumn":14},{"ruleId":"1498","severity":1,"message":"1820","line":29,"column":12,"nodeType":"1500","messageId":"1501","endLine":29,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1821","line":30,"column":10,"nodeType":"1500","messageId":"1501","endLine":30,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1822","line":31,"column":10,"nodeType":"1500","messageId":"1501","endLine":31,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1823","line":32,"column":10,"nodeType":"1500","messageId":"1501","endLine":32,"endColumn":27},{"ruleId":"1498","severity":1,"message":"1547","line":36,"column":12,"nodeType":"1500","messageId":"1501","endLine":36,"endColumn":20},{"ruleId":"1498","severity":1,"message":"1645","line":40,"column":5,"nodeType":"1500","messageId":"1501","endLine":40,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1681","line":51,"column":10,"nodeType":"1500","messageId":"1501","endLine":51,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1824","line":77,"column":12,"nodeType":"1500","messageId":"1501","endLine":77,"endColumn":22},{"ruleId":"1498","severity":1,"message":"1825","line":77,"column":24,"nodeType":"1500","messageId":"1501","endLine":77,"endColumn":37},{"ruleId":"1498","severity":1,"message":"1648","line":80,"column":12,"nodeType":"1500","messageId":"1501","endLine":80,"endColumn":27},{"ruleId":"1498","severity":1,"message":"1649","line":80,"column":29,"nodeType":"1500","messageId":"1501","endLine":80,"endColumn":43},{"ruleId":"1498","severity":1,"message":"1826","line":218,"column":11,"nodeType":"1500","messageId":"1501","endLine":218,"endColumn":21},{"ruleId":"1498","severity":1,"message":"1734","line":1,"column":27,"nodeType":"1500","messageId":"1501","endLine":1,"endColumn":38},{"ruleId":"1498","severity":1,"message":"1752","line":2,"column":8,"nodeType":"1500","messageId":"1501","endLine":2,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1508","line":4,"column":25,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":28},{"ruleId":"1498","severity":1,"message":"1509","line":4,"column":30,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":33},{"ruleId":"1498","severity":1,"message":"1689","line":4,"column":35,"nodeType":"1500","messageId":"1501","endLine":4,"endColumn":40},{"ruleId":"1498","severity":1,"message":"1772","line":7,"column":10,"nodeType":"1500","messageId":"1501","endLine":7,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1827","line":10,"column":5,"nodeType":"1500","messageId":"1501","endLine":10,"endColumn":18},{"ruleId":"1498","severity":1,"message":"1828","line":28,"column":12,"nodeType":"1500","messageId":"1501","endLine":28,"endColumn":16},{"ruleId":"1498","severity":1,"message":"1829","line":28,"column":18,"nodeType":"1500","messageId":"1501","endLine":28,"endColumn":30},"no-native-reassign",["1830"],"no-negated-in-lhs",["1831"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'io' is defined but never used.","'Error404' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.","ArrayExpression",["1832"],"'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'LoginSocialGoogle' is defined but never used.","'IResolveParams' is defined but never used.","'googleIcon' is defined but never used.","'REDIRECT_URI' is assigned a value but never used.","'setName' is assigned a value but never used.","'onSignup' is assigned a value but never used.","'provider' is assigned a value but never used.","'setProvider' is assigned a value but never used.","'profile' is assigned a value but never used.","'setProfile' is assigned a value but never used.","'onLoginStart' is assigned a value but never used.","'onSocialLogin' is assigned a value but never used.","'GET_PERMISSION_FAILED_ACTION' is defined but never used.","'testDaySchudele' is defined but never used.","'reportsList' is defined but never used.","'Verification' is defined but never used.","'quickPlayIcon' is defined but never used.","'defaultComparisonIcon' is defined but never used.","'Dropdown' is defined but never used.","'moment' is defined but never used.","'menuIcon' is defined but never used.","'deleteIcon' is defined but never used.","'edit' is defined but never used.","'selectedScreen' is assigned a value but never used.","'setSelectedScreen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSchedule'. Either include it or remove the dependency array.",["1833"],"'handleEditSchedule' is assigned a value but never used.","'handleDefaultScreen' is assigned a value but never used.","'convertTimestampTo12HourFormat' is defined but never used.","'findEndTime' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'searchIcon' is defined but never used.","'listIcon' is defined but never used.","'useSWR' is defined but never used.","React Hook useEffect has a missing dependency: 'callAllCompApi'. Either include it or remove the dependency array.",["1834"],"'formatError' is defined but never used.","'runLogoutTimer' is defined but never used.","'signUp' is defined but never used.","'verification2fa' is defined but never used.","'nameAvatar' is defined but never used.","'history' is assigned a value but never used.","'id' is assigned a value but never used.","'handlePublishcOpen' is assigned a value but never used.","'handleWeekCellChange' is assigned a value but never used.","'da' is defined but never used.","'activeCard' is assigned a value but never used.","'setActiveCard' is assigned a value but never used.","'selectedButtonIndex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callAllDaySequence'. Either include it or remove the dependency array.",["1835"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'getAllMedia' is defined but never used.","'getAllDaySequence' is defined but never used.","'Link' is defined but never used.","'MyCustomPlugin' is assigned a value but never used.","'sequence' is assigned a value but never used.","'setSequence' is assigned a value but never used.","'schedulename' is assigned a value but never used.","'mutate' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-useless-computed-key","Unnecessarily computed property [\"timing\"] found.","Property","unnecessarilyComputedProperty",{"range":"1836","text":"1837"},"Unnecessarily computed property ['startTime'] found.",{"range":"1838","text":"1839"},"Unnecessarily computed property ['endTime'] found.",{"range":"1840","text":"1841"},{"range":"1842","text":"1837"},{"range":"1843","text":"1837"},"Unnecessarily computed property [\"startTime\"] found.",{"range":"1844","text":"1845"},"Unnecessarily computed property [\"endTime\"] found.",{"range":"1846","text":"1847"},{"range":"1848","text":"1837"},{"range":"1849","text":"1845"},{"range":"1850","text":"1847"},{"range":"1851","text":"1837"},"React Hook useEffect has a missing dependency: 'callSingleDaySequence'. Either include it or remove the dependency array.",["1852"],{"range":"1853","text":"1837"},{"range":"1854","text":"1839"},{"range":"1855","text":"1841"},{"range":"1856","text":"1837"},{"range":"1857","text":"1837"},{"range":"1858","text":"1839"},{"range":"1859","text":"1841"},"'axios' is defined but never used.","'response' is assigned a value but never used.","'useParams' is defined but never used.","'published' is assigned a value but never used.","'setPublished' is assigned a value but never used.","'setState' is assigned a value but never used.","'newEvent' is assigned a value but never used.","'timeText' is assigned a value but never used.","'hasEvent' is assigned a value but never used.","'event' is assigned a value but never used.","'desiredFormat' is assigned a value but never used.","'eventToRemove' is assigned a value but never used.","'handleEventClick' is assigned a value but never used.","'setEvents' is assigned a value but never used.","'daySequence' is assigned a value but never used.","'seqArray' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs",["1860"],"'currentMonth' is assigned a value but never used.","'checkboxKey' is assigned a value but never used.","'disablePrp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callAllScreenApi'. Either include it or remove the dependency array.",["1861"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'selectedGroups'. Either include it or remove the dependency array. You can also do a functional update 'setSelectedGroups(s => ...)' if you only need 'selectedGroups' in the 'setSelectedGroups' call.",["1862"],"'formatedDt' is assigned a value but never used.","'maxTime' is assigned a value but never used.","'endTime' is assigned a value but never used.","'Button' is defined but never used.","'Table' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["1863"],"'GridToolbarExport' is defined but never used.","'renderSchedule' is assigned a value but never used.","'value' is assigned a value but never used.","'showFilterModal' is assigned a value but never used.","'setFilterModal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'callAllScreenApi' and 'filterData'. Either include them or remove the dependency array.",["1864"],"'Paper' is defined but never used.","'getWeather' is defined but never used.","'Parser' is defined but never used.","'weathericon' is defined but never used.","'yellow' is defined but never used.","'blue' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","'txt' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'prp' is assigned a value but never used.","'useEffect' is defined but never used.","'Carousel' is defined but never used.","'Box' is defined but never used.","'Switch' is defined but never used.","'Slide' is defined but never used.","'FormControlLabel' is defined but never used.","'list' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'FilterModal' is defined but never used.","'canvaIcon' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'callAllMedialApi'. Either include it or remove the dependency array.",["1865"],"React Hook useEffect has missing dependencies: 'permission' and 'reportSlug'. Either include them or remove the dependency array.",["1866"],"'Badge' is defined but never used.","'setQuickplay' is defined but never used.","'name' is assigned a value but never used.","'roles' is defined but never used.","'tagCloseIcon' is defined but never used.","'humanReadableFormattedDateString' is defined but never used.","Unnecessarily computed property [\"zone\"] found.",{"range":"1867","text":"1868"},"'dt' is assigned a value but never used.","'PerfectScrollbar' is defined but never used.","'avatar' is defined but never used.","'onFullScreen' is assigned a value but never used.","'logo' is defined but never used.","'err' is assigned a value but never used.","'errMessage' is assigned a value but never used.","'isRefresh' is assigned a value but never used.","'setIsRefresh' is assigned a value but never used.","'addDeviceProfile' is defined but never used.","'columns' is assigned a value but never used.","'AddNewTagModal' is defined but never used.","'downArrow' is defined but never used.","'veiwDetailIcon' is defined but never used.","'assignIcon' is defined but never used.","'updateGroups' is defined but never used.","Unnecessarily computed property [\"x\"] found.",{"range":"1869","text":"1870"},"Unnecessarily computed property [\"y\"] found.",{"range":"1871","text":"1872"},"'Modal' is defined but never used.","'Editor' is defined but never used.","React Hook useEffect has a missing dependency: 'roles'. Either include it or remove the dependency array.",["1873"],"'Select' is defined but never used.","'options' is assigned a value but never used.","'updateUsers' is defined but never used.","'emptyMediaImg' is defined but never used.","'layoutSelected' is defined but never used.","'activeClass' is assigned a value but never used.","'setActiveClass' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'contentnew.Zone1', 'contentnew.Zone2', 'contentnew.Zone3', 'current2Index', and 'layout'. Either include them or remove the dependency array.",["1874"],"'toast' is defined but never used.","'icon' is defined but never used.","'preview' is assigned a value but never used.","'setPreview' is assigned a value but never used.","'useCallback' is defined but never used.","'WebVideoPlayer' is defined but never used.","'setIsLoading' is assigned a value but never used.","'videojs' is defined but never used.","The ref value 'videoRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'videoRef.current' to a variable inside the effect, and use that variable in the cleanup function.","'rssParser' is defined but never used.","'newsimg' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'data' is assigned a value but never used.","no-dupe-keys","Duplicate key 'urlLink'.","ObjectExpression","'usePlacesWidget' is defined but never used.","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'actionType'. Either include it or remove the dependency array.",["1875"],["1876"],"'ReactDOM' is defined but never used.","'getCroppedImg' is defined but never used.","React Hook useCallback has a missing dependency: 'setCroppedAreaPixels'. Either include it or remove the dependency array. If 'setCroppedAreaPixels' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1877"],"React Hook useEffect has a missing dependency: 'callAllTagsApi'. Either include it or remove the dependency array.",["1878"],"Unnecessarily computed property ['live'] found.",{"range":"1879","text":"1880"},"Unnecessarily computed property ['offline'] found.",{"range":"1881","text":"1882"},"Unnecessarily computed property ['deactivated'] found.",{"range":"1883","text":"1884"},"'takeScreenshotIcon' is defined but never used.","'checkedItems' is assigned a value but never used.","'handleSelectAllChange' is assigned a value but never used.","'getCompositionById' is defined but never used.","React Hook useEffect has a missing dependency: 'getScreenCode'. Either include it or remove the dependency array.",["1885"],"React Hook useEffect has a missing dependency: 'handleAddClass'. Either include it or remove the dependency array. If 'handleAddClass' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1886"],"'BASE_URL' is defined but never used.","'ReactPlayer' is defined but never used.","'Iframe' is defined but never used.","'fontSize' is defined but never used.","React Hook useEffect has a missing dependency: 'contents'. Either include it or remove the dependency array.",["1887"],"'submitHandler' is assigned a value but never used.","'parseMeta' is assigned a value but never used.","'jsonData' is assigned a value but never used.","'clearErrors' is defined but never used.","'Preview' is defined but never used.","'languageOptions' is assigned a value but never used.","'language' is assigned a value but never used.","'handleChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1888"],"React Hook useEffect has a missing dependency: 'callMediaDetailApi'. Either include it or remove the dependency array.",["1889"],"'authResponse' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'actionType' and 'data'. Either include them or remove the dependency array.",["1890"],["1891"],["1892"],"'person' is defined but never used.","'authenticator' is defined but never used.","'validCode' is assigned a value but never used.","'isCodeValid' is assigned a value but never used.","'setIsCodeValid' is assigned a value but never used.","'setSecret' is assigned a value but never used.","'onLogin' is defined but never used.","'sendOtpAgain' is assigned a value but never used.","'handleLoginAgain' is assigned a value but never used.","'getCode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSecret'. Either include it or remove the dependency array.",["1893"],"'logout' is defined but never used.","'mfaEnablePost' is defined but never used.","'base32Decode' is defined but never used.","'connect' is defined but never used.","'scheduleIcon' is defined but never used.","'deleteSchedule' is defined but never used.","'getAllSchedule' is defined but never used.","'getQuickPlay' is defined but never used.","'deleteQuickPlay' is defined but never used.","'getDefaultComposition' is defined but never used.","'getAllScreens' is defined but never used.","'getAllComposition' is defined but never used.","'setDefaultComposition' is defined but never used.","'useHistory' is defined but never used.","'TableLoader' is defined but never used.","'LockScreen' is defined but never used.","'SelectScreenModal' is defined but never used.","'filterData' is assigned a value but never used.","'setFilterData' is assigned a value but never used.","'tagsRender' is assigned a value but never used.","'DialogActions' is defined but never used.","'zoom' is assigned a value but never used.","'onZoomChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1894","fix":"1895"},{"desc":"1896","fix":"1897"},{"desc":"1898","fix":"1899"},{"desc":"1900","fix":"1901"},[2942,2952],"\"timing\"",[3003,3016],"'startTime'",[3082,3093],"'endTime'",[3217,3227],[5069,5079],[5106,5119],"\"startTime\"",[5162,5173],"\"endTime\"",[6515,6525],[6576,6589],[6656,6667],[6782,6792],{"desc":"1902","fix":"1903"},[4466,4476],[4527,4540],[4606,4617],[4741,4751],[5744,5754],[5783,5796],[5840,5851],{"desc":"1900","fix":"1904"},{"desc":"1905","fix":"1906"},{"desc":"1907","fix":"1908"},{"desc":"1909","fix":"1910"},{"desc":"1911","fix":"1912"},{"desc":"1913","fix":"1914"},{"desc":"1915","fix":"1916"},[1458,1466],"\"zone\"",[10227,10232],"\"x\"",[11013,11018],"\"y\"",{"desc":"1917","fix":"1918"},{"desc":"1919","fix":"1920"},{"desc":"1921","fix":"1922"},{"desc":"1921","fix":"1923"},{"desc":"1924","fix":"1925"},{"desc":"1926","fix":"1927"},[3511,3519],"'live'",[4085,4096],"'offline'",[4680,4695],"'deactivated'",{"desc":"1928","fix":"1929"},{"desc":"1930","fix":"1931"},{"desc":"1932","fix":"1933"},{"desc":"1934","fix":"1935"},{"desc":"1936","fix":"1937"},{"desc":"1938","fix":"1939"},{"desc":"1921","fix":"1940"},{"desc":"1921","fix":"1941"},{"desc":"1942","fix":"1943"},"Update the dependencies array to be: [dispatch, path, props.history]",{"range":"1944","text":"1945"},"Update the dependencies array to be: [publishType, isRefresh, getSchedule]",{"range":"1946","text":"1947"},"Update the dependencies array to be: [callAllCompApi, isRefresh]",{"range":"1948","text":"1949"},"Update the dependencies array to be: [callAllDaySequence, id]",{"range":"1950","text":"1951"},"Update the dependencies array to be: [callSingleDaySequence, schId]",{"range":"1952","text":"1953"},{"range":"1954","text":"1951"},"Update the dependencies array to be: [callAllScreenApi, isRefresh]",{"range":"1955","text":"1956"},"Update the dependencies array to be: [screen, selectedGroups]",{"range":"1957","text":"1958"},"Update the dependencies array to be: [getData, id]",{"range":"1959","text":"1960"},"Update the dependencies array to be: [callAllScreenApi, filterData, isRefresh]",{"range":"1961","text":"1962"},"Update the dependencies array to be: [callAllMedialApi, isRefresh]",{"range":"1963","text":"1964"},"Update the dependencies array to be: [permission, reportData, reportSlug]",{"range":"1965","text":"1966"},"Update the dependencies array to be: [makeRefresh, roles, rolesData]",{"range":"1967","text":"1968"},"Update the dependencies array to be: [currentIndex, current1Index, layout, contentnew.Zone1, contentnew.Zone2, contentnew.Zone3, current2Index]",{"range":"1969","text":"1970"},"Update the dependencies array to be: [actionType, mediaData]",{"range":"1971","text":"1972"},{"range":"1973","text":"1972"},"Update the dependencies array to be: [setCroppedAreaPixels]",{"range":"1974","text":"1975"},"Update the dependencies array to be: [callAllTagsApi]",{"range":"1976","text":"1977"},"Update the dependencies array to be: [getScreenCode, isVerified]",{"range":"1978","text":"1979"},"Update the dependencies array to be: [composition, handleAddClass]",{"range":"1980","text":"1981"},"Update the dependencies array to be: [currentIndex, current1Index, current2Index, contents]",{"range":"1982","text":"1983"},"Update the dependencies array to be: [editItem, slides, isRefresh, id]",{"range":"1984","text":"1985"},"Update the dependencies array to be: [callMediaDetailApi, id]",{"range":"1986","text":"1987"},"Update the dependencies array to be: [actionType, data, mediaData, tokenDetailsString]",{"range":"1988","text":"1989"},{"range":"1990","text":"1972"},{"range":"1991","text":"1972"},"Update the dependencies array to be: [getSecret]",{"range":"1992","text":"1993"},[1616,1641],"[dispatch, path, props.history]",[4014,4038],"[publishType, isRefresh, getSchedule]",[1632,1643],"[callAllCompApi, isRefresh]",[2306,2310],"[callAllDaySequence, id]",[3942,3949],"[callSingleDaySequence, schId]",[1623,1627],[2077,2088],"[callAllScreenApi, isRefresh]",[2312,2320],"[screen, selectedGroups]",[936,940],"[getData, id]",[1107,1118],"[callAllScreenApi, filterData, isRefresh]",[1854,1865],"[callAllMedialApi, isRefresh]",[2269,2281],"[permission, reportData, reportSlug]",[639,663],"[makeRefresh, roles, rolesData]",[3591,3620],"[currentIndex, current1Index, layout, contentnew.Zone1, contentnew.Zone2, contentnew.Zone3, current2Index]",[3103,3114],"[actionType, mediaData]",[2118,2129],[517,519],"[setCroppedAreaPixels]",[750,752],"[callAllTagsApi]",[2343,2355],"[getScreenCode, isVerified]",[8252,8265],"[composition, handleAddClass]",[3872,3916],"[currentIndex, current1Index, current2Index, contents]",[6604,6633],"[editItem, slides, isRefresh, id]",[6718,6722],"[callMediaDetailApi, id]",[3408,3438],"[actionType, data, mediaData, tokenDetailsString]",[2137,2148],[2620,2631],[4884,4886],"[getSecret]"]