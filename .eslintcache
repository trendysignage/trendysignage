[{"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/index.js":"1","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/App.js":"2","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/reportWebVitals.js":"3","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/store/store.js":"4","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/context/ThemeContext.js":"5","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/store/selectors/AuthSelectors.js":"6","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/services/AuthService.js":"7","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/pages/Registration.js":"8","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/pages/Login.js":"9","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/pages/ForgotPassword.js":"10","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/store/reducers/PostsReducer.js":"11","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/store/reducers/Reducers.js":"12","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/store/reducers/AuthReducer.js":"13","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/index.jsx":"14","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/push/PushScreen.jsx":"15","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Layout.jsx":"16","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/store/actions/AuthActions.js":"17","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/store/actions/PostTypes.js":"18","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/web-player/index.jsx":"19","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/ScrollToTop.js":"20","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/Footer.js":"21","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/utils/api.js":"22","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/ChooseLayout.jsx":"23","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/push/SelectComparison.jsx":"24","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/screen/details.jsx":"25","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Composition/CreateComposition.jsx":"26","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Composition/EditComposition.jsx":"27","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Composition/listComposition.jsx":"28","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/nav/index.js":"29","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/screen/index.jsx":"30","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/media/index.jsx":"31","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/settings/index.jsx":"32","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/web-player/main.jsx":"33","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/utils/fetchClient.js":"34","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/utils/UtilsService.js":"35","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Composition/CompositionActions.jsx":"36","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Composition/Common.jsx":"37","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/UpdateModal.jsx":"38","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/WindowsModal.jsx":"39","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/QuickPlayModal.jsx":"40","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/DeleteConfirmation.jsx":"41","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/AddNewTagModal.jsx":"42","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/nav/Header.js":"43","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/nav/NavHader.js":"44","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/nav/SideBar.js":"45","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/ChatBox.js":"46","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/FilterModal.jsx":"47","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/AddScreenModal.jsx":"48","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/web-player/compositionPlayer.jsx":"49","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/web-player/WebVideoPlayer.jsx":"50","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/settings/defaultComposition.jsx":"51","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/UploadMediaFileModal.jsx":"52","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/media/listMedia.jsx":"53","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/screen/listScreens.jsx":"54","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/nav/Logout.js":"55","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/PublishMediaModal.jsx":"56","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/chatBox/Chat.js":"57","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/chatBox/Notes.js":"58","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/chatBox/Alerts.js":"59","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/screen/tagInputField.jsx":"60","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/previewComposition.jsx":"61","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/saveCompositionName.jsx":"62","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Composition/CompositionTable.jsx":"63","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Composition/ZoneInfoTable.jsx":"64","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/duplicateComposition.jsx":"65","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/media/fileUploadWithPreview.jsx":"66","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/layouts/viewDetails.jsx":"67","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/chatBox/MsgBox.js":"68","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/TableLoader.jsx":"69","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/editSelectedComposition.jsx":"70","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/cropImage/cropImage.jsx":"71","/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/cropImage/index.jsx":"72","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/index.js":"73","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/App.js":"74","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/reportWebVitals.js":"75","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/store.js":"76","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/context/ThemeContext.js":"77","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/services/AuthService.js":"78","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/selectors/AuthSelectors.js":"79","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/Registration.js":"80","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/ForgotPassword.js":"81","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/Login.js":"82","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/reducers/PostsReducer.js":"83","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/reducers/AuthReducer.js":"84","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/reducers/Reducers.js":"85","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/index.jsx":"86","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Layout.jsx":"87","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/PushScreen.jsx":"88","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/actions/AuthActions.js":"89","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/index.jsx":"90","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/actions/PostTypes.js":"91","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/Footer.js":"92","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/ScrollToTop.js":"93","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/utils/api.js":"94","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/ChooseLayout.jsx":"95","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/SelectComparison.jsx":"96","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/details.jsx":"97","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/CreateComposition.jsx":"98","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/EditComposition.jsx":"99","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/listComposition.jsx":"100","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/index.js":"101","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/index.jsx":"102","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/media/index.jsx":"103","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/index.jsx":"104","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/utils/fetchClient.js":"105","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/main.jsx":"106","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/utils/UtilsService.js":"107","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/CompositionActions.jsx":"108","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/UpdateModal.jsx":"109","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/WindowsModal.jsx":"110","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/QuickPlayModal.jsx":"111","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/DeleteConfirmation.jsx":"112","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddNewTagModal.jsx":"113","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/Common.jsx":"114","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/ChatBox.js":"115","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/FilterModal.jsx":"116","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/defaultComposition.jsx":"117","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/UploadMediaFileModal.jsx":"118","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/Header.js":"119","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/SideBar.js":"120","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/NavHader.js":"121","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/compositionPlayer.jsx":"122","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/WebVideoPlayer.jsx":"123","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/media/listMedia.jsx":"124","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddScreenModal.jsx":"125","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/listScreens.jsx":"126","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/PublishMediaModal.jsx":"127","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/Chat.js":"128","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/Alerts.js":"129","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/Notes.js":"130","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/layouts/viewDetails.jsx":"131","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/saveCompositionName.jsx":"132","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/Logout.js":"133","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/previewComposition.jsx":"134","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/ZoneInfoTable.jsx":"135","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/CompositionTable.jsx":"136","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/media/fileUploadWithPreview.jsx":"137","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/tagInputField.jsx":"138","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/MsgBox.js":"139","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/duplicateComposition.jsx":"140","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/TableLoader.jsx":"141","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/editSelectedComposition.jsx":"142","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/cropImage/cropImage.jsx":"143","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/cropImage/index.jsx":"144","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/DaySchedule.js":"145","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/testDaySchudele.js":"146","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/TestDaySchudele.js":"147","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/TestDay.js":"148","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/Error404.js":"149","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/CopyTestDay.jsx":"150","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/MonthSchedule.jsx":"151","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/CopyMonthSchedule.jsx":"152","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/SecondMonth.js":"153","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/DesignMonthSchedule.js":"154"},{"size":847,"mtime":1684922153225,"results":"155","hashOfConfig":"156"},{"size":3231,"mtime":1684922152395,"results":"157","hashOfConfig":"156"},{"size":362,"mtime":1684922153245,"results":"158","hashOfConfig":"156"},{"size":753,"mtime":1684922153295,"results":"159","hashOfConfig":"156"},{"size":1856,"mtime":1684922152395,"results":"160","hashOfConfig":"156"},{"size":118,"mtime":1684922153295,"results":"161","hashOfConfig":"156"},{"size":2418,"mtime":1684922153292,"results":"162","hashOfConfig":"156"},{"size":5716,"mtime":1684922153241,"results":"163","hashOfConfig":"156"},{"size":7249,"mtime":1684922153241,"results":"164","hashOfConfig":"156"},{"size":2040,"mtime":1684922153240,"results":"165","hashOfConfig":"156"},{"size":1666,"mtime":1684922153294,"results":"166","hashOfConfig":"156"},{"size":1006,"mtime":1684922153294,"results":"167","hashOfConfig":"156"},{"size":1799,"mtime":1684922153294,"results":"168","hashOfConfig":"156"},{"size":3216,"mtime":1684922153233,"results":"169","hashOfConfig":"156"},{"size":2468,"mtime":1684922153230,"results":"170","hashOfConfig":"156"},{"size":2188,"mtime":1684922153229,"results":"171","hashOfConfig":"156"},{"size":2565,"mtime":1684922153293,"results":"172","hashOfConfig":"156"},{"size":503,"mtime":1684922153293,"results":"173","hashOfConfig":"156"},{"size":1905,"mtime":1684925686121,"results":"174","hashOfConfig":"156"},{"size":245,"mtime":1684922153234,"results":"175","hashOfConfig":"156"},{"size":412,"mtime":1684922153234,"results":"176","hashOfConfig":"156"},{"size":3995,"mtime":1684922153296,"results":"177","hashOfConfig":"156"},{"size":4466,"mtime":1684922153228,"results":"178","hashOfConfig":"156"},{"size":4553,"mtime":1684922153231,"results":"179","hashOfConfig":"156"},{"size":15193,"mtime":1684922153231,"results":"180","hashOfConfig":"156"},{"size":592,"mtime":1684922153229,"results":"181","hashOfConfig":"156"},{"size":1062,"mtime":1684922153229,"results":"182","hashOfConfig":"156"},{"size":4398,"mtime":1684922153229,"results":"183","hashOfConfig":"156"},{"size":955,"mtime":1684922153235,"results":"184","hashOfConfig":"156"},{"size":2324,"mtime":1684922153231,"results":"185","hashOfConfig":"156"},{"size":4022,"mtime":1684922153230,"results":"186","hashOfConfig":"156"},{"size":901,"mtime":1684922153232,"results":"187","hashOfConfig":"156"},{"size":6657,"mtime":1684922153233,"results":"188","hashOfConfig":"156"},{"size":779,"mtime":1684922153296,"results":"189","hashOfConfig":"156"},{"size":3706,"mtime":1684922153295,"results":"190","hashOfConfig":"156"},{"size":6911,"mtime":1684922153228,"results":"191","hashOfConfig":"156"},{"size":6157,"mtime":1684922153228,"results":"192","hashOfConfig":"156"},{"size":2670,"mtime":1684922153237,"results":"193","hashOfConfig":"156"},{"size":973,"mtime":1684922153237,"results":"194","hashOfConfig":"156"},{"size":6287,"mtime":1684922153236,"results":"195","hashOfConfig":"156"},{"size":773,"mtime":1684922153236,"results":"196","hashOfConfig":"156"},{"size":2382,"mtime":1684922153236,"results":"197","hashOfConfig":"156"},{"size":3673,"mtime":1684922153235,"results":"198","hashOfConfig":"156"},{"size":835,"mtime":1684922153235,"results":"199","hashOfConfig":"156"},{"size":5068,"mtime":1684922153235,"results":"200","hashOfConfig":"156"},{"size":2258,"mtime":1684922153234,"results":"201","hashOfConfig":"156"},{"size":3313,"mtime":1684922153236,"results":"202","hashOfConfig":"156"},{"size":10020,"mtime":1684922153236,"results":"203","hashOfConfig":"156"},{"size":1810,"mtime":1684922153232,"results":"204","hashOfConfig":"156"},{"size":798,"mtime":1684922153232,"results":"205","hashOfConfig":"156"},{"size":1392,"mtime":1684922153232,"results":"206","hashOfConfig":"156"},{"size":2891,"mtime":1684922153237,"results":"207","hashOfConfig":"156"},{"size":8183,"mtime":1684922153230,"results":"208","hashOfConfig":"156"},{"size":8360,"mtime":1684922153231,"results":"209","hashOfConfig":"156"},{"size":1215,"mtime":1684922153235,"results":"210","hashOfConfig":"156"},{"size":6387,"mtime":1684922153236,"results":"211","hashOfConfig":"156"},{"size":12605,"mtime":1684922153227,"results":"212","hashOfConfig":"156"},{"size":5797,"mtime":1684922153227,"results":"213","hashOfConfig":"156"},{"size":5763,"mtime":1684922153226,"results":"214","hashOfConfig":"156"},{"size":1695,"mtime":1684922153231,"results":"215","hashOfConfig":"156"},{"size":3366,"mtime":1684922153238,"results":"216","hashOfConfig":"156"},{"size":2188,"mtime":1684922153238,"results":"217","hashOfConfig":"156"},{"size":2063,"mtime":1684922153228,"results":"218","hashOfConfig":"156"},{"size":5160,"mtime":1684922153229,"results":"219","hashOfConfig":"156"},{"size":2542,"mtime":1684922153237,"results":"220","hashOfConfig":"156"},{"size":2076,"mtime":1684922153230,"results":"221","hashOfConfig":"156"},{"size":4139,"mtime":1684922153238,"results":"222","hashOfConfig":"156"},{"size":12668,"mtime":1684922153227,"results":"223","hashOfConfig":"156"},{"size":312,"mtime":1684922153225,"results":"224","hashOfConfig":"156"},{"size":6196,"mtime":1684922153237,"results":"225","hashOfConfig":"156"},{"size":2567,"mtime":1684922153227,"results":"226","hashOfConfig":"156"},{"size":765,"mtime":1684922153227,"results":"227","hashOfConfig":"156"},{"size":847,"mtime":1685081946315,"results":"228","hashOfConfig":"229"},{"size":3356,"mtime":1685697488398,"results":"230","hashOfConfig":"229"},{"size":362,"mtime":1685081946358,"results":"231","hashOfConfig":"229"},{"size":753,"mtime":1685081946523,"results":"232","hashOfConfig":"229"},{"size":1856,"mtime":1685081944679,"results":"233","hashOfConfig":"229"},{"size":2418,"mtime":1685081946510,"results":"234","hashOfConfig":"229"},{"size":118,"mtime":1685081946522,"results":"235","hashOfConfig":"229"},{"size":5716,"mtime":1685081946342,"results":"236","hashOfConfig":"229"},{"size":2040,"mtime":1685081946342,"results":"237","hashOfConfig":"229"},{"size":7249,"mtime":1685081946342,"results":"238","hashOfConfig":"229"},{"size":1666,"mtime":1685081946513,"results":"239","hashOfConfig":"229"},{"size":1799,"mtime":1685081946513,"results":"240","hashOfConfig":"229"},{"size":1006,"mtime":1685081946519,"results":"241","hashOfConfig":"229"},{"size":4102,"mtime":1687159097399,"results":"242","hashOfConfig":"229"},{"size":2214,"mtime":1686057744301,"results":"243","hashOfConfig":"229"},{"size":2468,"mtime":1685081946326,"results":"244","hashOfConfig":"229"},{"size":2565,"mtime":1685081946511,"results":"245","hashOfConfig":"229"},{"size":1920,"mtime":1687156894757,"results":"246","hashOfConfig":"229"},{"size":503,"mtime":1685081946512,"results":"247","hashOfConfig":"229"},{"size":412,"mtime":1685081946332,"results":"248","hashOfConfig":"229"},{"size":245,"mtime":1685081946332,"results":"249","hashOfConfig":"229"},{"size":4273,"mtime":1685452502880,"results":"250","hashOfConfig":"229"},{"size":4466,"mtime":1687156894743,"results":"251","hashOfConfig":"229"},{"size":11915,"mtime":1685453684729,"results":"252","hashOfConfig":"229"},{"size":15193,"mtime":1685081946327,"results":"253","hashOfConfig":"229"},{"size":643,"mtime":1686052095509,"results":"254","hashOfConfig":"229"},{"size":1062,"mtime":1685081946323,"results":"255","hashOfConfig":"229"},{"size":4919,"mtime":1686133603630,"results":"256","hashOfConfig":"229"},{"size":955,"mtime":1685081946335,"results":"257","hashOfConfig":"229"},{"size":2324,"mtime":1685289722065,"results":"258","hashOfConfig":"229"},{"size":4068,"mtime":1685952002230,"results":"259","hashOfConfig":"229"},{"size":901,"mtime":1685081946328,"results":"260","hashOfConfig":"229"},{"size":779,"mtime":1685081946525,"results":"261","hashOfConfig":"229"},{"size":7242,"mtime":1687156894758,"results":"262","hashOfConfig":"229"},{"size":3706,"mtime":1685081946525,"results":"263","hashOfConfig":"229"},{"size":6911,"mtime":1685081946322,"results":"264","hashOfConfig":"229"},{"size":2670,"mtime":1685081946338,"results":"265","hashOfConfig":"229"},{"size":973,"mtime":1685081946339,"results":"266","hashOfConfig":"229"},{"size":6287,"mtime":1685081946337,"results":"267","hashOfConfig":"229"},{"size":773,"mtime":1685081946336,"results":"268","hashOfConfig":"229"},{"size":2382,"mtime":1685081946335,"results":"269","hashOfConfig":"229"},{"size":6253,"mtime":1687156894744,"results":"270","hashOfConfig":"229"},{"size":2258,"mtime":1685081946330,"results":"271","hashOfConfig":"229"},{"size":3313,"mtime":1685081946336,"results":"272","hashOfConfig":"229"},{"size":1392,"mtime":1685081946328,"results":"273","hashOfConfig":"229"},{"size":2891,"mtime":1685962653676,"results":"274","hashOfConfig":"229"},{"size":3673,"mtime":1685081946333,"results":"275","hashOfConfig":"229"},{"size":5068,"mtime":1685081946334,"results":"276","hashOfConfig":"229"},{"size":835,"mtime":1685081946334,"results":"277","hashOfConfig":"229"},{"size":1966,"mtime":1687156894755,"results":"278","hashOfConfig":"229"},{"size":2335,"mtime":1687156894752,"results":"279","hashOfConfig":"229"},{"size":8387,"mtime":1685962642585,"results":"280","hashOfConfig":"229"},{"size":10001,"mtime":1685340392713,"results":"281","hashOfConfig":"229"},{"size":8360,"mtime":1685081946327,"results":"282","hashOfConfig":"229"},{"size":6389,"mtime":1685945830478,"results":"283","hashOfConfig":"229"},{"size":12605,"mtime":1685081946319,"results":"284","hashOfConfig":"229"},{"size":5763,"mtime":1685081946318,"results":"285","hashOfConfig":"229"},{"size":5797,"mtime":1685081946320,"results":"286","hashOfConfig":"229"},{"size":4141,"mtime":1685711729446,"results":"287","hashOfConfig":"229"},{"size":2188,"mtime":1685081946340,"results":"288","hashOfConfig":"229"},{"size":1215,"mtime":1685081946333,"results":"289","hashOfConfig":"229"},{"size":3366,"mtime":1687156894763,"results":"290","hashOfConfig":"229"},{"size":5160,"mtime":1687156894745,"results":"291","hashOfConfig":"229"},{"size":2188,"mtime":1685714365632,"results":"292","hashOfConfig":"229"},{"size":2076,"mtime":1685081946325,"results":"293","hashOfConfig":"229"},{"size":1695,"mtime":1685081946328,"results":"294","hashOfConfig":"229"},{"size":12668,"mtime":1685081946319,"results":"295","hashOfConfig":"229"},{"size":2542,"mtime":1685081946339,"results":"296","hashOfConfig":"229"},{"size":312,"mtime":1685081946317,"results":"297","hashOfConfig":"229"},{"size":6196,"mtime":1685081946339,"results":"298","hashOfConfig":"229"},{"size":2567,"mtime":1685081946321,"results":"299","hashOfConfig":"229"},{"size":765,"mtime":1685081946321,"results":"300","hashOfConfig":"229"},{"size":9328,"mtime":1685703832969,"results":"301","hashOfConfig":"229"},{"size":5400,"mtime":1685519991715,"results":"302","hashOfConfig":"229"},{"size":5400,"mtime":1685519991715,"results":"303","hashOfConfig":"229"},{"size":17755,"mtime":1687156894751,"results":"304","hashOfConfig":"229"},{"size":1004,"mtime":1685081946341,"results":"305","hashOfConfig":"229"},{"size":6538,"mtime":1686035244405,"results":"306","hashOfConfig":"229"},{"size":5817,"mtime":1687156894749,"results":"307","hashOfConfig":"229"},{"size":44423,"mtime":1687156894748,"results":"308","hashOfConfig":"229"},{"size":26197,"mtime":1687156894749,"results":"309","hashOfConfig":"229"},{"size":7723,"mtime":1687182075310,"results":"310","hashOfConfig":"229"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p3alf3",{"filePath":"313","messages":"314","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"387","messages":"388","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"433","messages":"434","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"443","messages":"444","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},"mjyqd6",{"filePath":"458","messages":"459","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"457"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"457"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"457"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"457"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"457"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"457"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"457"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"457"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"457"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"457"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"457"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"457"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"457"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"457"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"457"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"457"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"457"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"457"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"457"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"457"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"457"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"457"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"457"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"457"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"457"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"457"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"457"},{"filePath":"629","messages":"630","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631","usedDeprecatedRules":"632"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"637","usedDeprecatedRules":"457"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"457"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"457"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"457"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"457"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/index.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/App.js",["654","655","656"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/reportWebVitals.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/store/store.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/context/ThemeContext.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/store/selectors/AuthSelectors.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/services/AuthService.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/pages/Registration.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/pages/Login.js",["657","658","659"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/pages/ForgotPassword.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/store/reducers/PostsReducer.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/store/reducers/Reducers.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/store/reducers/AuthReducer.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/index.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/push/PushScreen.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Layout.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/store/actions/AuthActions.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/store/actions/PostTypes.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/web-player/index.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/ScrollToTop.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/Footer.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/utils/api.js",["660"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/ChooseLayout.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/push/SelectComparison.jsx",["661","662","663","664","665"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/screen/details.jsx",["666"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Composition/CreateComposition.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Composition/EditComposition.jsx",["667","668"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Composition/listComposition.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/nav/index.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/screen/index.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/media/index.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/settings/index.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/web-player/main.jsx",["669","670","671","672"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/utils/fetchClient.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/utils/UtilsService.js",["673","674","675","676"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Composition/CompositionActions.jsx",["677"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Composition/Common.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/UpdateModal.jsx",["678","679"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/WindowsModal.jsx",["680","681","682","683"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/QuickPlayModal.jsx",["684","685","686","687"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/DeleteConfirmation.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/AddNewTagModal.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/nav/Header.js",["688","689","690"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/nav/NavHader.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/nav/SideBar.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/ChatBox.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/FilterModal.jsx",["691","692","693","694"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/AddScreenModal.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/web-player/compositionPlayer.jsx",["695"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/web-player/WebVideoPlayer.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/settings/defaultComposition.jsx",["696"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/UploadMediaFileModal.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/media/listMedia.jsx",["697"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/screen/listScreens.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/layouts/nav/Logout.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/PublishMediaModal.jsx",["698"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/chatBox/Chat.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/chatBox/Notes.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/chatBox/Alerts.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/screen/tagInputField.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/previewComposition.jsx",["699"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/saveCompositionName.jsx",["700","701"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Composition/CompositionTable.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/layout/Composition/ZoneInfoTable.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/duplicateComposition.jsx",["702","703"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/media/fileUploadWithPreview.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/layouts/viewDetails.jsx",["704"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/chatBox/MsgBox.js",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/TableLoader.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/modals/editSelectedComposition.jsx",["705","706","707"],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/cropImage/cropImage.jsx",[],"/Users/mac/Desktop/trendy/web/trendy-content-display-frontend/src/jsx/components/cropImage/index.jsx",["708","709","710"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/index.js",[],["711","712"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/App.js",["713","714","715","716"],"import { lazy, Suspense, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\n/// Components\nimport Index from './jsx/index';\nimport { connect, useDispatch } from 'react-redux';\nimport { Route, Switch, withRouter } from 'react-router-dom';\n// action\nimport { checkAutoLogin } from './services/AuthService';\nimport { isAuthenticated } from './store/selectors/AuthSelectors';\n/// Style\nimport \"./vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\nimport \"./css/style.css\";\nimport Webplayer from './jsx/components/web-player';\nimport Layout from './jsx/components/layout/Layout';\nimport PushScreen from './jsx/components/push/PushScreen';\nimport Error404 from './jsx/pages/Error404';\n// import { socket } from './utils/socket';\n\n\nconst SignUp = lazy(() => import('./jsx/pages/Registration'));\nconst ForgotPassword = lazy(() => import('./jsx/pages/ForgotPassword'));\nconst Login = lazy(() => {\n    return new Promise(resolve => {\n        setTimeout(() => resolve(import('./jsx/pages/Login')), 500);\n    });\n});\nfunction App(props) {\n    let path = window.location.pathname\n    path = path.split('/')\n    path = path[path.length - 1]\n    // const [isConnected, setIsConnected] = useState(socket.connected);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (path !== 'web-player') {\n            checkAutoLogin(dispatch, props.history);\n        }\n\n    }, [dispatch, props.history]);\n    let routes = (\n        <Switch>\n            <Route path='/login' component={Login} />\n            <Route path='/page-register' component={SignUp} />\n            <Route path='/page-forgot-password' component={ForgotPassword} />\n            <Route path='/layout' component={Layout} />\n            <Route path='/push' component={PushScreen} />\n\n\n        </Switch>\n    );\n    if (path === 'web-player') {\n        return (\n            <Switch>\n                <Route path='/web-player' component={Webplayer} />\n            </Switch>\n        )\n    }\n    else if (props.isAuthenticated) {\n        return (\n            <>\n                <Suspense fallback={\n                    <div id=\"preloader\">\n                        <div className=\"sk-three-bounce\">\n                            <div className=\"sk-child sk-bounce1\"></div>\n                            <div className=\"sk-child sk-bounce2\"></div>\n                            <div className=\"sk-child sk-bounce3\"></div>\n                        </div>\n                    </div>\n                }\n                >\n                    <Index />\n                </Suspense>\n            </>\n        );\n\n    } else {\n        return (\n            <div className=\"vh-100\">\n                <Suspense fallback={\n                    <div id=\"preloader\">\n                        <div className=\"sk-three-bounce\">\n                            <div className=\"sk-child sk-bounce1\"></div>\n                            <div className=\"sk-child sk-bounce2\"></div>\n                            <div className=\"sk-child sk-bounce3\"></div>\n                        </div>\n                    </div>\n                }\n                >\n                    {routes}\n                </Suspense>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: isAuthenticated(state),\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(App)); \n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/reportWebVitals.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/store.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/context/ThemeContext.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/services/AuthService.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/selectors/AuthSelectors.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/Registration.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/ForgotPassword.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/Login.js",["717","718","719"],"import React, { useState } from 'react'\nimport { connect, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { loadingToggleAction,loginAction,\n} from '../../store/actions/AuthActions';\nimport { Row, Col, Card,  Tab, Nav, Button } from 'react-bootstrap'\n//\nimport logo from '../../img/logo.png'\nimport eyeOff from '../../img/eye-off.svg'\nimport googleIcon from '../../img/google-icon.png'\n\nfunction Login (props) {\n    const [email, setEmail] = useState('demo@example.com');\n    let errorsObj = { email: '', password: '' };\n    const [errors, setErrors] = useState(errorsObj);\n    const [password, setPassword] = useState('123456');\n    const dispatch = useDispatch();\n\n    function onLogin(e) {\n        e.preventDefault();\n        let error = false;\n        const errorObj = { ...errorsObj };\n        if (email === '') {\n            errorObj.email = 'Email is Required';\n            error = true;\n        }\n        if (password === '') {\n            errorObj.password = 'Password is Required';\n            error = true;\n        }\n        setErrors(errorObj);\n        if (error) {\n\t\t\treturn ;\n\t\t}\n\t\tdispatch(loadingToggleAction(true));\t\n        dispatch(loginAction(email, password, props.history));\n    }\n\n\n\tconst tabData = [\n\t\t{\n\t\t  name: 'Sign in',\n\t\t  content:\t<div>\n\t\t  <div className=\"mb-4\">\n\t\t\t  <h3 className=\"mb-1 font-w600\">Welcome Back</h3>\n\t\t\t  <p className=\"welcome-content-paragraph\">Log in with your data that you entered during your registration</p>\n\t\t  </div>\n\t\t  {props.errorMessage && (\n\t\t\t  <div className='bg-red-300 text-red-900 border border-red-900 p-1 my-2'>\n\t\t\t\t  {props.errorMessage}\n\t\t\t  </div>\n\t\t  )}\n\t\t  {props.successMessage && (\n\t\t\t  <div className='bg-green-300 text-green-900 border border-green-900 p-1 my-2'>\n\t\t\t\t  {props.successMessage}\n\t\t\t  </div>\n\t\t  )}\n\t\t  <form onSubmit={onLogin}>\n\t\t\t  <div className=\"form-group\">\n\t\t\t\t  <input type=\"email\" className=\"form-control\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n\t\t\t\t  {errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>}\n\t\t\t  </div>\n\t\t\t  <div className=\"form-group password-textfield\">\n\t\t\t\t  <input type=\"password\" className=\"form-control\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n\t\t\t  <span className='eye-off'><img src={eyeOff} alt=\"\" className=\"eye-off\"/> </span>\n\t\t\t\t  {errors.password && <div className=\"text-danger fs-12\">{errors.password}</div>}\n\t\t\t  </div>\n\t\t\t  <div className='recover-password d-flex justify-content-end'>\n\t\t\t\t  <Link  className='revover-password'  to=\"./page-register\">Recover Password ?</Link>\n\t\t\t  </div>\n\t\t\t  <div className=\"text-center\">\n\t\t\t\t  <button type=\"submit\" className=\"btn btn-primary btn-block btn-pink\">Sign In</button>\n\t\t\t  </div>\n\t\t  </form>\n\t\t  <div className=\"new-account add-new-account  text-center mt-2\">\n\t\t\t  <p className=\"mb-0\">Don't have an account?{\" \"}\n\t\t\t\t  <Link className=\"signup-link\" to=\"./page-register\">Sign up</Link>\n\t\t\t  </p>\n\t\t  </div>\n\n\t\t  <Button className='btn-google-signin' variant='outline-primary'>\n\t\t  <img src={googleIcon} alt=\"\" className=\"logo-icon mr-2\"/> <span>Sign in with Google</span>\n\t\t  </Button>\n\t\t  </div>\n\n\t\t},\n\t\t{\n\t\t  name: 'Register',\n\t\t  content:<div>\n\t\t  <div className=\"mb-4\">\n\t\t\t  <h3 className=\"mb-1 font-w600\">Let’s get Started</h3>\n\t\t\t  <p className=\"welcome-content-paragraph\">Enter your basic information to create new account on Trendyy</p>\n\t\t  </div>\n\t\t  {props.errorMessage && (\n\t\t\t  <div className='bg-red-300 text-red-900 border border-red-900 p-1 my-2'>\n\t\t\t\t  {props.errorMessage}\n\t\t\t  </div>\n\t\t  )}\n\t\t  {props.successMessage && (\n\t\t\t  <div className='bg-green-300 text-green-900 border border-green-900 p-1 my-2'>\n\t\t\t\t  {props.successMessage}\n\t\t\t  </div>\n\t\t  )}\n\t\t  <form onSubmit={onLogin}>\n\t\t  <div className=\"form-group\">\n\t\t\t\t  <input type=\"text\" className=\"form-control\" placeholder='Enter Name' value='Enter Name'/>\n\t\t\t\t  {/* {errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>} */}\n\t\t\t  </div>\n\t\t\t  <div className=\"form-group\">\n\t\t\t\t  <input type=\"email\" className=\"form-control\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n\t\t\t\t  {errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>}\n\t\t\t  </div>\n\t\t\t  <div className=\"form-group\">\n\t\t\t\t  <input type=\"phone\" className=\"form-control\" placeholder='Phone Number' value='Phone Number'/>\n\t\t\t\t  {/* {errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>} */}\n\t\t\t  </div>\n\t\t\t  <div className=\"form-group password-textfield\">\n\t\t\t\t  <input type=\"password\" className=\"form-control\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n\t\t\t  <span className='eye-off'><img src={eyeOff} alt=\"\" className=\"eye-off\"/> </span>\n\t\t\t\t  {errors.password && <div className=\"text-danger fs-12\">{errors.password}</div>}\n\t\t\t  </div>\n\t\t\t  <div className=\"text-center\">\n\t\t\t\t  <button type=\"submit\" className=\"btn btn-primary btn-block btn-pink\">Register</button>\n\t\t\t  </div>\n\t\t  </form>\n\t\t  <div className=\"new-account add-new-account  text-center mt-2\">\n\t\t\t  <p className=\"mb-0\">Already have an account?{\" \"}\n\t\t\t\t  <Link className=\"signup-link\" to=\"./page-register\">Sign in</Link>\n\t\t\t  </p>\n\t\t  </div>\n\t\t  </div>\n\t\t},\n\n\t\n\t  ]\n  return (\n  \n\t\t<div className=\"login-form-bx auth-page\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-lg-8 col-md-7 d-flex box-skew1 relative login-leftpanel\">\n\t\t\t\t\t\t<div className=\"inner-content align-self-center\">\n\t\t\t\t\t\t\t<Link to=\"/dashboard\" className=\"login-logo\">\n\t\t\t\t\t\t\t\t<img src={logo} alt=\"\" className=\"logo-icon mr-2\"/>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<h2 className=\"m-b10 text-white\">Sign In to <br/> Trendy Website</h2>\n\t\t\t\t\t\t\t<p className=\"m-b40 text-white\">Boost your engagement & productivity, streamline processes, and make faster communications.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='login-center-img'>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-lg-4 col-md-5 box-skew d-flex pl-0 pr-0 login-rightpanel\">\n\t\t\t\t\t\t<div className=\"authincation-content\">\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t<Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\n                <Nav as='ul' className='nav-pills light'>\n\t\t\t\t{tabData.map((data, i) => (\n                      <Nav.Item as='li' key={i}>\n                        <Nav.Link eventKey={data.name.toLowerCase()}>\n                          <i className={`la la-${data.icon} mr-2`} />\n                          {data.name}\n                        </Nav.Link>\n                      </Nav.Item>\n                    ))}\n                </Nav>\n                <Tab.Content className='auth-tab-content'>\n\t\t\t\t{tabData.map((data, i) => (\n                        <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\n\t\t\t\t\t\t\t<div>{data.content}</div>\n\t\t\t\t\t\t\n                         \n                        </Tab.Pane> \n                      )\n                  )}\n                </Tab.Content>\n              </Tab.Container>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        errorMessage: state.auth.errorMessage,\n        successMessage: state.auth.successMessage,\n        showLoading: state.auth.showLoading,\n    };\n};\nexport default connect(mapStateToProps)(Login);","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/reducers/PostsReducer.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/reducers/AuthReducer.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/reducers/Reducers.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/index.jsx",["720"],"import React, { useState } from \"react\";\n/// React router dom\nimport { Switch, Route } from \"react-router-dom\";\n/// Css\nimport \"./index.css\";\nimport \"./chart.css\";\nimport \"./step.css\";\nimport \"./custom.css\";\n\n/// Layout\nimport Nav from \"./layouts/nav\";\nimport Footer from \"./layouts/Footer\";\n\n/// Dashboard\nimport Screen from \"./components/screen\";\n\n//Scroll To Top\nimport ScrollToTop from \"./layouts/ScrollToTop\";\nimport Media from \"./components/media\";\nimport Settings from \"./components/settings\";\n// import Webplayer from './components/web-player'\nimport ScreenDetails from \"./components/screen/details\";\nimport Layout from \"./components/layout/Layout\";\nimport ChooseLayout from \"./components/layout/ChooseLayout\";\nimport CreateComposition from \"./components/layout/Composition/CreateComposition\";\nimport Push from \"./components/push/PushScreen\";\nimport SelectComparison from \"./components/push/SelectComparison\";\nimport EditComposition from \"./components/layout/Composition/EditComposition\";\nimport DaySchedule from \"./components/push/DaySchedule\";\nimport testDaySchudele from \"./components/push/TestDaySchudele\";\nimport TestDaySchudele from \"./components/push/TestDaySchudele\";\nimport TestDay from \"./components/push/TestDay\";\nimport CopyTestDay from \"./components/push/CopyTestDay\";\nimport MonthSchedule from \"./components/push/MonthSchedule\";\nimport CopyMonthSchedule from \"./components/push/CopyMonthSchedule\";\nimport SecondMonth from \"./components/push/SecondMonth\";\nimport DesignMonthSchedule from \"./components/push/DesignMonthSchedule\";\n\nconst Markup = () => {\n  let path = window.location.pathname;\n  path = path.split(\"/\");\n  path = path[path.length - 1];\n  let pagePath = path.split(\"-\").includes(\"page\");\n  const [activeEvent, setActiveEvent] = useState(!path);\n\n  const routes = [\n    /// Dashboard\n    { url: \"\", component: Screen },\n    { url: \"display\", component: Screen },\n    { url: \"assets\", component: Media },\n    { url: \"settings\", component: Settings },\n    { url: \"layout\", component: Layout },\n    { url: \"chooselayout\", component: ChooseLayout },\n    { url: \"createComposition\", component: CreateComposition },\n    { url: \"composition/edit\", component: EditComposition },\n    { url: \"push\", component: Push },\n    { url: \"SelectComparison\", component: SelectComparison },\n    // {url: \"web-player\", component: Webplayer},\n    { url: \"display/:id\", component: ScreenDetails },\n    { url: \"dayschedule/:id\", component: DaySchedule },\n    { url: \"test\", component: TestDaySchudele },\n    { url: \"testday\", component: TestDay },\n    { url: \"copytestday\", component: CopyTestDay },\n    { url: \"monthschedule\", component: MonthSchedule },\n    { url: \"copymonthschedule\", component: CopyMonthSchedule },\n    { url: \"secondmonth\", component: SecondMonth },\n    { url: \"design-month-schedule\", component: DesignMonthSchedule },\n  ];\n  console.log(path);\n  return (\n    <>\n      <div\n        id={`${!pagePath ? \"main-wrapper\" : \"\"}`}\n        className={`${!pagePath ? \"show\" : \"mh100vh\"}`}\n      >\n        {!pagePath && path !== \"web-player\" && (\n          <Nav\n            onClick={() => setActiveEvent(!activeEvent)}\n            activeEvent={activeEvent}\n            onClick2={() => setActiveEvent(false)}\n            onClick3={() => setActiveEvent(true)}\n          />\n        )}\n        <div\n          className={` ${!path && activeEvent ? \"rightside-event\" : \"\"} ${\n            !pagePath ? \"content-body content-body-custom\" : \"\"\n          } ${path === \"web-player\" ? \"web-player-body\" : \"\"}`}\n        >\n          <div\n            className={`${!pagePath ? \"container-fluid\" : \"\"}`}\n            style={{ minHeight: window.screen.height - 60 }}\n          >\n            <Switch>\n              {routes.map((data, i) => (\n                <Route\n                  key={i}\n                  exact\n                  path={`/${data.url}`}\n                  component={data.component}\n                />\n              ))}\n            </Switch>\n          </div>\n        </div>\n        {!pagePath && <Footer />}\n      </div>\n      <ScrollToTop />\n    </>\n  );\n};\n\nexport default Markup;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Layout.jsx",["721","722"],"import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport searchIcon from \"../../../img/search.png\";\nimport listIcon from \"../../../img/list-icon.png\";\nimport emptyMediaImg from \"../../../img/layout-img.png\";\nimport { Link } from \"react-router-dom\";\nimport useSWR from 'swr'\nimport { getAllComposition } from \"../../../utils/api\";\nimport ListComposition from \"./Composition/listComposition\";\nconst Layout = () => {\n  const { data: allComposition, mutate } = useSWR('/vendor/layouts/compositions', getAllComposition);\n \n  return (\n    <div>\n      <div className=\"custom-content-heading d-flex flex-wrap\">\n        <h1>Layouts</h1>\n      </div>\n      <div className=\"form-head d-flex mb-3 align-items-start\">\n        <Link\n          to={{\n            pathname: `/chooselayout`,\n          }}\n          className=\"mr-2 add-composition-btn\"\n        >\n          Add Composition <span className=\"btn-icon-right\">\n            <div class=\"glyph-icon flaticon-381-add-1\"></div>\n          </span>\n        </Link>\n        <div className=\"search-textfield ml-auto d-flex flex-wrap align-items-center\">\n          <div className=\"form-group mb-0\">\n            <input\n              type=\"text\"\n              className=\"form-control input-default \"\n              placeholder=\"Search...\"\n            />\n            <img className=\"search-icon\" src={searchIcon} alt=\"search\" />\n          </div>\n          <Button className=\"ml-2 icon-btn\" variant=\"primary\">\n            <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\n          </Button>\n        </div>\n      </div>\n      {!allComposition &&   <div className=\"empty-media text-center\">\n        <div class=\"empty-media-img layout-empty-img mx-auto\">\n          <img\n            className=\"media-img img-fluid\"\n            src={emptyMediaImg}\n            alt=\"media-img\"\n          />\n        </div>\n        <h3>Add Composition</h3>\n        <p>\n          Add Media files to composition, Lorem ipsum dolor is a dummy <br />{\" \"}\n          text. Dummy text.\n        </p>\n      </div>}\n    \n      {allComposition && <ListComposition allComposition={allComposition}  mutate={mutate}/>}\n      \n    </div>\n  );\n};\n\nexport default Layout;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/PushScreen.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/actions/AuthActions.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/index.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/actions/PostTypes.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/Footer.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/ScrollToTop.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/utils/api.js",["723"],"import fetchClient from \"./fetchClient\";\n\nexport const BASE_URL = \"http://144.126.143.140:5000\";\n\nexport function login(email, password) {\n  const role = \"vendor\";\n  const postData = {\n    email,\n    password,\n    role,\n  };\n\n  return fetchClient.post(`${BASE_URL}/vendor/auth/login`, postData);\n}\n\nexport async function getAllScreens() {\n  const response = await fetchClient.get(BASE_URL + `/vendor/display/screen`);\n  return response.data.data;\n}\n\nexport async function getAllMedia() {\n  const response = await fetchClient.get(BASE_URL + `/vendor/display/media`);\n  return response.data.data.media;\n}\nexport async function getAllComposition() {\n  const response = await fetchClient.get(BASE_URL + `/vendor/layouts/compositions?page=0&limit=1000`);\n\n  return response.data.data;\n}\n\n\nexport function addScreen(data) {\n  return fetchClient.post(`${BASE_URL}/vendor/display/screen`, data);\n}\n\nexport async function addScreenCode(deviceToken) {\n  const postData = {\n    deviceToken: deviceToken,\n  };\n  const response = await fetchClient.post(`${BASE_URL}/device/auth`, postData);\n  return response.data.data;\n}\n\nexport async function validateScreenCode(code) {\n  const postData = {\n    code: code,\n  };\n\n  try {\n    const response = await fetchClient.post(\n      `${BASE_URL}/vendor/display/deviceCode`,\n      postData\n    );\n    return response.data.statusCode === 200;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport async function addMedia(formData) {\n  const response = await fetchClient.post(\n    `${BASE_URL}/vendor/display/media`,\n    formData,\n    {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    }\n  );\n}\nexport async function deleteMedia(id) {\n  await fetchClient.delete(\n    `${BASE_URL}/vendor/display/media?mediaId=${id}`\n  );\n}\n\nexport async function publishMedia(postData) {\n\n  try {\n    const response = await fetchClient.post(\n      `${BASE_URL}/vendor/display/publish`,\n      postData\n    );\n    return response.data.statusCode === 200;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport async function deleteScreen(id) {\n  return await fetchClient.delete(\n    `${BASE_URL}/vendor/display/screen?screenId=${id}`\n  );\n}\n\nexport async function getLayouts() {\n  const response = await fetchClient.get(\n    `${BASE_URL}/vendor/layouts`\n  );\n  return response.data.data;\n}\nexport async function postComposition(postData) {\n\n  try {\n    const response = await fetchClient.post(\n      `${BASE_URL}/vendor/layouts/composition`,\n      postData\n    );\n    return response.data.statusCode === 200;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport async function putComposition(postData) {\n\n  try {\n    const response = await fetchClient.put(\n      `${BASE_URL}/vendor/layouts/composition`,\n      postData\n    );\n    return response.data.statusCode === 200;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport async function deleteCompositionById(id) {\n  await fetchClient.delete(\n    `${BASE_URL}/vendor/layouts/composition?compositionId=${id}`\n  );\n}\n\nexport async function getCompositionById(url) {\n  const response = await fetchClient.get(BASE_URL + `${url}`);\n  return response.data.data;\n}\n\nexport async function getMedia(path) {\n  const response = await fetchClient.get(`${BASE_URL}/vendor/display/mediaFile?path=${path}`);\n  return response.data.data;\n}\n\n\nexport async function uploadBlob(blob) {\n\n\n  const imageResponse = await fetchClient.get(blob, { responseType: 'blob' });\n  const blobData = imageResponse.data;\n\n\n  const formData = new FormData();\n  // Extract filename and extension from the Blob URL\n  const url = new URL(blob);\n  const pathnameParts = url.pathname.split('/');\n  const filenameWithExtension = pathnameParts[pathnameParts.length - 1];\n\n  // Append the Blob to the FormData object\n  formData.append('file', blobData, filenameWithExtension);\n\n\n  const response = await fetchClient.post(\n    `${BASE_URL}/vendor/layouts/upload`,\n    formData,\n    {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    }\n  );\n  return response.data.data;\n\n}\n\nexport async function pushAddSchedule(postData) {\n\n  try {\n    const response = await fetchClient.post(\n      `${BASE_URL}/vendor/push/schedule`,\n      postData\n    );\n    return response;\n  } catch (error) {\n    return false;\n  }\n}\n\n\n\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/ChooseLayout.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/SelectComparison.jsx",["724","725","726","727"],"// import React, { useState } from 'react'\n// import { Button, Dropdown, Table } from \"react-bootstrap\";\n// import searchIcon from \"../../../img/search.png\";\n// import listIcon from \"../../../img/list-icon.png\";\n// import layoutSelected from \"../../../img/layout-select-img.png\";\n// import downArrow from \"../../../img/down-arrow.png\";\n// import menuIcon from \"../../../img/menu-icon.png\";\n// import defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\n// import deleteIcon from \"../../../img/delete-icon.png\";\n// const SelectComparison = () => {\n//   const [allScreens, setAllScreens] = useState(\"\");\n\n//   const [checkedItems, setCheckedItems] = useState({});\n//   const [checkedValues, setCheckedValues] = useState([]);\n\n//   const handleCheckboxChange = (event) => {\n//     const newCheckedItems = {\n//       ...checkedItems,\n//       [event.target.name]: event.target.checked,\n//     };\n//     const selectedScreens = [];\n//     for (const key in newCheckedItems) {\n//       if (newCheckedItems[key] === true) {\n//         selectedScreens.push(key);\n//       }\n//     }\n//     setCheckedValues(selectedScreens);\n//     setCheckedItems(newCheckedItems);\n//   };\n\n//   const handleSelectAllChange = (event) => {\n//     const newCheckedItems = {};\n//     allScreens.forEach((item) => {\n//       newCheckedItems[item._id] = event.target.checked;\n//     });\n//     const selectedScreens = [];\n//     for (const key in newCheckedItems) {\n//       if (newCheckedItems[key] === true) {\n//         selectedScreens.push(key);\n//       }\n//     }\n//     setCheckedValues(selectedScreens);\n//     setCheckedItems(newCheckedItems);\n//   };\n\n//   return (\n//     <>\n//           <div className=\"custom-content-heading selected-heading d-flex flex-wrap\">\n//         <h1>Select Composition</h1>\n\n//         <div className=\"search-textfield search-selected ml-auto d-flex flex-wrap align-items-center\">\n//           <div className=\"form-group mb-0\">\n//             <input\n//               type=\"text\"\n//               className=\"form-control input-default \"\n//               placeholder=\"Search...\"\n//             />\n//             <img className=\"search-icon\" src={searchIcon} alt=\"search\" />\n//           </div>\n//           <Button\n//             className=\"ml-2 icon-btn\"\n//             variant=\"primary\"\n//           >\n//             <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\n//           </Button>\n//         </div>\n//       </div>\n// {/* \n//       <Table responsive className=\"custom-table mt-3\">\n//           <thead>\n//             <tr>\n//               <th>Composition</th>\n//               <th>Date Added</th>\n//               <th>Associated Schedule</th>\n//               <th>Tags</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n\n//                 <tr>\n//                   <td>\n//                     <span className=\"td-content d-flex name-td-content\">\n//                       <span className=\"name-img mr-2\">\n//                       <img\n//                   className=\"layout-select-img\"\n//                   src={layoutSelected}\n//                   alt=\"menu-icon\"\n//                 />\n//                       </span>\n//                       <span className=\"name-content d-flex flex-column flex-grow-1\">\n//                         <strong>C-c02Nov 21 12:03</strong>\n//                         <span>Added by Gauri Batra</span>\n//                       </span>\n//                     </span>\n//                   </td>\n//                   <td>\n//                   <span className=\"name-content d-flex flex-column flex-grow-1\">\n//                         <strong>2 Nov, 2021</strong>\n//                         <span>12:02 PM</span>\n//                       </span>\n//                   </td>\n//                   <td>\n//                    0\n//                   </td>\n//                   <td>\n//                       <span className=\"my-phone-tag text-truncate ml-1\">My Phone is</span>\n\n                    \n//                   </td>\n//                 </tr>\n//                 <tr>\n//                   <td>\n//                     <span className=\"td-content d-flex name-td-content\">\n//                       <span className=\"name-img mr-2\">\n//                       <img\n//                   className=\"layout-select-img\"\n//                   src={layoutSelected}\n//                   alt=\"menu-icon\"\n//                 />\n//                       </span>\n//                       <span className=\"name-content d-flex flex-column flex-grow-1\">\n//                         <strong>C-c02Nov 21 12:03</strong>\n//                         <span>Added by Gauri Batra</span>\n//                       </span>\n//                     </span>\n//                   </td>\n//                   <td>\n//                   <span className=\"name-content d-flex flex-column flex-grow-1\">\n//                         <strong>2 Nov, 2021</strong>\n//                         <span>12:02 PM</span>\n//                       </span>\n//                   </td>\n//                   <td>\n//                    0\n//                   </td>\n//                   <td>\n//                       <span className=\"my-phone-tag text-truncate ml-1\">My Phone is</span>\n\n//                   </td>\n//                 </tr>\n//           </tbody>\n//         </Table> */}\n\n\n//     </>\n//   )\n// }\n\n// export default SelectComparison\n\n\n\n\nimport { useEffect, useState } from \"react\";\nimport TableLoader from \"../TableLoader\";\nimport '../Table.css';\nimport { getAllScreens, pushAddSchedule } from \"../../../utils/api\";\nimport { Button, Dropdown, Table } from \"react-bootstrap\";\nimport searchIcon from \"../../../img/search.png\";\nimport listIcon from \"../../../img/list-icon.png\";\n// import tagCloseIcon from \"../../img/tag-close-icon.png\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nconst SelectComparison = () => {\n  const history = useHistory();\n\n  const [allScreens, setAllScreens] = useState(\"\");\n  const [checkedItems, setCheckedItems] = useState({});\n  const [checkedValues, setCheckedValues] = useState([]);\n  const [published, setPublished] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [scheduleName , setScheduleName] = useState(\"\")\n  // use effect\n  console.log(checkedItems,\"SelectCompariso checkedItemsn\")\n  console.log(checkedValues , \"SelectCompariso checkedValues\")\n\n  useEffect(() => {\n    callAllScreenApi();\n  }, []);\n\n  const callAllScreenApi = async () => {\n    setLoading(true);\n    const list = await getAllScreens();\n    setLoading(false);\n    setAllScreens(list);\n  };\n\n  const handleCheckboxChange = (event) => {\n    const newCheckedItems = {\n      ...checkedItems,\n      [event.target.name]: event.target.checked,\n    };\n    const selectedScreens = [];\n    for (const key in newCheckedItems) {\n      if (newCheckedItems[key] === true) {\n        selectedScreens.push(key);\n      }\n    }\n    setCheckedValues(selectedScreens);\n    setCheckedItems(newCheckedItems);\n  };\n\n  const handleSelectAllChange = (event) => {\n    const newCheckedItems = {};\n    allScreens.forEach((item) => {\n      newCheckedItems[item._id] = event.target.checked;\n    });\n    const selectedScreens = [];\n    for (const key in newCheckedItems) {\n      if (newCheckedItems[key] === true) {\n        selectedScreens.push(key);\n      }\n    }\n    setCheckedValues(selectedScreens);\n    setCheckedItems(newCheckedItems);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"kkkkk\")\n   await pushAddSchedule({\n    name: scheduleName,\n    screens: checkedValues,\n   \n    }).then((res)=>{if(res.data.statusCode === 200){\n      history.push(`/dayschedule/${res.data.data._id}`);\n    }}\n    )\n  \n  }\n  return (\n<>\n<div className=\"custom-content-heading selected-heading d-flex flex-wrap\">\n        <h1>Select Composition</h1>\n\n        <div className=\"search-textfield search-selected ml-auto d-flex flex-wrap align-items-center\">\n          <div className=\"form-group mb-0\">\n            <input\n              type=\"text\"\n              className=\"form-control input-default \"\n              placeholder=\"Search...\"\n            />\n            <img className=\"search-icon\" src={searchIcon} alt=\"search\" />\n          </div>\n          <Button\n            className=\"ml-2 icon-btn\"\n            variant=\"primary\"\n          >\n            <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\n          </Button>\n        </div>\n      </div>  \n      <form onSubmit={handleSubmit}  className=\"d-flex justify-content-between align-items-center my-4\" >\n        <input\n              type=\"text\"\n              className=\" schedule-name-input-feild form-control input-default \"\n              placeholder=\"Schedule Name\"\n              value={scheduleName}\n              onChange={(e) => setScheduleName(e.target.value)}\n              required\n            />\n          <Button\n            className=\"con-btn \"\n            variant=\"primary\"\n            type=\"submit\"\n          >\n            Save\n          </Button>\n            \n            \n            </form>\n     \n          <Table responsive>\n            <thead>\n              <tr>\n                <th className=\"width50\">\n                  <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"custom-control-input\"\n                      id=\"checkbox1_exam_all\"\n                      onChange={handleSelectAllChange}\n                      required=\"\"\n                    />\n                    <label\n                      className=\"custom-control-label\"\n                      htmlFor=\"checkbox1_exam_all\"\n                    ></label>\n                  </div>\n                </th>\n                <th>Screen</th>\n                <th>Last Seen</th>\n                <th>Default Composition</th>\n                <th>Current Schedule</th>\n              </tr>\n            </thead>\n            {loading  ? (\n          <TableLoader colSpan={5}/>\n        ) : (\n            <tbody>\n              {allScreens !== \"\" &&\n                allScreens.map((screen) => {\n                  return (\n                    <tr>\n                      <td>\n                        <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"custom-control-input\"\n                            id={screen._id}\n                            name={screen._id}\n                            checked={checkedItems[screen._id]}\n                            onChange={handleCheckboxChange}\n                          />\n                          <label\n                            className=\"custom-control-label\"\n                            htmlFor={screen._id}\n                          ></label>\n                        </div>\n                      </td>\n\n                      <td>\n                        <span className=\"td-content\">\n                          <strong>{screen.name}</strong>\n                          <span>{screen.screenLocation}</span>\n                        </span>\n                      </td>\n                      <td>\n                        <span className=\"d-flex align-items-center\">\n                          <span className=\"status status-green\"></span>\n                          <span className=\"td-content\">\n                            <strong>{screen.name}</strong>\n                            <span>{screen.screenLocation}</span>\n                          </span>\n                        </span>\n                      </td>\n                      <td>Default Compo. </td>\n                      <td>No Schedule</td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n            )}\n          </Table>\n    \n      \n\n     \n   \n      \n\n    </>\n  );\n};\n\nexport default SelectComparison;\n\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/details.jsx",["728"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Accordion,\n  Button,\n  ButtonGroup,\n  Card,\n  Dropdown,\n  DropdownButton,\n  Badge,\n} from \"react-bootstrap\";\n\nimport { useParams, useHistory } from \"react-router-dom\";\nimport editIcon from \"../../../img/edit-icon.png\";\nimport powerIcon from \"../../../img/power-icon.png\";\nimport screenShotIcon from \"../../../img/screenshot-icon.png\";\nimport locationIcon from \"../../../img/location-icon.png\";\nimport accordionImg from \"../../../img/screen-accordion-img.png\";\nimport editComposition from \"../../../img/edit-composition.png\";\nimport clockIcon from \"../../../img/clock-icon.png\";\nimport tagAddIcon from \"../../../img/icon-tag-add.png\";\n\nimport { deleteScreen, getAllScreens } from \"../../../utils/api\";\nimport DeleteConfirmation from \"../../modals/DeleteConfirmation\";\nimport QuickPlayModal from \"../../modals/QuickPlayModal\";\nimport WindowsModal from \"../../modals/WindowsModal\";\nimport UpdateModal from \"../../modals/UpdateModal\";\n\nconst ScreenDetails = () => {\n  const history = useHistory();\n  const { id } = useParams();\n  const [screen, setScreen] = useState(\"\");\n  const [activeDefault, setActiveDefault] = useState(\"\");\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [showQuickPlayModal, setQuickPlayModal] = useState(false);\n  const [showWindowsModal, setWindowsModal] = useState(false);\n  const [showUpdateModal, setUpdateModal] = useState(false);\n  // use effect\n  useEffect(() => {\n    callAllScreenApi();\n  }, []);\n  const callAllScreenApi = async () => {\n    const list = await getAllScreens();\n    setScreen(\n      list.find((item) => {\n        return item._id === id;\n      })\n    );\n  };\n\n  const handleDelete = async () => {\n    setDeleteModal(false);\n    await deleteScreen(id);\n    history.push(\"/display\");\n  };\n\n  const handleQuickPlay = async () => {\n    setDeleteModal(false);\n  };\n\n  const handleWindows = async () => {\n    setWindowsModal(false);\n  };\n\n  const handleUpdate = async () => {\n    setWindowsModal(false);\n  };\n  const defaultAccordion = [\n    {\n      title: \"Content\",\n      text: (\n        <div className=\"row\">\n          <div className=\"col-lg-4 col-md-4 col-sm-6 col-12\">\n            <div className=\"accordion-custom-body d-flex align-items-center w-100\">\n              <div className=\"accordion-custom-img\">\n                <img\n                  className=\"accordion-img\"\n                  src={accordionImg}\n                  alt=\"menu-icon\"\n                />\n              </div>\n              <div className=\"accordion-custom-content flex-1\">\n                <h6>Currently Playing</h6>\n                <p>Default Composition</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-4 col-md-4 col-sm-6 col-12\">\n            <div className=\"accordion-custom-body d-flex align-items-center w-100\">\n              <div className=\"accordion-custom-img\">\n                <img\n                  className=\"accordion-img\"\n                  src={accordionImg}\n                  alt=\"menu-icon\"\n                />\n              </div>\n              <div className=\"accordion-custom-content flex-1\">\n                <h6>\n                  Default Composition{\" \"}\n                  <span className=\"edit-compostion\">\n                    {\" \"}\n                    <img\n                      className=\"accordion-img\"\n                      src={editComposition}\n                      alt=\"menu-icon\"\n                    />\n                  </span>\n                </h6>\n                <p>Default Composition 1</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-lg-4 col-md-4 col-sm-6 col-12\">\n            <div className=\"accordion-custom-body d-flex align-items-center w-100\">\n              <div className=\"schedule-custom-img\">\n                <img className=\"schedule-img\" src={clockIcon} alt=\"menu-icon\" />\n              </div>\n              <div className=\"accordion-custom-content active-schedule flex-1\">\n                <h6>Active Schedule</h6>\n                <h5>Schedule 1</h5>\n                <p className=\"date-schedule\">\n                  From 02 Apr, 23 ,04:00PM - To 05 Apr,23, 05:00Pm\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      ),\n      bg: \"primary\",\n    },\n    {\n      title: \"Device\",\n      text: (\n        <div className=\"device-accordion-content\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <h6>Private IP</h6>\n                  </div>\n                </div>\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <p>10.10.1.10</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <h6>Device OS</h6>\n                  </div>\n                </div>\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <p>Windows</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <h6>Public IP</h6>\n                  </div>\n                </div>\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <p>17.12.13.10</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <h6>APK Version</h6>\n                  </div>\n                </div>\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <p>NA</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <h6>MAC Address</h6>\n                  </div>\n                </div>\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <p>NA</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <h6>SDK Version</h6>\n                  </div>\n                </div>\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <p>NA</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <h6>Device ID</h6>\n                  </div>\n                </div>\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <p>509373783ASDH766</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <h6>Javascript Version</h6>\n                  </div>\n                </div>\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\n                  <div className=\"device-content\">\n                    <p>5.3.0.0</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ),\n\n      bg: \"info\",\n    },\n    {\n      title: \"Tag\",\n      text: (\n        <div className=\"tag-accordion-content\">\n          <div className=\"tag-content-row d-flex flex-wrap align-items-center\">\n            <Badge\n              className=\"badge-common-light badge-tag mr-2\"\n              variant=\"outline-light\"\n            >\n              Test Devices\n            </Badge>\n            <Badge\n              className=\"badge-common-light badge-tag mr-2\"\n              variant=\"outline-light\"\n            >\n              Test Devices\n            </Badge>\n            <Badge\n              className=\"badge-common-light badge-tag mr-2\"\n              variant=\"outline-light\"\n            >\n              Test Devices\n            </Badge>\n            <span className=\"tag-added\">\n              {\" \"}\n              <img className=\"tag-add-icon\" src={tagAddIcon} alt=\"menu-icon\" />\n            </span>\n          </div>\n        </div>\n      ),\n\n      bg: \"success\",\n    },\n  ];\n  if (!screen) return <></>;\n  return (\n    <>\n      <div className=\"custom-content-heading d-flex flex-wrap align-items-center\">\n        <h1 className=\"mr-auto\">Screen Details</h1>\n        <Button\n          className=\"edit-screen-btn d-flex align-items-center\"\n          variant=\"outline-light\"\n          onClick={() => {\n            setUpdateModal(true);\n          }}\n        >\n          Edit Screen{\" \"}\n          <span className=\"btn-icon-right\">\n            <img className=\"edit-icon\" src={editIcon} alt=\"menu-icon\" />\n          </span>\n        </Button>\n      </div>\n      <div className=\"accordion-overflow\">\n        <div className=\"form-head d-flex mb-3 align-items-start mt-2 pr-3\">\n          <span className=\"screen-subheading\">{screen.name}</span>\n\n          <div className=\"ml-auto d-flex flex-wrap align-items-center\">\n            <a\n              className=\" btn btn-primary btn-xs\"\n              variant=\"primary\"\n              href={`/web-player?id=${screen.device.deviceToken}`}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              Launch Web Player\n            </a>\n\n            <Button\n              className=\"ml-2 screen-icon-btn btn btn-primary\"\n              variant=\"primary\" onClick={() => {\n                setQuickPlayModal(true);\n              }}\n            >\n              <img\n                className=\"dropdown-list-img-icon img-fluid\"\n                src={powerIcon}\n                alt=\"menu-icon\"\n              />\n            </Button>\n            <Button\n              className=\"ml-2 screen-icon-btn btn btn-primary\"\n              variant=\"primary\" \n              onClick={() => {\n                setWindowsModal(true);\n              }}\n            >\n              <img\n                className=\"dropdown-list-img-icon img-fluid screenshot-icon\"\n                src={screenShotIcon}\n                alt=\"menu-icon\"\n              />\n            </Button>\n            <DropdownButton\n              as={ButtonGroup}\n              title=\"\"\n              id=\"bg-nested-dropdown\"\n              className=\"ml-2  more-icon-dropdown\"\n            >\n              <Dropdown.Item eventKey=\"1\">Reload Screen</Dropdown.Item>\n              <Dropdown.Item eventKey=\"2\">Clear Cache</Dropdown.Item>\n              <Dropdown.Item eventKey=\"3\">Clear Data</Dropdown.Item>\n              <Dropdown.Item eventKey=\"4\">Reboot display</Dropdown.Item>\n\n              <Dropdown.Item\n                eventKey=\"5\"\n                onClick={() => {\n                  setDeleteModal(true);\n                }}\n              >\n                Deactivate Screen\n              </Dropdown.Item>\n            </DropdownButton>\n          </div>\n        </div>\n\n        <div className=\"row location-row mx-0\">\n          <div className=\"col-sm-6 p-md-0\">\n            <div className=\"location-col\">\n              <h4>\n                <img\n                  className=\"locationt-icon-img\"\n                  src={locationIcon}\n                  alt=\"menu-icon\"\n                />\n                {screen.googleLocation}\n              </h4>\n              <p className=\"active-row d-flex align-items-center\">\n                <span className=\"active-status\"></span> Active Now\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row accordion-overflow-scroll\">\n          <div className=\"col-md-12 \">\n            <Accordion\n              className=\"accordion accordion-primary custom-accordion\"\n              defaultActiveKey=\"\"\n            >\n              {defaultAccordion.map((d, i) => (\n                <div className=\"accordion__item details-accordian\" key={i}>\n                  <Accordion.Toggle\n                    as={Card.Text}\n                    eventKey={`${i}`}\n                    className={`accordion__header rounded-lg ${\n                      activeDefault === i ? \"\" : \"collapsed\"\n                    }`}\n                    onClick={() =>\n                      setActiveDefault(activeDefault === i ? -1 : i)\n                    }\n                  >\n                    <span className=\"accordion__header--text\">{d.title}</span>\n                    <span className=\"accordion__header--indicator\"></span>\n                  </Accordion.Toggle>\n                  <Accordion.Collapse eventKey={`${i}`}>\n                    <div className=\"accordion__body--text\">{d.text}</div>\n                  </Accordion.Collapse>\n                </div>\n              ))}\n            </Accordion>\n          </div>\n          {deleteModal && (\n            <DeleteConfirmation\n              setDeleteModal={setDeleteModal}\n              callbackFunction={handleDelete}\n              text=\"Are you sure you want to deactivate?\"\n              yes={\"Yes Deactivate\"}\n            />\n          )}\n        </div>\n\n        <QuickPlayModal\n        showQuickPlayModal={showQuickPlayModal}\n              setQuickPlayModal={setQuickPlayModal}\n              handleQuickPlay={handleQuickPlay}\n            />\n\n<WindowsModal\n        showWindowsModal={showWindowsModal}\n        setWindowsModal={setWindowsModal}\n              handleWindows={handleWindows}\n            />\n\n<UpdateModal\n        showUpdateModal={showUpdateModal}\n        setUpdateModal={setUpdateModal}\n              handleUpdate={handleUpdate}\n            />\n      </div>\n    </>\n  );\n};\n\nexport default ScreenDetails;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/CreateComposition.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/EditComposition.jsx",["729","730"],"import { useLocation } from \"react-router-dom\";\nimport useSWR from 'swr'\nimport CommonComposition from \"./Common\";\nimport { getCompositionById } from \"../../../../utils/api\";\nimport { useEffect, useState } from \"react\";\n\nconst EditComposition = () => {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const id = queryParams.get('id');\n\n  // const { data: composition , mutate , error} = useSWR(id ? `/vendor/layouts/composition?compositionId=${id}` : null, fetcher);\n  const [composition,setComposition] = useState(null)\n  const layout = composition ? composition.layout : {};\n\n\n  // Example useEffect for triggering SWR mutate on route change\n  const getData = async ()=>{\n    const data  =await getCompositionById(`/vendor/layouts/composition?compositionId=${id}`)\n    setComposition(data)\n  }\n  useEffect(() => {\n    if(id){\n      getData()\n      \n    }\n  }, [id]);\n\n  return (<>{composition && <CommonComposition type=\"edit\" layout={layout} composition={composition}/>}</>)\n};\n\nexport default EditComposition;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/listComposition.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/index.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/index.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/media/index.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/index.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/utils/fetchClient.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/main.jsx",["731","732","733","734","735"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { addScreenCode, BASE_URL, getCompositionById } from \"../../../utils/api\";\nimport { Link } from \"react-router-dom\";\nimport { Col } from \"react-bootstrap\";\nimport { io } from \"socket.io-client\";\nimport WebVideoPlayer from \"./WebVideoPlayer\";\nimport CompositionPlayer from \"./compositionPlayer\";\nimport useSWR from 'swr'\nconst WebMain = ({id, handleAddClass, onFullScreen}) => {\n  const [media, setMedia] = useState(\"\");\n  const [code, seCode] = useState(\"\");\n  const [contentType, setContentType] = useState(\"\");\n  const [isVerified , setIsVerified] = useState(false);\n  console.log(`%c${contentType}`, \"font-size:20px;color:red\")\n  const initiaload = useRef(true)\n  // const [timeout, setApiTimeout] = useState(\"\");\nuseEffect(()=>{  console.log(contentType, \"contentType check inside main.jsx\")\n})\n  const getScreenCode = async () => {\n    let timeoutTimer;\n    const getContent = await addScreenCode(id);\n    console.log(getContent,\"llllllll\")\n    setIsVerified(getContent?.isVerified)\n    if (getContent.isVerified) {\n      if (getContent?.content.length) {\n        const getMedia =\n          getContent?.content[getContent.content.length - 1].media;\n          const mediaType =\n          getContent?.content[getContent.content.length - 1].type;\n          \n        if(mediaType === \"composition\"){\n          setMedia(getMedia);\n          setContentType(\"composition\"); \n        } else {\n          setMedia(`${BASE_URL}${getMedia.title}`);\n          setContentType(getMedia.type); \n          clearTimeout(timeoutTimer)\n          timeoutTimer = setTimeout(() => {\n            console.log(\"normal timeout\")\n            getScreenCode();\n          }, 6000);\n        }\n\n      } else {\n        setContentType(\"default_media\");\n      }\n    } else {\n      setContentType(\"code\");\n      seCode(getContent.deviceCode);\n    }\n  };\n  useEffect(() => {\n    if(!isVerified){\n      const interval = setInterval(() => {\n        getScreenCode();\n      }, 1000);\n  \n      return () => clearInterval(interval);\n    }\n    \n  }, [isVerified]);\n  const defaultMediaUrl = `${BASE_URL}/default/file_1681896290177.png`;\n  useEffect(() => {\n    const socket = io(BASE_URL, {\n      query: { deviceToken: id },\n      autoConnect: false,\n      transports: [\"websocket\"],\n      secure: true,\n    });\n    getScreenCode();\n    // no-op if the socket is already connected\n\n    socket.connect();\n\n    function onReceiveContent(value) {\n      console.log(value,\"socket data\")\n    if(initiaload.current === true){\n      initiaload.current = false\n    } else {\n      //  setContentType(null);\n      getScreenCode();\n    }\n     \n    }\n    function onDisconnectDevice(value) {\n      setContentType(null);\n      getScreenCode();\n    }\n    socket.on(\"disconnectDevice\", onDisconnectDevice);\n    \n    socket.on(\"receiveContent\", onReceiveContent);\n    socket.on(\"receiveComposition\", onReceiveContent);\n    return () => {\n      socket.disconnect();\n      socket.off(\"receiveContent\", onReceiveContent);\n    };\n  });\n\n\n  return (\n    < >\n        <div>\n    \n            {\" \"}\n            <button id=\"Fullscreen\" onClick={() => onFullScreen()} style={{zIndex:10}}>\n              <div class=\"full-text\">\n                <div class=\"sec-block\">\n                  {\" \"}\n                  <i class=\"fa fa-expand\"></i>\n                  <p>View Full Screen</p>\n                </div>\n              </div>\n            </button>\n          \n        </div>\n        {< >\n          {contentType === \"code\" && (\n            <div className=\"basic-list-group \">\n              <div className=\"main-block\">\n                <div className=\"registration-block\">\n                  <p className=\"registration-title\">\n                    Screen Registration Code{\" \"}\n                  </p>\n                  <p className=\"code\">{code}</p>\n                </div>\n              </div>\n              <div className=\"webrowerTextSection\">\n                <div className=\"how-to-register\">\n                  How to register this screen ?\n                </div>\n                <div className=\"guidelines-login\">\n                  1. Login to on your internet browser{\" \"}\n                </div>\n                <div className=\"guidelines-login\">\n                  2. Go to 'Screen' section &gt; Click on{\" \"}\n                  <Link>\n                    <span className=\"white-color\">'+Add Screen</span>'\n                  </Link>{\" \"}\n                  &gt; Enter above{\" \"}\n                  <Link>\n                    <span className=\"white-color\">\n                      Screen Registration Code\n                    </span>\n                  </Link>{\" \"}\n                  &gt; Click on{\" \"}\n                  <Link>\n                    <span className=\"white-color\">'Next'</span>\n                  </Link>\n                </div>\n\n                <div className=\"guidelines-login\">\n                  3. Enter screen name and other details &gt; Click on\n                  <Link>\n                    <span className=\"white-color\"> 'Register Screen'</span>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          )}\n          {contentType !==null &&  contentType === \"image\" && (\n            <div className=\"basic-list-group image-preview-container media-content\">\n              <img\n                className=\"webplayer-preview-img\"\n                src={media}\n                alt=\"media-img\"\n              />\n            </div>\n          )}\n          {contentType !==null &&  contentType === \"video\" && (\n            <div className=\"basic-list-group video-container media-content\">\n            <WebVideoPlayer src={media}></WebVideoPlayer>\n              {/* <video\n                title=\"video\"\n                width=\"100%\"\n                height=\"440px\"\n                src={}\n              ></video> */}\n            </div>\n          )}\n          {contentType === \"default_media\" && (\n            <div className=\"basic-list-group image-preview-container media-content\">\n              <img\n                className=\"webplayer-preview-img\"\n                src={defaultMediaUrl}\n                alt=\"media-img\"\n              />\n            </div>\n          )}\n\n          {contentType !==null &&  contentType === \"composition\" && (\n           <GetCompositionPlayer composition={media} handleAddClass={handleAddClass}/>\n          )}\n\n          <div class=\"console-reg\" id=\"consoleReg\" style={{zIndex:10}}>\n            <p>\n              Copy paste above Screen Registration Code in console{\" \"}\n              <em class=\"ti-arrow-circle-up\"></em>\n            </p>\n          </div>\n        </>}\n    </>\n  );\n};\n\nexport default WebMain;\n\n\n\nconst GetCompositionPlayer = ({composition,handleAddClass})=>{\n  // const fetcher = (url) => getCompositionById(url);\n  // const { data: composition  } = useSWR(id ? `/vendor/layouts/composition?compositionId=${id}` : null, fetcher);\n \n  useEffect(()=>{\n    if(composition && composition?.layout?.screenType){\n      handleAddClass(composition.layout.screenType)\n    }\n  \n  },[composition])\n    return (<>\n    {composition && composition.referenceUrl && <CompositionPlayer  content={composition.zones[0].content} referenceUrl={composition.referenceUrl}/>}\n    </>)\n}\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/utils/UtilsService.js",["736","737","738","739"],"export const isValidDate = (d) => {\n    return d instanceof Date && !isNaN(d);\n}\n\nexport const formattedDateString = (d) => {\n    d = new Date(d);\n    const yyyy = d.getFullYear();\n    const mm = dateDigits(d.getMonth() + 1);\n    const dd = dateDigits(d.getDate());\n    return yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nexport const humanReadableFormattedDateString = (date) => {\n    date = new Date(date);\n    let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let day = dateDigits(date.getDate());\n    let month = months[date.getMonth()];\n    let year = date.getFullYear();\n    return day + ' ' + month + ', ' + year;\n}\n\nexport const formattedTimeString = (d) => {\n    d = new Date(d);\n    return dateDigits(d.getHours()) + \":\" + dateDigits(d.getMinutes()) + \":00\";\n};\n\nexport const getHOrMFromLocalTimeString = (localTimeString, hOrM = 'h') => {\n    const localTimeArr = localTimeString.split(':');\n    if (localTimeArr.length > 1) {\n        if (hOrM === 'h') {\n            return +localTimeString.split(':')[0];\n        } else {\n            return +localTimeString.split(':')[1];\n        }\n    } else {\n        return 0;\n    }\n};\n\nexport const dateDigits = (v, digits = 2) => {\n    let str = \"\";\n    for (let i = digits; i > 1; i--) {\n        str += \"0\";\n    }\n\n    return (str + v).slice(-digits);\n};\n\nexport const currencyFormat = (num, toFixed = 2) => {\n    num = num ? +num : 0;\n    return '$' + num.toFixed(toFixed).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}\n\nexport const numberThFormat = (num) => {\n    switch(num) {\n        case 1: \n            return num + 'st';\n        break;\n        case 2: \n            return num + 'nd';\n        break;\n        case 3: \n            return num + 'rd';\n        break;\n        default: \n            return num + 'th';\n        break;\n    }\n}\n\nexport const priceValue = (formattedPrice = \"$0.00\") => {\n    formattedPrice = formattedPrice ? formattedPrice + \"\" : \"$0.00\";\n    return +formattedPrice.split(\",\").join(\"\").split(\" \").join(\"\").split(\"$\").join(\"\")\n};\n\nexport const isMobile = () => {\n    return window.innerWidth < 768;\n};\n\nexport const randomStr = (length) => {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nexport const defaultPeriods = [\n    {\n        dayOfWeek: \"SUN\",\n        startLocalTime: \"7:00:00\",\n        endLocalTime: \"20:00:00\",\n        closed: false\n    },\n    {\n        dayOfWeek: \"MON\",\n        startLocalTime: \"7:00:00\",\n        endLocalTime: \"20:00:00\",\n        closed: false\n    },\n    {\n        dayOfWeek: \"TUE\",\n        startLocalTime: \"7:00:00\",\n        endLocalTime: \"20:00:00\",\n        closed: false\n    },\n    {\n        dayOfWeek: \"WED\",\n        startLocalTime: \"7:00:00\",\n        endLocalTime: \"20:00:00\",\n        closed: false\n    },\n    {\n        dayOfWeek: \"THU\",\n        startLocalTime: \"7:00:00\",\n        endLocalTime: \"20:00:00\",\n        closed: false\n    },\n    {\n        dayOfWeek: \"FRI\",\n        startLocalTime: \"7:00:00\",\n        endLocalTime: \"20:00:00\",\n        closed: false\n    },\n    {\n        dayOfWeek: \"SAT\",\n        startLocalTime: \"7:00:00\",\n        endLocalTime: \"20:00:00\",\n        closed: false\n    }\n];\n\nexport const getDatetimeIn12Hours = (datetimeString) =>{\n    const date = new Date(datetimeString);\n    const options = { hour: 'numeric', minute: 'numeric', hour12: true };\n    return  date.toLocaleTimeString('en-US', options);\n}\nexport const isBlobUrl = (url)=> {\n    return url.startsWith('blob:');\n  }","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/CompositionActions.jsx",["740"],"import { useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport menuIcon from \"../../../../img/menu-icon.png\";\nimport veiwDetailIcon from \"../../../../img/view-detail-icon.png\";\nimport defaultComparisonIcon from \"../../../../img/default-comparison-icon.png\";\nimport assignIcon from \"../../../../img/assign-icon.png\";\nimport takeScreenshotIcon from \"../../../../img/tack-screenshot-icon.png\";\nimport edit from \"../../../../img/edit-composition.png\";\nimport deleteIcon from \"../../../../img/delete-icon.png\";\n\nimport { Link } from \"react-router-dom\";\nimport DuplicateComposition from \"../../../modals/duplicateComposition\";\nimport { postComposition } from \"../../../../utils/api\";\nimport ViewDetails from \"../../../modals/layouts/viewDetails\";\nimport PublishMediaModal from \"../../../modals/PublishMediaModal\";\n\nconst CompositionActions = ({\n  composition,\n  mutate,\n  setDeleteModal,\n  setSelected\n}) => {\n  const [duplicateModal, setDuplicateModal] = useState(false);\n  const [viewDetailsModal, setViewDetailsModal] = useState(false);\n  const [showPublishPopUp, setShowPublishPopUp] = useState(false);\n  const createComposition = async (name) => {\n   let setZone = [];\n\n   composition.zones.forEach(zone => {\n   const setContent = [];\n   \n    zone.content.forEach((content)=>{\n      setContent.push(\n        {\n          url: content.url,\n          type: content.type,\n          maintainAspectRatio: content.maintainAspectRatio,\n          fitToScreen: content.fitToScreen,\n          crop: content.crop,\n          duration: content.duration,\n          // createdBy: composition.createdBy,\n        }\n      )\n    })\n\n    const data =   {\n      name: zone.name,\n      zoneId: zone.zoneId,\n      content:  setContent\n    }\n    setZone.push(data)\n    \n    \n   });\n    \n   \n    const data = {\n      name: name,\n      layoutId: composition.layout._id,\n\n      zones: setZone,\n      duration: composition.duration,\n      referenceUrl: composition.referenceUrl,\n    };\n//  console.log(data)\n    await postComposition(data);\n    mutate()\n    setDuplicateModal(false);\n  };\n  return (\n    <>\n      {\" \"}\n      <Dropdown className=\"dropdown-toggle-menu\">\n        <Dropdown.Toggle variant=\"\" className=\"p-0  mb-2\">\n          <span className=\"table-menu-icon\">\n            <img\n              className=\"menu-img img-fluid\"\n              src={menuIcon}\n              alt=\"menu-icon\"\n            />\n          </span>\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item href=\"#\" className=\"dropdown-list-item\" onClick={()=>{setViewDetailsModal(true)}}>\n            <div className=\"d-flex\">\n              <div className=\"dropdown-list-icon\">\n                <img\n                  className=\"dropdown-list-img img-fluid\"\n                  src={veiwDetailIcon}\n                  alt=\"menu-icon\"\n                />\n              </div>\n              <div className=\"dropdown-menu-list\">\n                <span className=\"menu-heading\">View Details</span>\n                <span className=\"menu-description\">\n                  Get to know more about screen info\n                </span>\n              </div>\n            </div>\n          </Dropdown.Item>\n\n          <Dropdown.Item href=\"#\" className=\"dropdown-list-item\" onClick={()=>{\n            setShowPublishPopUp(true)\n          }}>\n            <div className=\"d-flex\">\n              <div className=\"dropdown-list-icon\">\n                <img\n                  className=\"dropdown-list-img img-fluid\"\n                  src={assignIcon}\n                  alt=\"menu-icon\"\n                />\n              </div>\n              <div className=\"dropdown-menu-list\">\n                <span className=\"menu-heading\">Assign Quickplay</span>\n                <span className=\"menu-description\">\n                  Get to know more about screen info\n                </span>\n              </div>\n            </div>\n          </Dropdown.Item>\n          <Dropdown.Item href=\"#\" className=\"dropdown-list-item\">\n            <Link to={`/composition/edit?id=${composition._id}`}>\n              <div className=\"d-flex\">\n                <div className=\"dropdown-list-icon\">\n                  <img\n                    className=\"dropdown-list-img img-fluid\"\n                    src={edit}\n                    alt=\"menu-icon\"\n                  />\n                </div>\n                <div className=\"dropdown-menu-list\">\n                  <span className=\"menu-heading\">Edit</span>\n                  <span className=\"menu-description\">\n                    Make changes to this composition\n                  </span>\n                </div>\n              </div>\n            </Link>\n          </Dropdown.Item>\n          <Dropdown.Item href=\"#\" className=\"dropdown-list-item\">\n            <div\n              className=\"d-flex\"\n              onClick={() => {\n                console.log(\"herer\");\n                setDuplicateModal(true);\n              }}\n            >\n              <div className=\"dropdown-list-icon\">\n                <img\n                  className=\"dropdown-list-img img-fluid\"\n                  src={takeScreenshotIcon}\n                  alt=\"menu-icon\"\n                />\n              </div>\n              <div className=\"dropdown-menu-list\">\n                <span className=\"menu-heading\">Duplicate</span>\n                <span className=\"menu-description\">\n                  Create duplicate of your composition\n                </span>\n              </div>\n            </div>\n          </Dropdown.Item>\n          <Dropdown.Item\n            href=\"#\"\n            className=\"dropdown-list-item\"\n            onClick={() => {\n              setSelected(composition);\n              setDeleteModal(true);\n            }}\n          >\n            <div className=\"d-flex\">\n              <div className=\"dropdown-list-icon\">\n                <img\n                  className=\"dropdown-list-img img-fluid\"\n                  src={deleteIcon}\n                  alt=\"menu-icon\"\n                />\n              </div>\n\n              <div className=\"dropdown-menu-list\">\n                <span className=\"menu-heading\">Delete</span>\n                <span className=\"menu-description\">\n                  Permanently delete this composition\n                </span>\n              </div>\n            </div>\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n      {duplicateModal && (\n        <DuplicateComposition\n          setDuplicateModal={setDuplicateModal}\n          createComposition={createComposition}\n        />\n      )}\n      {viewDetailsModal && (\n        <ViewDetails\n         \n          setViewDetailsModal={setViewDetailsModal}\n          composition={composition}\n        />\n      )}\n      \n      {showPublishPopUp && (\n        <PublishMediaModal\n          selected={composition}\n          setShowPublishPopUp={setShowPublishPopUp}\n          type=\"composition\"\n        />\n      )}\n    </>\n  );\n};\nexport default CompositionActions;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/UpdateModal.jsx",["741","742"],"import { Button, Modal, Row, Col, Badge, Dropdown } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\n\nimport searchIcon from \"../../img/search-location.png\";\n\nconst UpdateModal = ({ showUpdateModal, setUpdateModal }) => {\n  return (\n    <Modal\n      className=\"fade bd-example-modal-lg mt-4 custom-modal windows-modal custom-modal-medium\"\n      show={showUpdateModal}\n      size=\"md\"\n    >\n      <Modal.Header>\n        <Modal.Title className=\"mr-auto\">\n        Update Screen\n        </Modal.Title>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setUpdateModal(false)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n      <Modal.Body>\n      <Row>\n          <Col lg={12} md={12} sm={12} xs={12}>\n            <div className=\"form-group\">\n              <label className=\"update-textfield-label\">Screen Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control input-default form-field\"\n                placeholder=\"Christan’s Windows\"\n              />\n            </div>\n          </Col>\n          <Col lg={12} md={12} sm={12} xs={12}>\n            <div className=\"form-group\">\n              <label className=\"update-textfield-label\">Complete Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control input-default form-field\"\n                placeholder=\"House No. 38-A Tribune colony, Ambala Cantt, Haryana\"\n              />\n            </div>\n          </Col>\n          <Col lg={12} md={12} sm={12} xs={12}>\n            <div className=\"form-group location-field\">\n              <label className=\"update-textfield-label\">Google Location</label>\n              <input\n                type=\"text\"\n                className=\"form-control input-default form-field\"\n                placeholder=\"Haryana\"\n              />\n              <div className=\"search-location\">\n              <img className=\"search-loc-icon\" src={searchIcon} alt=\"search-icon\" />\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Row className=\"w-100 m-0\">\n          <Col lg={12} md={12} sm={12} xs={12} className=\"pl-0 pr-0\">\n            <Button\n              variant=\"\"\n              type=\"button\"\n              className=\"btn btn-primary btn-block primary-btn w-100\"\n              onClick={() => setUpdateModal(false)}\n            >\n             Update Screen\n            </Button>\n          </Col>\n        </Row>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default UpdateModal;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/WindowsModal.jsx",["743","744","745","746"],"import { Button, Modal, Row, Col, Badge, Dropdown } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\n\nimport chrisImg from \"../../img/chris-img.png\";\n\nconst WindowsModal = ({ showWindowsModal, setWindowsModal }) => {\n  return (\n    <Modal\n      className=\"fade bd-example-modal-lg mt-4 custom-modal windows-modal custom-modal-medium\"\n      show={showWindowsModal}\n      size=\"md\"\n    >\n      <Modal.Header>\n        <Modal.Title className=\"mr-auto\">\n        Christan’s Window’s\n        </Modal.Title>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setWindowsModal(false)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n      <Modal.Body>\n<div className=\"chris-imgbox\">\n<img className=\"chris-img img-fluid\" src={chrisImg} alt=\"chris-icon\" />\n\n</div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default WindowsModal;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/QuickPlayModal.jsx",["747","748","749","750"],"import { Button, Modal, Row, Col, Badge, Dropdown } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\nimport { Link } from \"react-router-dom\";\nimport searchIcon from \"../../img/search.png\";\nimport listIcon from \"../../img/list-icon.png\";\nimport pic1 from \"./../../images/profile/small/pic1.jpg\";\nimport downArrow from \"../../img/down-arrow.png\";\n\nconst QuickPlayModal = ({ showQuickPlayModal, setQuickPlayModal }) => {\n  return (\n    <Modal\n      className=\"fade bd-example-modal-lg mt-4 custom-modal quick-modal custom-modal-medium\"\n      show={showQuickPlayModal}\n      size=\"md\"\n    >\n      <Modal.Header>\n        <Modal.Title className=\"mr-auto\">\n          Choose Composition to assign as Quickplay\n        </Modal.Title>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setQuickPlayModal(false)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"search-textfield quickplay-search d-flex flex-wrap align-items-center\">\n          <div className=\"form-group mb-0\">\n            <input\n              type=\"text\"\n              className=\"form-control input-default \"\n              placeholder=\"Search...\"\n            />\n            <img className=\"search-icon\" src={searchIcon} alt=\"search\" />\n          </div>\n          <Button className=\"ml-2 icon-btn\" variant=\"primary\">\n            <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\n          </Button>\n        </div>\n        <div className=\"mb-3 quick-modal-table\">\n          <div className=\"w-100 table-responsive\">\n            <div id=\"example_wrapper\">\n              <table id=\"example\" className=\"display w-100  table custom-table\">\n                <thead>\n                  <tr>\n                    <th>Composition</th>\n                    <th>Date Added</th>\n                    <th>Duration</th>\n                    <th>Associated Schedule</th>\n                    <th>Tags</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>\n                      <span className=\"d-flex align-items-center\">\n                        <img\n                          className=\"rounded mr-2\"\n                          width=\"35\"\n                          src={pic1}\n                          alt=\"\"\n                        />\n                        <span className=\"td-content\">\n                          <strong>My_image_name</strong>\n                          <span>Added by Gauri Batra</span>\n                        </span>\n                      </span>\n                    </td>\n                    <td>\n                      <span className=\"d-flex align-items-center\">\n                        <span className=\"td-content\">\n                          <strong>3 Apr,2023</strong>\n                          <span>05 :30 PM</span>\n                        </span>\n                      </span>\n                    </td>\n                    <td>10 Sec</td>\n                    <td>0</td>\n                    <td style={{ width: \"180px\" }}>\n                      <span className=\"tag-container\">\n                        <span className=\"my-phone-tag text-truncate ml-1 mr-1 mb-1\">\n                          My Phone\n                        </span>\n                      </span>\n\n                      <span className=\"down-arrow\">\n                        <img\n                          className=\"down-arrow-img img-fluid\"\n                          src={downArrow}\n                          alt=\"arrow\"\n                        />\n                      </span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <span className=\"d-flex align-items-center\">\n                        <img\n                          className=\"rounded mr-2\"\n                          width=\"35\"\n                          src={pic1}\n                          alt=\"\"\n                        />\n                        <span className=\"td-content\">\n                          <strong>My_image_name</strong>\n                          <span>Added by Gauri Batra</span>\n                        </span>\n                      </span>\n                    </td>\n                    <td>\n                      <span className=\"d-flex align-items-center\">\n                        <span className=\"td-content\">\n                          <strong>3 Apr,2023</strong>\n                          <span>05 :30 PM</span>\n                        </span>\n                      </span>\n                    </td>\n                    <td>10 Sec</td>\n                    <td>0</td>\n                    <td style={{ width: \"180px\" }}>\n                      <span className=\"tag-container\">\n                        <span className=\"my-phone-tag text-truncate ml-1 mr-1 mb-1\">\n                          My Phone\n                        </span>\n                      </span>\n\n                      <span className=\"down-arrow\">\n                        <img\n                          className=\"down-arrow-img img-fluid\"\n                          src={downArrow}\n                          alt=\"arrow\"\n                        />\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <Row className=\"w-100 m-0\">\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n            <Button\n              className=\"cancel-btn w-100\"\n              variant=\"outline-light\"\n              onClick={() => setQuickPlayModal(false)}\n            >\n              Cancel\n            </Button>\n          </Col>\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n            <Button\n              variant=\"\"\n              type=\"button\"\n              className=\"btn btn-primary btn-block primary-btn\"\n              onClick={() => setQuickPlayModal(false)}\n            >\n              Assign\n            </Button>\n          </Col>\n        </Row>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default QuickPlayModal;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/DeleteConfirmation.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddNewTagModal.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/Common.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/ChatBox.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/FilterModal.jsx",["751","752","753","754"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\nimport { Link } from \"react-router-dom\";\n\nconst FilterModal = ({ showFilterModal, setFilterModal }) => {\n  return (\n    <Modal\n      className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium\"\n      show={showFilterModal}\n      size=\"md\"\n    >\n      <Modal.Header>\n        <Modal.Title className=\"mr-auto\">Filter</Modal.Title>\n        <span className=\"clear-filter-link\">Clear Filter</span>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setFilterModal(false)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"filter-row mb-3\">\n          <h6>Show</h6>\n          <div className=\"d-flex flex-wrap\">\n            <div className=\"custom-control custom-checkbox common-checkbox mr-3\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id=\"Landscape\"\n                required\n              />\n              <label className=\"custom-control-label\" htmlFor=\"Landscape\">\n                Landscape\n              </label>\n            </div>\n            <div className=\"custom-control custom-checkbox common-checkbox mr-3\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id=\"Landscape1\"\n                required\n              />\n              <label className=\"custom-control-label\" htmlFor=\"Landscape1\">\n                Landscape\n              </label>\n            </div>\n            <div className=\"custom-control custom-checkbox common-checkbox mr-3\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id=\"Landscape2\"\n                required\n              />\n              <label className=\"custom-control-label\" htmlFor=\"Landscape2\">\n                Landscape\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className=\"filter-row mb-3\">\n          <h6>Tags</h6>\n          <div className=\"d-flex flex-wrap\">\n            <Badge className=\"badge-common-light mr-2\" variant=\"outline-light\">\n              Test Devices\n            </Badge>\n            <Badge className=\"badge-common-light mr-2\" variant=\"outline-light\">\n              Test Devices\n            </Badge>\n            <Badge className=\"badge-common-light mr-2\" variant=\"outline-light\">\n              Test Devices\n            </Badge>\n          </div>\n        </div>\n        <div className=\"filter-row mb-3\">\n          <h6>Groups</h6>\n          <div className=\"d-flex flex-wrap\">\n            <Badge className=\"badge-common-light mr-2\" variant=\"outline-light\">\n              Test Devices\n            </Badge>\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"\"\n          type=\"button\"\n          className=\"btn btn-primary btn-block primary-btn\"\n          onClick={() => setFilterModal(false)}\n        >\n          Apply\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default FilterModal;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/defaultComposition.jsx",["755"],"import React from \"react\";\nimport {  Col, } from \"react-bootstrap\";\nimport emptyMediaImg from \"../../../images/card/1.png\";\nimport {BASE_URL}  from \"../../../utils/api\"\n\nconst DefaultComposition = () => {\n  const defaultMediaUrl = `${BASE_URL}/default/file_1681896290177.png`;\n  return (\n    <>\n      <div className=\"row settings-default\">\n        <Col xl=\"6\">\n          <div className=\"default-composition-preview\">\n            <div className=\"thumbnail\">\n              <img className=\"imgContent\" src={defaultMediaUrl} alt=\"Card cap\" />\n            </div>\n          </div>\n        </Col>\n        <Col xl=\"6\">\n          <div className=\"mb-4\">\n            <h4 className=\"card-title card-intro-title\">\n              Organisation default composition\n            </h4>\n            <p>\n              The composition will be applied to all newly added displays in the\n              organization\n            </p>\n            <p className=\"font-weight-bold\">\n            Default Composition:\n            Screenshot 2 - Composition \n            <span className='btn-icon-right text-info'>\n                    <i className='fa fa-pencil' />\n                  </span>\n            </p>\n            <p className=\"font-weight-bold\">\n            Duration:\n            10 seconds\n            </p>\n            \n          </div>\n        </Col>\n      </div>\n    </>\n  );\n};\n\nexport default DefaultComposition;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/UploadMediaFileModal.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/Header.js",["756","757","758"],"import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n/// Scroll\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\n/// Image\nimport profile from \"../../../images/profile/pic1.jpg\";\nimport avatar from \"../../../images/avatar/1.jpg\";\nimport { Dropdown } from \"react-bootstrap\";\nimport LogoutPage from './Logout';\n\nconst Header = ({ onNote }) => {\n  const onFullScreen = () => {\n    var elem = document.documentElement;\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.webkitRequestFullscreen) {\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      elem.msRequestFullscreen();\n    }\n  };\n  return (\n    <div className=\"header header-custom\" style={{ zIndex: \"11\" }}>\n      <div className=\"header-content\">\n        <nav className=\"navbar navbar-expand\">\n          <div className=\"collapse navbar-collapse justify-content-between\">\n            <div className=\"header-left\">\n\n            </div>\n            <ul className=\"navbar-nav header-right\">\n\n              <Dropdown as=\"li\" className=\"nav-item dropdown header-profile\">\n                <Dropdown.Toggle\n                  variant=\"\"\n                  as=\"a\"\n                  className=\"i-false c-pointer nav-link\"\n                  to=\"\"\n                  role=\"button\"\n                  data-toggle=\"dropdown\"\n                >\n                  <div className=\"header-info\">\n                    <span>\n                      Hello, <strong>Samuel</strong>\n                    </span>\n                  </div>\n                  <img src={profile} width={20} alt=\"\" />\n                </Dropdown.Toggle>\n                <Dropdown.Menu\n                  align=\"right\"\n                  className=\"dropdown-menu dropdown-menu-right\"\n                >\n                  <Link to=\"/app-profile\" className=\"dropdown-item ai-icon\">\n                    <svg\n                      id=\"icon-user1\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"text-primary\"\n                      width={18}\n                      height={18}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                      <circle cx={12} cy={7} r={4} />\n                    </svg>\n                    <span className=\"ml-2\">Profile </span>\n                  </Link>\n                  <Link to=\"/email-inbox\" className=\"dropdown-item ai-icon\">\n                    <svg\n                      id=\"icon-inbox\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"text-success\"\n                      width={18}\n                      height={18}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\" />\n                      <polyline points=\"22,6 12,13 2,6\" />\n                    </svg>\n                    <span className=\"ml-2\">Inbox </span>\n                  </Link>\n                  <LogoutPage />\n                </Dropdown.Menu>\n              </Dropdown>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/SideBar.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/NavHader.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/compositionPlayer.jsx",["759"],"import React, { useEffect, useState, useRef } from \"react\";\n\nimport WebVideoPlayer from \"./WebVideoPlayer\";\nimport {  BASE_URL } from \"../../../utils/api\";\nconst CompositionPlayer = ({ content, referenceUrl }) => {\n\n  const [currentIndex, setCurrentIndex] = useState(0);\n  console.log(currentIndex, \"CompositionPlayer .jsx\")\n  const timeoutRef = useRef(\"\");\n  useEffect(() => {\n    \n    if (content[currentIndex]) {\n      console.log(content[currentIndex], \"content[currentIndex] inside if in CompositionPlayer .jsx\")\n     \n      const timeoutDuration = content[currentIndex].duration * 1000;\n      timeoutRef.current = setTimeout(() => {\n        if(currentIndex === (content.length -1) ){\n          setCurrentIndex(0);\n        } else {\n          setCurrentIndex((currentIndex) => currentIndex + 1);\n        }\n      }, timeoutDuration);\n    } \n    return () => clearTimeout(timeoutRef.current);\n  }, [currentIndex]);\nconsole.log(currentIndex, content.length)\n  const viewImage = content[currentIndex].fitToScreen\n    ? \"fitScreen\"\n    : content[currentIndex].crop\n    ? \"crop\"\n    : \"aspectRation\";\n\n  return (\n    <>\n      {\" \"}\n      {content[currentIndex] && content[currentIndex].type === \"image\" && (\n        <div className=\"basic-list-group image-preview-container media-content\">\n          <img\n            className=\"webplayer-preview-img\"\n            style={{\n              objectFit: `${viewImage === \"fitScreen\" ? \"fill\" : \"contain\"}`,\n            }}\n            src={`${BASE_URL}${referenceUrl[currentIndex]}`}\n            alt=\"media-img\"\n          />\n        </div>\n      )}\n      {content[currentIndex] && content[currentIndex].type === \"video\" && (\n        <div className={`basic-list-group video-container media-content ${viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"}`}>\n          <WebVideoPlayer src={`${BASE_URL}${referenceUrl[currentIndex]}`}></WebVideoPlayer>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default CompositionPlayer;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/WebVideoPlayer.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/media/listMedia.jsx",["760"],"import React, { useState } from \"react\";\nimport { Table, Dropdown } from \"react-bootstrap\";\nimport AddNewTagModal from \"../../modals/AddNewTagModal\";\nimport downArrow from \"../../../img/down-arrow.png\";\nimport menuIcon from \"../../../img/menu-icon.png\";\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\nimport emptyMediaImg from \"../../../img/addmedia-empty-img.png\";\nimport nameAvatar from \"../../../img/assets-avatar-img.png\";\nimport deleteIcon from \"../../../img/delete-icon.png\";\nimport {\n  getDatetimeIn12Hours,\n  humanReadableFormattedDateString,\n} from \"../../../utils/UtilsService\";\nimport DeleteConfirmation from \"../../modals/DeleteConfirmation\";\nimport { deleteMedia, BASE_URL } from \"../../../utils/api\";\nimport PublishMediaModal from \"../../modals/PublishMediaModal\";\n\nconst ListMedia = ({ allMedia,callAllMediaApi }) => {\n  const [showNewTagModal, setNewTagModal] = useState(false);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [selectedMedia, setSelectedMedia] = useState(\"\");\n  const [showPublishPopUp, setShowPublishPopUp] = useState(false);\n  \n  // use effect\n\n\n  const handleDelete = async () => {\n    setDeleteModal(false)\n    await deleteMedia(selectedMedia._id)\n    callAllMediaApi()\n   };\n\n   const handlePublishcOpen = (media)=>{\n    setShowPublishPopUp(media);\n   }\n\n\n\n const parseMeta = (media) => {\n  const meta = JSON.parse(media.properties);\n  return (\n    <span className=\"td-content\">\n      {media?.type === \"image\" && <strong>{meta.height} x {meta.width}</strong>}\n      {media?.type === \"video\" && meta?.length && (\n        <strong>{parseInt((meta.length / 60)*100)/100} Min.</strong>\n      )}\n      {meta?.size && <span>{meta.size} MB</span>}\n    </span>\n  );\n};\n\nconst videoMetaDuration = (media) => {\n  const properties = JSON.parse(media?.properties);\n  if (properties && properties.length) {\n    return (properties.length.toFixed(0) / 60).toFixed(0);\n  }\n  return null;\n};\n  return (\n    <>\n      {allMedia && allMedia.length !== 0 ? (\n        <Table responsive className=\"custom-table\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Uploaded Date</th>\n              <th>Properties</th>\n              <th>Tags</th>\n              <th>More</th>\n            </tr>\n          </thead>\n          <tbody>\n            {allMedia.map((media) => {\n              return (\n                <tr key={media._id}>\n                  <td>\n                    <span className=\"td-content d-flex name-td-content\">\n                      <span className={`name-img mr-2  ${media?.type === \"video\" && \"videotableName\"}`}>\n                      {media?.type === \"image\" && <img\n                          className=\"media-img img-fluid\"\n                          src={`${BASE_URL}${media?.title}`}\n                          alt=\"media-img\"\n                        />}\n                         {media?.type === \"video\" && videoMetaDuration(media)}\n                      </span>\n                      <span className=\"name-content d-flex flex-column flex-grow-1\">\n                        <strong>{media.title.split(\"/\")[media.title.split(\"/\").length -1]}</strong>\n                        <span>{media.createdBy.name}</span>\n                      </span>\n                    </span>\n                  </td>\n                  <td>{media.type.slice(0, 1).toUpperCase() + media.type.slice(1)}</td>\n                  <td>\n                    <span className=\"td-content\">\n                      <strong>\n                        {humanReadableFormattedDateString(media.createdAt)}\n                      </strong>\n                      <span>{getDatetimeIn12Hours(media.createdAt)}</span>\n                    </span>\n                  </td>\n                  <td>\n                    {parseMeta(media)}\n                  </td>\n                  <td>\n                    {media.tags.map((tag) => {\n                      return <span className=\"my-phone-tag text-truncate ml-1\">{tag}</span>;\n                    })}\n                    <span\n                      className=\"down-arrow\"\n                      onClick={() => {\n                        setSelectedMedia(media)\n                        setNewTagModal(true);\n                      }}\n                    >\n                      <img\n                        className=\"down-arrow-img img-fluid\"\n                        src={downArrow}\n                        alt=\"arrow\"\n                      />\n                    </span>\n                  </td>\n                  <td>\n                    <Dropdown className=\"dropdown-toggle-menu\">\n                      <Dropdown.Toggle variant=\"\" className=\"p-0  mb-2\">\n                        <span className=\"table-menu-icon\">\n                          <img\n                            className=\"menu-img img-fluid\"\n                            src={menuIcon}\n                            alt=\"menu-icon\"\n                          />\n                        </span>\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                        <Dropdown.Item href=\"#\" className=\"dropdown-list-item\">\n                          <div className=\"d-flex\" onClick={()=>{\n                                handlePublishcOpen(media)\n                              }}>\n                            <div className=\"dropdown-list-icon\">\n                              <img\n                                className=\"dropdown-list-img img-fluid\"\n                                src={defaultComparisonIcon}\n                                alt=\"menu-icon\"\n                              />\n                            </div>\n                            <div className=\"dropdown-menu-list\">\n                              <span className=\"menu-heading\" >\n                                Publish on Screen\n                              </span>\n                              <span className=\"menu-description\">\n                                Get to know more about screen info\n                              </span>\n                            </div>\n                          </div>\n                        </Dropdown.Item>\n                        <Dropdown.Item href=\"#\" className=\"dropdown-list-item\" onClick={()=>{\n                              setSelectedMedia(media)\n                              setDeleteModal(true)\n                            }}>\n                          <div className=\"d-flex\">\n                            <div className=\"dropdown-list-icon\" >\n                              <img\n                                className=\"dropdown-list-img img-fluid\"\n                                src={deleteIcon}\n                                alt=\"menu-icon\"\n                              />\n                            </div>\n                            <div className=\"dropdown-menu-list\">\n                              <span className=\"menu-heading\">Delete</span>\n                              <span className=\"menu-description\">\n                                Get to know more about screen info\n                              </span>\n                            </div>\n                          </div>\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      ) : (\n        <div className=\"empty-media text-center\">\n          <div class=\"empty-media-img mx-auto\">\n            <img\n              className=\"media-img img-fluid\"\n              src={emptyMediaImg}\n              alt=\"media-img\"\n            />\n          </div>\n          <h3>Add Media</h3>\n          <p>\n            Upload your favourite images and videos from the local storage\n            <br /> of your device\n          </p>\n        </div>\n      )}\n\n      {showNewTagModal && (\n        <AddNewTagModal\n          selected={selectedMedia}\n          setNewTagModal={setNewTagModal}\n          \n        />\n      )}\n      {showPublishPopUp && (\n        <PublishMediaModal\n          selected={showPublishPopUp}\n          setShowPublishPopUp={setShowPublishPopUp}\n          type=\"media\"\n        />\n      )}\n      {deleteModal && <DeleteConfirmation setDeleteModal={setDeleteModal} callbackFunction={handleDelete} text=\"Are you sure you want to delete?\" yes={\"Yes Deactivate\"}/>}\n    </>\n  );\n};\nexport default ListMedia;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddScreenModal.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/listScreens.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/PublishMediaModal.jsx",["761"],"import { Button, Modal, Row, Col, Badge, Table } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport { useEffect, useState } from \"react\";\nimport { getAllScreens, publishMedia } from \"../../utils/api\";\nimport TableLoader from \"../components/TableLoader\";\nimport '../components/Table.css';\n// import tagCloseIcon from \"../../img/tag-close-icon.png\";\n\nconst PublishMediaModal = ({ setShowPublishPopUp, selected, type }) => {\n  const [allScreens, setAllScreens] = useState(\"\");\n  const [checkedItems, setCheckedItems] = useState({});\n  const [checkedValues, setCheckedValues] = useState([]);\n  const [published, setPublished] = useState(false);\n  const [loading, setLoading] = useState(false);\n  // use effect\n  useEffect(() => {\n    callAllScreenApi();\n  }, []);\n\n  const callAllScreenApi = async () => {\n    setLoading(true);\n    const list = await getAllScreens();\n    setLoading(false);\n    setAllScreens(list);\n  };\n\n  const handleCheckboxChange = (event) => {\n    const newCheckedItems = {\n      ...checkedItems,\n      [event.target.name]: event.target.checked,\n    };\n    const selectedScreens = [];\n    for (const key in newCheckedItems) {\n      if (newCheckedItems[key] === true) {\n        selectedScreens.push(key);\n      }\n    }\n    setCheckedValues(selectedScreens);\n    setCheckedItems(newCheckedItems);\n  };\n\n  const handleSelectAllChange = (event) => {\n    const newCheckedItems = {};\n    allScreens.forEach((item) => {\n      newCheckedItems[item._id] = event.target.checked;\n    });\n    const selectedScreens = [];\n    for (const key in newCheckedItems) {\n      if (newCheckedItems[key] === true) {\n        selectedScreens.push(key);\n      }\n    }\n    setCheckedValues(selectedScreens);\n    setCheckedItems(newCheckedItems);\n  };\n\n  const handleSubmit = async () => {\n   await publishMedia({\n      id: selected._id,\n      screenIds: checkedValues,\n      duration: 600,\n      type:type\n    });\n    setPublished(true);\n    // setShowPublishPopUp(false);\n  };\n  return (\n<>\n    \n      <Modal\n      className={`fade bd-example-modal-lg mt-4 custom-modal ${\n        published ? \"custom-modal-medium\" : \"custom-modal-large\"\n      }`}\n      show={true}\n      size=\"md\"\n    >\n      <Modal.Header>\n        <Modal.Title>{type===\"media\" ? \"Publish Media\" : \"Assign Quickplay\"}</Modal.Title>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setShowPublishPopUp(false)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n\n      {published && <Modal.Body><div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}><h3>Media Published</h3></div></Modal.Body>}\n      {!published && (\n        <Modal.Body>\n          <Table responsive>\n            <thead>\n              <tr>\n                <th className=\"width50\">\n                  <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"custom-control-input\"\n                      id=\"checkbox1_exam_all\"\n                      onChange={handleSelectAllChange}\n                      required=\"\"\n                    />\n                    <label\n                      className=\"custom-control-label\"\n                      htmlFor=\"checkbox1_exam_all\"\n                    ></label>\n                  </div>\n                </th>\n                <th>Screen</th>\n                <th>Last Seen</th>\n                <th>Default Composition</th>\n                <th>Current Schedule</th>\n              </tr>\n            </thead>\n            {loading  ? (\n          <TableLoader colSpan={5}/>\n        ) : (\n            <tbody>\n              {allScreens !== \"\" &&\n                allScreens.map((screen) => {\n                  return (\n                    <tr>\n                      <td>\n                        <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"custom-control-input\"\n                            id={screen._id}\n                            name={screen._id}\n                            checked={checkedItems[screen._id]}\n                            onChange={handleCheckboxChange}\n                          />\n                          <label\n                            className=\"custom-control-label\"\n                            htmlFor={screen._id}\n                          ></label>\n                        </div>\n                      </td>\n\n                      <td>\n                        <span className=\"td-content\">\n                          <strong>{screen.name}</strong>\n                          <span>{screen.screenLocation}</span>\n                        </span>\n                      </td>\n                      <td>\n                        <span className=\"d-flex align-items-center\">\n                          <span className=\"status status-green\"></span>\n                          <span className=\"td-content\">\n                            <strong>{screen.name}</strong>\n                            <span>{screen.screenLocation}</span>\n                          </span>\n                        </span>\n                      </td>\n                      <td>Default Compo. </td>\n                      <td>No Schedule</td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n            )}\n          </Table>\n        </Modal.Body>\n      )}\n\n      <Modal.Footer>\n        {!published && (\n          <Row className=\"w-100 m-0\">\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n              <Button className=\"cancel-btn w-100\" variant=\"outline-light\">\n                Cancel\n              </Button>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n              <Button\n                disabled={checkedValues.length === 0}\n                variant=\"\"\n                type=\"button\"\n                className=\"btn btn-primary btn-block primary-btn\"\n                onClick={handleSubmit}\n              >\n                Publish\n              </Button>\n            </Col>\n          </Row>\n        )}\n      </Modal.Footer>\n    </Modal>\n      \n\n    </>\n  );\n};\n\nexport default PublishMediaModal;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/Chat.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/Alerts.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/Notes.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/layouts/viewDetails.jsx",["762"],"import { Button, Modal, Row, Col, Table } from \"react-bootstrap\";\nimport cancelIcon from \"../../../img/cancel-icon.png\";\n\nimport Rectangle from \"../../../img/Rectangle.png\";\n\nimport \"../../components/Table.css\";\nimport layoutSelected from \"../../../img/layout-select-img.png\";\n// import tagCloseIcon from \"../../img/tag-close-icon.png\";\nimport { BASE_URL } from \"../../../utils/api\";\nimport { Link } from \"react-router-dom\";\nconst ViewDetails = ({ setViewDetailsModal, composition }) => {\n\n  return (\n    <>\n      <Modal\n        className={`fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium`}\n        show={true}\n        size=\"md\"\n      >\n        <Modal.Header>\n          <Modal.Title>Composition Details</Modal.Title>\n          <Button\n            variant=\"\"\n            className=\"close\"\n            onClick={() => setViewDetailsModal(false)}\n          >\n            <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n          </Button>\n        </Modal.Header>\n\n        <Modal.Body>\n          <div>\n            <div className=\" d-flex align-items-center justify-content-center flex-column mx-auto\">\n              <img className=\"\" src={Rectangle} alt=\"upload-img\" />\n            </div>\n            <div className=\"d-flex align-items-center justify-content-center flex-column mx-auto\">\n              Duration : {composition.duration} sec\n            </div>\n            <div className=\"d-flex align-items-center justify-content-center flex-column mx-auto\">\n              {composition.layout.zones.map((zone) => {\n                return (\n                  <span variant=\"\" type=\"button\" className=\" zoneName\">\n                    {zone.name}\n                  </span>\n                );\n              })}\n            </div>\n            <hr className=\"new1\" />\n            <Table responsive className=\"custom-table mt-3\">\n              <tbody>\n              {composition.zones[0].content.map((content, index) => {\n                return (\n                    <tr>\n                    <td>{index + 1}.</td>\n                    <td>\n                    <span className=\"td-content d-flex name-td-content\">\n                      <span className={`name-img mr-2  ${content.type === \"video\" && \"videotableName\"}`}>\n                      {content.type === \"image\" && <img\n                          className=\"media-img img-fluid\"\n                          src={`${BASE_URL}${content.url}`}\n                          alt=\"media-img\"\n                        />}\n                         {content.type === \"video\" && content?.duration.toFixed(0)/60}\n                      </span>\n                      <span className=\"name-content d-flex flex-column flex-grow-1\">\n                        <strong>{content.url.split(\"/\")[content.url.split(\"/\").length -1]}</strong>\n                        {/* <span>{content.createdBy}</span> */}\n                      </span>\n                    </span>\n                  </td>\n\n                  <td>\n                    <span className=\"my-phone-tag  ml-1\">{(content?.duration).toFixed(0)} Sec</span>\n                  </td>\n                </tr>\n                )\n              })}\n\n              </tbody>\n            </Table>\n          </div>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Row className=\"w-100 m-0\">\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n              <Button\n                className=\"cancel-btn w-100\"\n                variant=\"outline-light\"\n                onClick={() => {\n                  setViewDetailsModal(false);\n                }}\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n            <Link to={`/composition/edit?id=${composition._id}`}>\n            <Button\n                variant=\"\"\n                type=\"button\"\n                className=\"btn btn-primary btn-block primary-btn\"\n              >\n                Edit Details\n              </Button>\n            </Link>\n              \n            </Col>\n          </Row>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ViewDetails;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/saveCompositionName.jsx",["763","764"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\n\nconst SaveCompositionName = ({\n  setModalState,\n  saveComposition,\n  name,\n  setName,\n}) => {\n  return (\n    <Modal\n      className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium\"\n      show={true}\n      size=\"md\"\n    >\n      <Modal.Header>\n        <Modal.Title>Save Composition</Modal.Title>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setModalState(false)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"add-screen-paragraph\">\n          <p>Give your composition a name.</p>\n        </div>\n\n        <Row>\n          <Col lg={12} md={12} sm={12} xs={12}>\n            <div className=\"form-group\">\n              <input\n                value={name}\n                onChange={(event) => {\n                  setName(event.target.value);\n                }}\n                type=\"text\"\n                className=\"form-control input-default form-field\"\n                placeholder=\"Enter Name\"\n              />\n            </div>\n          </Col>\n        </Row>\n      </Modal.Body>\n      <Modal.Footer>\n        <Row className=\"w-100 m-0\">\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n            <Button\n              className=\"cancel-btn w-100\"\n              variant=\"outline-light\"\n              onClick={() => setModalState(false)}\n            >\n              Cancel\n            </Button>\n          </Col>\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n            <Button\n              variant=\"\"\n              type=\"button\"\n              className=\"btn btn-primary btn-block primary-btn\"\n              onClick={() =>{\n                if(name.length){\n                  saveComposition()\n                }\n              }}\n            >\n              Save\n            </Button>\n          </Col>\n        </Row>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default SaveCompositionName;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/Logout.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/previewComposition.jsx",["765"],"import { Button, Modal } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport { useEffect, useRef, useState } from \"react\";\nimport WebVideoPlayer from \"../components/web-player/WebVideoPlayer\";\nimport { BASE_URL } from \"../../utils/api\";\nimport { isBlobUrl } from \"../../utils/UtilsService\";\nconst PreviewComposition = ({\n  setShowPreview,\n  content,\n  layout,\n  referenceUrl,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const timeoutRef = useRef(\"\");\n  const divRef = useRef(null);\n  useEffect(() => {\n    if (content[currentIndex]) {\n      const timeoutDuration = content[currentIndex].duration * 1000;\n      timeoutRef.current = setTimeout(() => {\n        if(currentIndex === (content.length -1) ){\n          setCurrentIndex(0);\n        } else {\n          setCurrentIndex((currentIndex) => currentIndex + 1);\n        }\n      }, timeoutDuration);\n    } \n    return () => clearTimeout(timeoutRef.current);\n  }, [currentIndex]);\n\n  const onFullScreen = () => {\n    const element = document.getElementsByClassName(\"custom-modal-preview\")[0]\n    if (element) {\n      // divRef.current.requestFullscreen();\n      if (element.requestFullscreen) {\n        element.requestFullscreen();\n      } else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n      } else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n      }\n    }\n  };\n\n  const viewImage = content[currentIndex].fitToScreen\n    ? \"fitScreen\"\n    : content[currentIndex].crop\n    ? \"crop\"\n    : \"aspectRation\";\n  const url = isBlobUrl(referenceUrl[currentIndex])\n    ? referenceUrl[currentIndex]\n    : `${BASE_URL}${referenceUrl[currentIndex]}`;\n\n\n  return (\n    <Modal\n      className={`fade bd-example-modal-lg mt-4 custom-modal custom-modal-large custom-modal-preview ${layout.screenType}-view`}\n      show={true}\n      size=\"xl\"\n    >\n      <Modal.Header>\n        <Modal.Title className=\"mr-auto\">Preview</Modal.Title>\n\n        <Button\n          variant=\"\"\n          className=\"close \"\n          onClick={() => onFullScreen()}\n        >\n          <i class=\"fa fa-expand fullscreenbtn\"></i>\n        </Button>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setShowPreview(false)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n\n\n      </Modal.Header>\n      <Modal.Body ref={divRef}>\n        {content[currentIndex] && content[currentIndex].type === \"image\" && (\n          <div className=\"basic-list-group image-preview-container media-content\">\n            <img\n              className=\"webplayer-preview-img\"\n              style={{\n                objectFit: `${viewImage === \"fitScreen\" ? \"fill\" : \"contain\"}`,\n              }}\n              src={url}\n              alt=\"media-img\"\n            />\n          </div>\n        )}\n        {content[currentIndex] && content[currentIndex].type === \"video\" && (\n          <div\n            className={`basic-list-group video-container media-content ${viewImage} ${\n              viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\n            }`}\n          >\n            <WebVideoPlayer src={url}></WebVideoPlayer>\n          </div>\n        )}\n      </Modal.Body>\n      <Modal.Footer></Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default PreviewComposition;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/ZoneInfoTable.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/CompositionTable.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/media/fileUploadWithPreview.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/tagInputField.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/MsgBox.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/duplicateComposition.jsx",["766","767"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\nimport { useState } from \"react\";\n\nconst DuplicateComposition = ({\n  setDuplicateModal,\n  createComposition,\n}) => {\n  const [name, setName] = useState(\"\");\n  return (\n    \n    <Modal\n      className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium\"\n      show={true}\n      size=\"md\"\n    >\n      <Modal.Header>\n        <Modal.Title>Duplicate</Modal.Title>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setDuplicateModal(false)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"add-screen-paragraph\">\n          <p>The Composition will be copied with all it's proporties. Just change the contents and play.</p>\n        </div>\n\n        <Row>\n        <Col lg={12} md={12} sm={12} xs={12}>\n            <div className=\"form-group\" style={{color: \"#1A1A1A\", fontWeight:\"700\"}}>\n            New Composition Name\n            </div>\n          </Col>\n          <Col lg={12} md={12} sm={12} xs={12}>\n            <div className=\"form-group\">\n              <input\n                value={name}\n                onChange={(event) => {\n                  setName(event.target.value);\n                }}\n                type=\"text\"\n                className=\"form-control input-default form-field\"\n                placeholder=\"Enter Name for new copy\"\n              />\n            </div>\n          </Col>\n        </Row>\n      </Modal.Body>\n      <Modal.Footer>\n        <Row className=\"w-100 m-0\">\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n            <Button\n              className=\"cancel-btn w-100\"\n              variant=\"outline-light\"\n              onClick={() => setDuplicateModal(false)}\n            >\n              Cancel\n            </Button>\n          </Col>\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n            <Button\n              variant=\"\"\n              type=\"button\"\n              className=\"btn btn-primary btn-block primary-btn\"\n              onClick={() =>{\n                if(name.length){\n                  createComposition(name)\n                }\n              }}\n            >\n              Confirm\n            </Button>\n          </Col>\n        </Row>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default DuplicateComposition;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/TableLoader.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/editSelectedComposition.jsx",["768","769","770"],"import { useCallback, useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport WebVideoPlayer from \"../components/web-player/WebVideoPlayer\";\nimport { BASE_URL } from \"../../utils/api\";\nimport ImageCroper from \"../components/cropImage\";\nimport getCroppedImg from \"../components/cropImage/cropImage\";\nimport VideoThumbnail from \"react-video-thumbnail\";\nconst EditSelectedComposition = ({\n  composition,\n  setEditSelected,\n  updateViewType,\n}) => {\n  const getDefault = composition.fitToScreen\n    ? \"fitScreen\"\n    : composition.crop\n    ? \"crop\"\n    : \"aspectRation\";\n  const [viewImage, setViewImage] = useState(getDefault);\n  const [isLoading, setIsLoading] = useState(false);\n  const [zoom, setZoom] = useState(\n    composition.crop ? composition.crop.zoom : 1\n  );\n\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(\n    composition.crop ? composition.crop : null\n  );\n  const handleUpload = async () => {\n    const data = {\n      ...croppedAreaPixels,\n      zoom: zoom,\n    };\n    let ImgUrl = \"\";\n    if (viewImage === \"crop\") {\n      const getData = await getCroppedImg(\n        `${BASE_URL}/vendor/display/mediaFile?path=${composition.url}`,\n        croppedAreaPixels\n      );\n      ImgUrl = getData;\n    } else {\n      ImgUrl = composition.url;\n    }\n\n    updateViewType(data, viewImage, ImgUrl);\n    setEditSelected(null);\n  };\n\n  const handleOptionChange = (e) => {\n    setViewImage(e.target.value);\n  };\n\n  return (\n    <Modal\n      className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-large custom-modal-preview\"\n      show={true}\n      size=\"xl\"\n    >\n      <Modal.Header>\n        <Modal.Title className=\"mr-auto\">Preview</Modal.Title>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setEditSelected(null)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"custom-container\">\n          <div className=\"form-check\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"viewImage\"\n              value=\"fitScreen\"\n              id=\"fitScreen\"\n              onChange={handleOptionChange}\n              defaultChecked={viewImage === \"fitScreen\"}\n            />\n            <label className=\"form-check-label\" htmlFor=\"fitScreen\">\n              Fit to Screen\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"viewImage\"\n              value=\"aspectRation\"\n              id=\"aspectRation\"\n              onChange={handleOptionChange}\n              defaultChecked={viewImage === \"aspectRation\"}\n            />\n            <label className=\"form-check-label\" htmlFor=\"aspectRation\">\n              Maintain Aspect Ratio\n            </label>\n          </div>\n          {composition.type !== \"video\" && (\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"viewImage\"\n                value=\"crop\"\n                id=\"crop\"\n                onChange={handleOptionChange}\n                defaultChecked={viewImage === \"crop\"}\n              />\n              <label className=\"form-check-label\" htmlFor=\"crop\">\n                Crop\n              </label>\n            </div>\n          )}\n        </div>\n        {composition && composition.type === \"image\" && (\n          <>\n            {\" \"}\n            <div\n              className=\"basic-list-group image-preview-container media-content image-preview-editable\"\n              style={{ border: \"1px solid\", margin: \"1rem\" }}\n            >\n              {viewImage === \"crop\" && (\n                <ImageCroper\n                  imgSrc={`${composition.url}`}\n                  zoom={zoom}\n                  setZoom={setZoom}\n                  croppedAreaPixels={croppedAreaPixels}\n                  setCroppedAreaPixels={setCroppedAreaPixels}\n                />\n              )}\n              {viewImage !== \"crop\" && (\n                <img\n                  className=\"webplayer-preview-img\"\n                  style={{\n                    objectFit: `${\n                      viewImage === \"fitScreen\" ? \"fill\" : \"contain\"\n                    }`,\n                  }}\n                  src={`${BASE_URL}${composition.url}`}\n                  alt=\"media-img\"\n                />\n              )}\n            </div>{\" \"}\n            {viewImage === \"crop\" && ( <div className=\"controls\">\n              <input\n                type=\"range\"\n                value={zoom}\n                min={1}\n                max={3}\n                step={0.1}\n                aria-labelledby=\"Zoom\"\n                onChange={(e) => {\n                  setZoom(e.target.value);\n                }}\n                className=\"zoom-range\"\n              />\n            </div>)}\n          </>\n        )}\n        {composition && composition.type === \"video\" && (\n          <div\n            className={`basic-list-group image-preview-container media-content image-preview-editable ${\n              viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\n            }`}\n            style={{ border: \"1px solid\", margin: \"1rem\" }}\n          >\n            <VideoThumbnail\n              videoUrl={`${BASE_URL}/vendor/display/mediaFile?path=${composition.url}`}\n              thumbnailHandler={(thumbnail) => console.log(thumbnail)}\n              width={1280}\n              height={720}\n            />\n          </div>\n        )}\n      </Modal.Body>\n      <Modal.Footer>\n        <div className=\"loader-button-container\">\n          <Button\n            variant=\"\"\n            type=\"button\"\n            disabled={isLoading}\n            className={`btn btn-primary btn-block primary-btn`}\n            onClick={() => handleUpload()}\n          >\n            {isLoading ? <div className=\"loader\"></div> : \"Apply\"}\n          </Button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default EditSelectedComposition;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/cropImage/cropImage.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/cropImage/index.jsx",["771","772","773"],"import React, { useState, useCallback } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Cropper from \"react-easy-crop\";\n\nimport getCroppedImg from \"./cropImage\";\nimport { BASE_URL } from \"../../../utils/api\";\n\nconst ImageCroper = ({\n  imgSrc,\n  zoom,\n  setZoom,\n  setCroppedAreaPixels,\n  croppedAreaPixels,\n}) => {\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n\n  return (\n    <Cropper\n      image={`${BASE_URL}${imgSrc}`}\n      crop={crop}\n      zoom={zoom}\n      aspect={16 / 9}\n      onCropChange={setCrop}\n      onCropComplete={onCropComplete}\n      onZoomChange={setZoom}\n    />\n  );\n};\n\nexport default ImageCroper;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/DaySchedule.js",["774","775","776","777","778","779","780","781"],"// import React from 'react'\n// import { useParams, useHistory } from \"react-router-dom\";\n\n// export default function DaySchedule() {\n//     const history = useHistory();\n//     const { id } = useParams();\n//     console.log(id, \"DaySchedule page id\")\n//     return (\n//         <div>DaySchedule</div>\n//     )\n// }\n\n\n\n\nimport React, { useState } from \"react\";\nimport { Table, Dropdown } from \"react-bootstrap\";\nimport AddNewTagModal from \"../../modals/AddNewTagModal\";\nimport downArrow from \"../../../img/down-arrow.png\";\nimport menuIcon from \"../../../img/menu-icon.png\";\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\nimport emptyMediaImg from \"../../../img/addmedia-empty-img.png\";\nimport nameAvatar from \"../../../img/assets-avatar-img.png\";\nimport deleteIcon from \"../../../img/delete-icon.png\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getAllMedia } from \"../../../utils/api\";\nimport useSWR from 'swr'\n\nimport {\n    getDatetimeIn12Hours,\n    humanReadableFormattedDateString,\n} from \"../../../utils/UtilsService\";\nimport DeleteConfirmation from \"../../modals/DeleteConfirmation\";\nimport { deleteMedia, BASE_URL } from \"../../../utils/api\";\nimport PublishMediaModal from \"../../modals/PublishMediaModal\";\n\nconst DaySchedule = () => {\n    const history = useHistory();\n    const { id } = useParams();\n    const { data: allMedia, mutate } = useSWR('/vendor/display/media', getAllMedia);\n    console.log(allMedia, \"day schedule\")\n\n    const [showNewTagModal, setNewTagModal] = useState(false);\n    const [deleteModal, setDeleteModal] = useState(false);\n    const [selectedMedia, setSelectedMedia] = useState(\"\");\n    const [showPublishPopUp, setShowPublishPopUp] = useState(false);\n\n    // use effect\n\n\n    const handleDelete = async () => {\n        setDeleteModal(false)\n        await deleteMedia(selectedMedia._id)\n        mutate()\n    };\n\n    const handlePublishcOpen = (media) => {\n        setShowPublishPopUp(media);\n    }\n    // const parseMeta = (media) => {\n    //     const meta = JSON.parse(media.properties)\n    //     return (\n    //         <span className=\"td-content\">\n    //             {media?.type === \"image\" && <strong>{meta.height} x  {meta.width}</strong>}\n    //             {media?.type === \"video\" && <strong>{meta.length.toFixed(0) / 60} Sec</strong>}\n    //             <span>{meta.size} MB</span>\n    //         </span>\n    //     )\n    // }\n\n    const parseMeta = (media) => {\n        const meta = JSON.parse(media.properties);\n        return (\n            <span className=\"td-content\">\n                {media?.type === \"image\" && <strong>{meta?.height} x {meta?.width}</strong>}\n                {media?.type === \"video\" && meta?.length && (\n                    <strong>{(meta.length / 60).toFixed(0)} Sec</strong>\n                )}\n                {meta?.size && <span>{meta.size} MB</span>}\n            </span>\n        );\n    };\n\n\n    const videoMetaDuration = (media) => {\n        const properties = JSON.parse(media?.properties);\n        if (properties && properties.length) {\n            return (properties.length.toFixed(0) / 60).toFixed(0);\n        }\n        return null;\n    };\n    return (\n        <>\n            <div className=\" d-flex\">\n\n\n                <div className=\"col-7\">\n\n\n                    {allMedia && allMedia.length !== 0 ? (\n                        <Table responsive className=\"custom-table\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Type</th>\n                                    <th>Uploaded Date</th>\n                                    <th>Properties</th>\n                                    <th>Tags</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {allMedia.map((media) => {\n                                    return (\n                                        <tr key={media._id}>\n                                            <td>\n                                                <span className=\"td-content d-flex name-td-content\">\n                                                    <span className={`name-img mr-2  ${media.type === \"video\" && \"videotableName\"}`}>\n                                                        {media.type === \"image\" && <img\n                                                            className=\"media-img img-fluid\"\n                                                            src={`${BASE_URL}${media.title}`}\n                                                            alt=\"media-img\"\n                                                        />}\n                                                        {media.type === \"video\" && videoMetaDuration(media)}\n                                                    </span>\n                                                    <span className=\"name-content d-flex flex-column flex-grow-1\">\n                                                        <strong>{media.title.split(\"/\")[media.title.split(\"/\").length - 1]}</strong>\n                                                        <span>{media.createdBy.name}</span>\n                                                    </span>\n                                                </span>\n                                            </td>\n                                            <td>{media.type.slice(0, 1).toUpperCase() + media.type.slice(1)}</td>\n                                            <td>\n                                                <span className=\"td-content\">\n                                                    <strong>\n                                                        {humanReadableFormattedDateString(media.createdAt)}\n                                                    </strong>\n                                                    <span>{getDatetimeIn12Hours(media.createdAt)}</span>\n                                                </span>\n                                            </td>\n                                            <td>\n                                                {parseMeta(media)}\n                                            </td>\n                                            <td>\n                                                {media.tags.map((tag) => {\n                                                    return <span className=\"my-phone-tag text-truncate ml-1\">{tag}</span>;\n                                                })}\n                                                <span\n                                                    className=\"down-arrow\"\n                                                    onClick={() => {\n                                                        setSelectedMedia(media)\n                                                        setNewTagModal(true);\n                                                    }}\n                                                >\n                                                    <img\n                                                        className=\"down-arrow-img img-fluid\"\n                                                        src={downArrow}\n                                                        alt=\"arrow\"\n                                                    />\n                                                </span>\n                                            </td>\n\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </Table>\n                    ) : (\n                        <div className=\"empty-media text-center\">\n                            <div class=\"empty-media-img mx-auto\">\n                                <img\n                                    className=\"media-img img-fluid\"\n                                    src={emptyMediaImg}\n                                    alt=\"media-img\"\n                                />\n                            </div>\n                            <h3>Add Media</h3>\n                            <p>\n                                Upload your favourite images and videos from the local storage\n                                <br /> of your device\n                            </p>\n                        </div>\n                    )}\n\n                    {showNewTagModal && (\n                        <AddNewTagModal\n                            selected={selectedMedia}\n                            setNewTagModal={setNewTagModal}\n\n                        />\n                    )}\n                    {showPublishPopUp && (\n                        <PublishMediaModal\n                            selected={showPublishPopUp}\n                            setShowPublishPopUp={setShowPublishPopUp}\n                            type=\"media\"\n                        />\n                    )}\n                    {deleteModal && <DeleteConfirmation setDeleteModal={setDeleteModal} callbackFunction={handleDelete} text=\"Are you sure you want to delete?\" yes={\"Yes Deactivate\"} />}\n                </div>\n                <div className=\"col-6\">\n                    <h4>jjjj</h4>\n                </div>\n            </div>\n        </>\n    );\n};\nexport default DaySchedule;\n\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/testDaySchudele.js",["782","783"],"import React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\n\n\n\nexport default function testDaySchudele() {\n    // initial state\n    const [state, setState] = useState({\n        weekendsVisible: true,\n        externalEvents: [\n            { title: \"Art 1\", color: \"#0097a7\", id: 34432, custom: \"fdsfdsfds\" },\n            { title: \"Art 2\", color: \"#f44336\", id: 323232 },\n            { title: \"Art 3\", color: \"#f57f17\", id: 1111 },\n            { title: \"Art 4\", color: \"#90a4ae\", id: 432432 }\n        ],\n        calendarEvents: [\n            {\n                id: 1,\n                title: \"All-day event\",\n                color: \"#388e3c\",\n                start: \"2020-12-12\",\n                end: \"2020-12-12\",\n                custom: \"questo è un campo custom\"\n            },\n            {\n                id: 2,\n                title: \"Timed event\",\n                color: \"#0097a7\",\n                start: \"2020-12-07\",\n                end: \"2020-12-10\",\n                custom: \"custom stuff\"\n            }\n        ]\n    });\n\n    // load external events\n    useEffect(() => {\n        let draggableEl = document.getElementById(\"external-events\");\n        new Draggable(draggableEl, {\n            itemSelector: \".fc-event\",\n            eventData: function (eventEl) {\n                let id = eventEl.dataset.id;\n                let title = eventEl.getAttribute(\"title\");\n                let color = eventEl.dataset.color;\n                let custom = eventEl.dataset.custom;\n\n                return {\n                    id: id,\n                    title: title,\n                    color: color,\n                    custom: custom,\n                    create: true\n                };\n            }\n        });\n    });\n\n    // add external events\n    const addEvent = () => {\n        let newEvent = {\n            id: 3433,\n            title: \"Timed event\",\n            color: \"#333333\",\n            start: \"2020-12-31\",\n            end: \"2020-12-31\",\n            custom: \"custom stuff\"\n        };\n\n        setState((state) => {\n            return {\n                ...state,\n                externalEvents: state.externalEvents.concat(newEvent)\n            };\n        });\n    };\n\n    // handle event receive\n    const handleEventReceive = (eventInfo) => {\n        const newEvent = {\n            id: eventInfo.draggedEl.getAttribute(\"data-id\"),\n            title: eventInfo.draggedEl.getAttribute(\"title\"),\n            color: eventInfo.draggedEl.getAttribute(\"data-color\"),\n            start: eventInfo.date,\n            end: eventInfo.date,\n            custom: eventInfo.draggedEl.getAttribute(\"data-custom\")\n        };\n\n        setState((state) => {\n            return {\n                ...state,\n                calendarEvents: state.calendarEvents.concat(newEvent)\n            };\n        });\n    };\n\n    return (\n        <div className=\"App\">\n            <div style={{ float: \"left\", width: \"25%\" }}>\n                <div style={{ margin: \"0 0 20px\" }}>\n                    <input\n                        type=\"submit\"\n                        name=\"name\"\n                        onClick={addEvent}\n                        value=\"add external event\"\n                    />\n                </div>\n                <div id=\"external-events\">\n                    {state.externalEvents.map((event) => (\n                        <div\n                            className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\n                            title={event.title}\n                            data-id={event.id}\n                            data-color={event.color}\n                            data-custom={event.custom}\n                            key={event.id}\n                            style={{\n                                backgroundColor: event.color,\n                                borderColor: event.color,\n                                cursor: \"pointer\"\n                            }}\n                        >\n                            <div className=\"fc-event-main\">\n                                <div>\n                                    <strong>{event.title}</strong>\n                                </div>\n                                {event.custom}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div style={{ float: \"left\", width: \"75%\" }}>\n                <FullCalendar\n                    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                    headerToolbar={{\n                        left: \"prev,next today\",\n                        center: \"title\",\n                        right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n                    }}\n                    initialView=\"dayGridMonth\"\n                    editable={true}\n                    selectable={true}\n                    selectMirror={true}\n                    dayMaxEvents={true}\n                    weekends={state.weekendsVisible}\n                    events={state.calendarEvents}\n                    droppable={true}\n                    eventReceive={handleEventReceive}\n                />\n            </div>\n        </div>\n    );\n}\n",["784","785"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/TestDaySchudele.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/TestDay.js",["786","787","788","789","790","791","792","793","794","795","796","797","798"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { createPlugin } from \"@fullcalendar/core\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\nimport { BASE_URL, getAllComposition, getAllMedia } from \"../../../utils/api\";\nimport {\n    getDatetimeIn12Hours,\n    humanReadableFormattedDateString,\n} from \"../../../utils/UtilsService\";\nimport useSWR from \"swr\";\nimport { Table, Dropdown } from \"react-bootstrap\";\nimport downArrow from \"../../../img/down-arrow.png\";\n\nconst MyCustomPlugin = createPlugin({\n    ...timeGridPlugin,\n    ...interactionPlugin,\n    // other plugin options\n});\n\nexport default function TestDay() {\n    const { data: allMedia, mutate } = useSWR(\n        \"/vendor/display/media\",\n        getAllMedia\n    );\n    const { data: allComposition, mutatej } = useSWR(\n        \"/vendor/layouts/compositions\",\n        getAllComposition\n    );\n    console.log(allComposition, \"compotision\");\n\n    // initial state\n\n    const [state, setState] = useState({\n        weekendsVisible: true,\n        externalEvents: [\n            {\n                title: \"Art 1\",\n                color: \"#0097a7\",\n                id: 34432,\n                custom: defaultComparisonIcon,\n            },\n            {\n                title: \"Art 2\",\n                color: \"#f44336\",\n                id: 323232,\n\n                custom: defaultComparisonIcon,\n            },\n            {\n                title: \"Art 3\",\n                color: \"#f57f17\",\n                id: 1111,\n\n                custom: defaultComparisonIcon,\n            },\n            {\n                title: \"Art 4\",\n                color: \"#90a4ae\",\n                id: 432432,\n\n                custom: defaultComparisonIcon,\n            },\n        ],\n    });\n    // const [getMedia, setGetMedia] = useState(allMedia);\n    const [composition, setComposition] = useState(allComposition);\n    const parseMeta = (media) => {\n        const meta = JSON.parse(media.properties);\n        return (\n            <span className=\"td-content\">\n                {media?.type === \"image\" && (\n                    <strong>\n                        {meta?.height} x {meta?.width}\n                    </strong>\n                )}\n                {media?.type === \"video\" && meta?.length && (\n                    <strong>{(meta.length / 60).toFixed(0)} Sec</strong>\n                )}\n                {meta?.size && <span>{meta.size} MB</span>}\n            </span>\n        );\n    };\n    const videoMetaDuration = (media) => {\n        const properties = JSON.parse(media?.properties);\n        if (properties && properties.length) {\n            return (properties.length.toFixed(0) / 60).toFixed(0);\n        }\n        return null;\n    };\n    // load external events\n    useEffect(() => {\n        let draggableEl = document.getElementById(\"external-events\");\n        new Draggable(draggableEl, {\n            itemSelector: \".fc-event\",\n            eventData: function (eventEl) {\n                let id = eventEl.dataset.id;\n                let title = eventEl.getAttribute(\"title\");\n                let color = \"#FFE494\";\n                let custom = eventEl.dataset.custom;\n\n                return {\n                    id: id,\n                    title: title,\n                    color: color,\n                    custom: custom,\n                    create: true,\n                };\n            },\n        });\n    }, []);\n\n    // handle event receive\n    const handleEventReceive = (eventInfo) => {\n        const newEvent = {\n            id: eventInfo.draggedEl.getAttribute(\"data-id\"),\n            title: eventInfo.draggedEl.getAttribute(\"title\"),\n            color: eventInfo.draggedEl.getAttribute(\"data-color\"),\n            start: eventInfo.date,\n            end: eventInfo.date,\n            custom: eventInfo.draggedEl.getAttribute(\"data-custom\"),\n            showDeleteButton: true,\n        };\n    };\n\n    // handle deletion of an event\n\n    const handleEventClick = (info) => {\n        console.log(info, \"sssss\");\n        info.event.remove();\n    };\n\n    function renderEventContent(eventInfo) {\n        console.log(eventInfo, \"eventInfo inside renderEventContent\");\n        const { event } = eventInfo;\n        const { title, timeText } = event;\n        return (\n            <>\n                <div className=\"fullcalendar-main-container\">\n                    <img\n                        src={event.extendedProps.custom}\n                        className=\"day-schedule-fullcalendar-img\"\n                        alt=\"Event\"\n                    />\n                    <p className=\"m-0 fullcalendar-title\">{title}</p>\n                    <p className=\"fullcalendar-time\">{eventInfo.timeText}</p>\n\n                    <h5\n                        className=\"fullcalendar-delete-btn\"\n                        onClick={() => handleEventClick(eventInfo)}\n                    >\n                        de\n                    </h5>\n                </div>\n            </>\n        );\n    }\n    return (\n        <div className=\"App\">\n            <div style={{ float: \"left\", width: \"50%\", height: \"100vh\" }}>\n                {/* <Table\n                    responsive\n                    className=\"custom-table\"\n                    id=\"external-events\"\n                    style={{ height: \"100%\" }}\n                >\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Uploaded Date</th>\n                            <th>Properties</th>\n                            <th>Tags</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {allMedia?.map((media) => {\n                            return (\n                                <tr\n                                    key={media._id}\n                                    className=\"fc-event fc-h-event  fc-daygrid-event fc-daygrid-block-event \"\n                                    title={media.title}\n                                    data-id={media.id}\n                                    // data-color={\"yellow\"}\n                                    data-custom={`${BASE_URL}${media.title}`}\n                                    style={{\n                                        backgroundColor: \"#fff\",\n                                        // borderColor: \"blue\",\n                                        cursor: \"pointer\",\n                                    }}\n                                >\n                                    <td>\n                                        <span className=\"td-content d-flex name-td-content\">\n                                            <span\n                                                className={`name-img mr-2  ${media.type === \"video\" && \"videotableName\"\n                                                    }`}\n                                            >\n                                                {media.type === \"image\" && (\n                                                    <img\n                                                        className=\"media-img img-fluid\"\n                                                        src={`${BASE_URL}${media.title}`}\n                                                        alt=\"media-img\"\n                                                    />\n                                                )}\n                                                {media.type === \"video\" && videoMetaDuration(media)}\n                                            </span>\n                                            <span className=\"name-content d-flex flex-column flex-grow-1\">\n                                                <strong>\n                                                    {\n                                                        media.title.split(\"/\")[\n                                                        media.title.split(\"/\").length - 1\n                                                        ]\n                                                    }\n                                                </strong>\n                                                <span>{media.createdBy.name}</span>\n                                            </span>\n                                        </span>\n                                    </td>\n                                    <td>\n                                        {media.type.slice(0, 1).toUpperCase() + media.type.slice(1)}\n                                    </td>\n                                    <td>\n                                        <span className=\"td-content\">\n                                            <strong>\n                                                {humanReadableFormattedDateString(media.createdAt)}\n                                            </strong>\n                                            <span>{getDatetimeIn12Hours(media.createdAt)}</span>\n                                        </span>\n                                    </td>\n                                    <td>{parseMeta(media)}</td>\n                                    <td>\n                                        {media.tags.map((tag) => {\n                                            return (\n                                                <span className=\"my-phone-tag text-truncate ml-1\">\n                                                    {tag}\n                                                </span>\n                                            );\n                                        })}\n                                        <span\n                                            className=\"down-arrow\"\n                                        // onClick={() => {\n                                        //     setSelectedMedia(media)\n                                        //     setNewTagModal(true);\n                                        // }}\n                                        >\n                                            <img\n                                                className=\"down-arrow-img img-fluid\"\n                                                src={downArrow}\n                                                alt=\"arrow\"\n                                            />\n                                        </span>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table> */}\n\n                <Table\n                    responsive\n                    className=\"custom-table screen-table\"\n                    style={{ height: \"100%\" }}\n                    id=\"external-events\"\n                >\n                    <thead>\n                        <tr>\n                            <th>Composition</th>\n                            <th>Date Added</th>\n                            <th>Duration</th>\n                            <th>Associated Schedule</th>\n                            <th>Tags</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {allComposition &&\n                            allComposition.map((composition) => {\n                                const content = composition.zones[0].content[0];\n                                return (\n                                    <tr\n                                        key={composition._id}\n                                        className=\"fc-event  fc-daygrid-event fc-daygrid-block-event \"\n                                        title={composition.name}\n                                        data-id={composition._id}\n                                        // data-color={\"yellow\"}\n                                        data-custom={`${BASE_URL}${content.url}`}\n                                        style={{\n                                            backgroundColor: \"#fff\",\n                                            // borderColor: \"blue\",\n                                            cursor: \"pointer\",\n                                        }}\n                                    // id={composition._id}\n                                    >\n                                        <td>\n                                            <span className=\"td-content d-flex name-td-content\">\n                                                <span\n                                                    className={`name-img mr-2  ${content.type === \"video\" && \"videotableName\"\n                                                        }`}\n                                                >\n                                                    {content.type === \"image\" && (\n                                                        <img\n                                                            className=\"media-img img-fluid\"\n                                                            src={`${BASE_URL}${content.url}`}\n                                                            alt=\"media-img\"\n                                                        />\n                                                    )}\n                                                    {content.type === \"video\" &&\n                                                        content.duration.toFixed(0) / 60}\n                                                </span>\n                                                <span className=\"name-content d-flex flex-column flex-grow-1\">\n                                                    <strong>{composition.name}</strong>\n                                                    <span>{composition.createdBy}</span>\n                                                </span>\n                                            </span>\n                                        </td>\n                                        <td>\n                                            <span className=\"td-content\">\n                                                <strong>\n                                                    {humanReadableFormattedDateString(\n                                                        composition.createdAt\n                                                    )}\n                                                </strong>\n                                                <span>\n                                                    {getDatetimeIn12Hours(composition.createdAt)}\n                                                </span>\n                                            </span>\n                                        </td>\n                                        <td> {composition.duration} Sec</td>\n                                        <td>No Schedule</td>\n                                        <td style={{ width: \"180px\" }}>\n                                            <span className=\"tag-container\">\n                                                {composition.tags &&\n                                                    composition.tags.map((tag) => {\n                                                        return (\n                                                            <span className=\"my-phone-tag text-truncate ml-1 mr-1 mb-1\">\n                                                                {tag}\n                                                            </span>\n                                                        );\n                                                    })}\n                                            </span>\n\n                                            <span\n                                                className=\"down-arrow\"\n                                            // onClick={() => {\n                                            //     setSelected(composition);\n                                            //     setNewTagModal(true);\n                                            // }}\n                                            >\n                                                <img\n                                                    className=\"down-arrow-img img-fluid\"\n                                                    src={downArrow}\n                                                    alt=\"arrow\"\n                                                />\n                                            </span>\n                                        </td>\n\n                                    </tr>\n                                );\n                            })}\n                    </tbody>\n                </Table>\n            </div>\n\n            <div style={{ float: \"left\", width: \"50%\" }}>\n                <FullCalendar\n                    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                    headerToolbar={false}\n                    initialView=\"timeGridDay\"\n                    slotDuration=\"00:10:00\"\n                    slotLabelInterval={{ hours: 1 }}\n                    allDaySlot={false}\n                    editable={true}\n                    selectable={false}\n                    selectMirror={true}\n                    dayMaxEvents={false}\n                    weekends={state.weekendsVisible}\n                    droppable={true}\n                    eventReceive={handleEventReceive}\n                    slotEventOverlap={false}\n                    eventOverlap={false}\n                    eventContent={renderEventContent}\n                    contentHeight=\"700px\"\n                ></FullCalendar>\n            </div>\n        </div>\n    );\n}\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/Error404.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/CopyTestDay.jsx",["799","800","801","802","803","804"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { createPlugin } from \"@fullcalendar/core\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\n\nconst MyCustomPlugin = createPlugin({\n  ...timeGridPlugin,\n  ...interactionPlugin,\n  // other plugin options\n});\n\nexport default function CopyTestDay() {\n  // initial state\n\n  const [state, setState] = useState({\n    weekendsVisible: true,\n    externalEvents: [\n      {\n        title: \"Art 1\",\n        color: \"#0097a7\",\n        id: 34432,\n        custom: defaultComparisonIcon,\n      },\n      {\n        title: \"Art 2\",\n        color: \"#f44336\",\n        id: 323232,\n\n        custom: defaultComparisonIcon,\n      },\n      {\n        title: \"Art 3\",\n        color: \"#f57f17\",\n        id: 1111,\n\n        custom: defaultComparisonIcon,\n      },\n      {\n        title: \"Art 4\",\n        color: \"#90a4ae\",\n        id: 432432,\n\n        custom: defaultComparisonIcon,\n      },\n    ],\n    // calendarEvents: [\n    //     {\n    //         id: 1,\n    //         title: \"All-day event\",\n    //         color: \"#388e3c\",\n    //         start: \"2020-12-12\",\n    //         end: \"2020-12-12\",\n    //         custom: \"questo è un campo custom\"\n    //     },\n    //     {\n    //         id: 2,\n    //         title: \"Timed event\",\n    //         color: \"#0097a7\",\n    //         start: \"2020-12-07\",\n    //         end: \"2020-12-10\",\n    //         custom: \"custom stuff\"\n    //     }\n    // ].map((event) => ({\n    //     ...event,\n    //     showDeleteButton: true,\n    //     extendedProps: {\n    //         ...event.extendedProps,\n    //         imageUrl: defaultComparisonIcon, // Add the image URL here\n    //     },\n    // }))\n  });\n\n  // load external events\n  useEffect(() => {\n    let draggableEl = document.getElementById(\"external-events\");\n    new Draggable(draggableEl, {\n      itemSelector: \".fc-event\",\n      eventData: function (eventEl) {\n        let id = eventEl.dataset.id;\n        let title = eventEl.getAttribute(\"title\");\n        let color = \"#FFE494\";\n        let custom = eventEl.dataset.custom;\n\n        return {\n          id: id,\n          title: title,\n          color: color,\n          custom: custom,\n          create: true,\n        };\n      },\n    });\n  }, []);\n\n  // handle event receive\n  const handleEventReceive = (eventInfo) => {\n    const newEvent = {\n      id: eventInfo.draggedEl.getAttribute(\"data-id\"),\n      title: eventInfo.draggedEl.getAttribute(\"title\"),\n      color: eventInfo.draggedEl.getAttribute(\"data-color\"),\n      start: eventInfo.date,\n      end: eventInfo.date,\n      custom: eventInfo.draggedEl.getAttribute(\"data-custom\"),\n      showDeleteButton: true,\n    };\n\n    // setState((prevState) => ({\n    //     ...prevState,\n    //     calendarEvents: prevState.calendarEvents.concat(newEvent)\n    // }));\n  };\n\n  // handle deletion of an event\n\n  const handleEventClick = (info) => {\n    console.log(info, \"sssss\");\n    info.event.remove();\n  };\n\n  function renderEventContent(eventInfo) {\n    console.log(eventInfo, \"eventInfo inside renderEventContent\");\n    const { event } = eventInfo;\n    const { title, timeText } = event;\n    console.log(eventInfo.timeText, \"ooooo\");\n    return (\n      <>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-evenly\",\n            height: \"-webkit-fill-available\",\n          }}\n        >\n          <img\n            src={event.extendedProps.custom}\n            className=\"day-schedule-fullcelender-img\"\n            alt=\"Event\"\n          />\n          <p className=\"m-0 fullcalender-title\">{title}</p>\n          <p className=\"m-0 fullcalender-time\">{eventInfo.timeText}</p>\n\n          <h5 className=\"m-0\" onClick={() => handleEventClick(eventInfo)}>\n            de\n          </h5>\n        </div>\n      </>\n    );\n  }\n  useEffect(() => {\n    const calendarEl = document.getElementById(\"fullCalendar-table\");\n    if (calendarEl) {\n      calendarEl.style.backgroundColor = \"#fff\"; // Set your desired background color here\n    }\n  }, []);\n  useEffect(() => {\n    const calendarContainer = document.querySelector(\".fullcalendar-container\");\n    if (calendarContainer) {\n      calendarContainer.style.backgroundColor = \"#f0f0f0\"; // Set the desired background color here\n    }\n  }, []);\n  return (\n    <div className=\"App\">\n      <div style={{ float: \"left\", width: \"25%\" }}>\n        <div id=\"external-events\">\n          {state.externalEvents.map((event) => (\n            <div\n              className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\n              title={event.title}\n              data-id={event.id}\n              data-color={event.color}\n              data-custom={event.custom}\n              key={event.id}\n              style={{\n                backgroundColor: event.color,\n                borderColor: event.color,\n                cursor: \"pointer\"\n              }}\n            >\n              <div className=\"fc-event-main\">\n                <div>\n                  <strong>{event.title}</strong>\n                </div>\n                <img src={event.custom} />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div style={{ float: \"left\", width: \"75%\" }}>\n        <FullCalendar\n            id=\"fullCalendar-table\"\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n          // headerToolbar={{\n          //     left: \"\",\n          //     center: \"\",\n          //     right: \"\"\n          // }}\n          headerToolbar={false}\n          initialView=\"timeGridDay\"\n          slotDuration=\"00:10:00\"\n          slotLabelInterval={{ hours: 1 }}\n          allDaySlot={false}\n          editable={true}\n          selectable={false}\n          selectMirror={true}\n          dayMaxEvents={false}\n          weekends={state.weekendsVisible}\n          // events={state.calendarEvents}\n          droppable={true}\n          eventReceive={handleEventReceive}\n          slotEventOverlap={false}\n          eventOverlap={false}\n          // select={handleSelect}\n          // eventClick={handleEventClick}\n          // eventRender={handleEventRender}\n          eventContent={renderEventContent}\n         \n        ></FullCalendar>\n      </div>\n    </div>\n  );\n}\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/MonthSchedule.jsx",["805","806","807","808","809","810","811"],"\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { createPlugin } from \"@fullcalendar/core\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\n\nconst MyCustomPlugin = createPlugin({\n  ...timeGridPlugin,\n  ...interactionPlugin,\n  // other plugin options\n});\n\nexport default function MonthSchedule() {\n  // initial state\n\n  const [state, setState] = useState({\n    weekendsVisible: true,\n    externalEvents: [\n      {\n        title: \"Art 1\",\n        color: \"#0097a7\",\n        id: 34432,\n        custom: defaultComparisonIcon,\n      },\n      {\n        title: \"Art 2\",\n        color: \"#f44336\",\n        id: 323232,\n\n        custom: defaultComparisonIcon,\n      },\n      {\n        title: \"Art 3\",\n        color: \"#f57f17\",\n        id: 1111,\n\n        custom: defaultComparisonIcon,\n      },\n      {\n        title: \"Art 4\",\n        color: \"#90a4ae\",\n        id: 432432,\n\n        custom: defaultComparisonIcon,\n      },\n    ],\n    // calendarEvents: [\n    //     {\n    //         id: 1,\n    //         title: \"All-day event\",\n    //         color: \"#388e3c\",\n    //         start: \"2020-12-12\",\n    //         end: \"2020-12-12\",\n    //         custom: \"questo è un campo custom\"\n    //     },\n    //     {\n    //         id: 2,\n    //         title: \"Timed event\",\n    //         color: \"#0097a7\",\n    //         start: \"2020-12-07\",\n    //         end: \"2020-12-10\",\n    //         custom: \"custom stuff\"\n    //     }\n    // ].map((event) => ({\n    //     ...event,\n    //     showDeleteButton: true,\n    //     extendedProps: {\n    //         ...event.extendedProps,\n    //         imageUrl: defaultComparisonIcon, // Add the image URL here\n    //     },\n    // }))\n  });\n\n  // load external events\n  useEffect(() => {\n    let draggableEl = document.getElementById(\"external-events\");\n    new Draggable(draggableEl, {\n      itemSelector: \".fc-event\",\n      eventData: function (eventEl) {\n        let id = eventEl.dataset.id;\n        let title = eventEl.getAttribute(\"title\");\n        let color = \"#FFE494\";\n\n        return {\n          id: id,\n          title: title,\n          color: color,\n          create: true,\n        };\n      },\n    });\n  }, []);\n\n  // handle event receive\n  const handleEventReceive = (eventInfo) => {\n    const newEvent = {\n      id: eventInfo.draggedEl.getAttribute(\"data-id\"),\n      title: eventInfo.draggedEl.getAttribute(\"title\"),\n      color: eventInfo.draggedEl.getAttribute(\"data-color\"),\n      start: eventInfo.date,\n      end: eventInfo.date,\n      showDeleteButton: true,\n    };\n\n    // setState((prevState) => ({\n    //     ...prevState,\n    //     calendarEvents: prevState.calendarEvents.concat(newEvent)\n    // }));\n  };\n\n  // handle deletion of an event\n\n  const handleEventClick = (info) => {\n    console.log(info, \"sssss\");\n    info.event.remove();\n  };\n\n  function renderEventContent(eventInfo) {\n    console.log(eventInfo, \"eventInfo inside renderEventContent\");\n    const { event } = eventInfo;\n    const { title, timeText } = event;\n    console.log(eventInfo.timeText, \"ooooo\");\n    return (\n      <>\n        <div\n        //   style={{\n        //     display: \"flex\",\n        //     flexDirection: \"row\",\n        //     alignItems: \"center\",\n        //     justifyContent: \"space-evenly\",\n        //     height: \"-webkit-fill-available\",\n        //   }}\n        >\n       \n          <p className=\"m-0 fullcalender-title\">{title}</p>\n          {/* <p className=\"m-0 fullcalender-time\">{eventInfo.timeText}</p> */}\n\n          {/* <h5 className=\"m-0\" onClick={() => handleEventClick(eventInfo)}>\n            de\n          </h5> */}\n        </div>\n      </>\n    );\n  }\n \n  return (\n    <div className=\"App\">\n      <div style={{ float: \"left\", width: \"25%\" }}>\n        <div id=\"external-events\">\n          {state.externalEvents.map((event) => (\n            <div\n              className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\n              title={event.title}\n              data-id={event.id}\n              data-color={event.color}\n            \n              key={event.id}\n              style={{\n                backgroundColor: event.color,\n                borderColor: event.color,\n                cursor: \"pointer\"\n              }}\n            >\n              <div className=\"fc-event-main\">\n                <div>\n                  <strong>{event.title}</strong>\n                </div>\n                <img src={event.custom} />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div style={{ float: \"left\", width: \"75%\" }}>\n        <FullCalendar\n            id=\"fullCalendar-table\"\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n          // headerToolbar={{\n          //     left: \"\",\n          //     center: \"\",\n          //     right: \"\"\n          // }}\n          headerToolbar={false}\n          initialView=\"dayGridMonth\"\n        //   slotDuration=\"00:10:00\"\n        //   slotLabelInterval={{ hours: 1 }}\n          allDaySlot={false}\n          editable={true}\n          selectable={false}\n          selectMirror={true}\n          dayMaxEvents={false}\n          weekends={state.weekendsVisible}\n          // events={state.calendarEvents}\n          droppable={true}\n          eventReceive={handleEventReceive}\n          slotEventOverlap={false}\n          eventOverlap={false}\n          // select={handleSelect}\n          // eventClick={handleEventClick}\n          // eventRender={handleEventRender}\n          eventContent={renderEventContent}\n         \n        ></FullCalendar>\n      </div>\n    </div>\n  );\n}\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/CopyMonthSchedule.jsx",["812","813","814","815"],"// import React, { useEffect, useState } from \"react\";\n// import FullCalendar from \"@fullcalendar/react\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n// import timeGridPlugin from \"@fullcalendar/timegrid\";\n// import interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\n\n// export default function CopyMonthSchedule() {\n//   // initial state\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n// const [assignedDates, setAssignedDates] = useState([]);\n// const [selectedDate, setSelectedDate] = useState(null);\n\n//   const [state, setState] = useState({\n//     weekendsVisible: true,\n//     externalEvents: [\n//       { title: \"Art 1\", color: \"#0097a7\", id: 34432, custom: \"fdsfdsfds\" },\n//       { title: \"Art 2\", color: \"#f44336\", id: 323232 },\n//       { title: \"Art 3\", color: \"#f57f17\", id: 1111 },\n//       { title: \"Art 4\", color: \"#90a4ae\", id: 432432 }\n//     ],\n//     calendarEvents: [\n//       {\n//         id: 1,\n//         title: \"All-day event\",\n//         color: \"#388e3c\",\n//         start: \"2020-12-12\",\n//         end: \"2020-12-12\",\n//         custom: \"questo è un campo custom\"\n//       },\n//       {\n//         id: 2,\n//         title: \"Timed event\",\n//         color: \"#0097a7\",\n//         start: \"2020-12-07\",\n//         end: \"2020-12-10\",\n//         custom: \"custom stuff\"\n//       }\n//     ]\n//   });\n\n//   // load external events\n//   useEffect(() => {\n//     let draggableEl = document.getElementById(\"external-events\");\n//     new Draggable(draggableEl, {\n//       itemSelector: \".fc-event\",\n//       eventData: function (eventEl) {\n//         let id = eventEl.dataset.id;\n//         let title = eventEl.getAttribute(\"title\");\n//         let color = eventEl.dataset.color;\n//         let custom = eventEl.dataset.custom;\n\n//         return {\n//           id: id,\n//           title: title,\n//           color: color,\n//           custom: custom,\n//           create: true\n//         };\n//       }\n//     });\n//   });\n\n//   // add external events\n//   const addEvent = () => {\n//     let newEvent = {\n//       id: 3433,\n//       title: \"Timed event\",\n//       color: \"#333333\",\n//       start: \"2020-12-31\",\n//       end: \"2020-12-31\",\n//       custom: \"custom stuff\"\n//     };\n\n//     setState((state) => {\n//       return {\n//         ...state,\n//         externalEvents: state.externalEvents.concat(newEvent)\n//       };\n//     });\n//   };\n\n//   // handle event receive\n//   const handleEventReceive = (eventInfo) => {\n//     const newEvent = {\n//       id: eventInfo.draggedEl.getAttribute(\"data-id\"),\n//       title: eventInfo.draggedEl.getAttribute(\"title\"),\n//       color: eventInfo.draggedEl.getAttribute(\"data-color\"),\n//       start: eventInfo.date,\n//       end: eventInfo.date,\n//       custom: eventInfo.draggedEl.getAttribute(\"data-custom\")\n//     };\n\n//     setSelectedEvent(null);\n\n//     setState((state) => ({\n//       ...state,\n//       calendarEvents: state.calendarEvents.concat(newEvent)\n//     }));\n//   };\n// //   const handleExternalEventClick = (event) => {\n// //     const eventId = event.currentTarget.getAttribute(\"data-id\");\n// //     const eventTitle = event.currentTarget.getAttribute(\"title\");\n// //     const eventColor = event.currentTarget.getAttribute(\"data-color\");\n// //     const eventCustom = event.currentTarget.getAttribute(\"data-custom\");\n\n// //     if (selectedEvent && selectedEvent.id === eventId) {\n// //       // Uncheck the selected event\n// //       setSelectedEvent(null);\n// //       setAssignedDates([]);\n// //     } else {\n// //       // Check a new event\n// //       setSelectedEvent({\n// //         id: eventId,\n// //         title: eventTitle,\n// //         color: eventColor,\n// //         custom: eventCustom\n// //       });\n// //       setAssignedDates(\n// //         state.calendarEvents\n// //           .filter((event) => event.title === eventTitle)\n// //           .map((event) => event.start)\n// //       );\n// //     }\n// //   };\n\n//   const handleExternalEventClick = (event) => {\n//     const eventId = event.currentTarget.getAttribute(\"data-id\");\n//     const eventTitle = event.currentTarget.getAttribute(\"title\");\n//     const eventColor = event.currentTarget.getAttribute(\"data-color\");\n//     const eventCustom = event.currentTarget.getAttribute(\"data-custom\");\n\n//     if (selectedEvent && selectedEvent.id === eventId && selectedDate) {\n//       // Uncheck the selected event and clear the selected date\n//       setSelectedEvent(null);\n//       setSelectedDate(null);\n//     } else {\n//       // Check a new event and set the selected date to the current date\n//       setSelectedEvent({\n//         id: eventId,\n//         title: eventTitle,\n//         color: eventColor,\n//         custom: eventCustom\n//       });\n//       setSelectedDate(new Date());\n//     }\n//   };\n\n//   const handleDateSelect = (selectInfo) => {\n//     setSelectedDate(selectInfo.startStr);\n//   };\n//   // Define handleEventRadioChange function\n// const handleEventRadioChange = (selectedEvent, selectedDate) => {\n//     if (selectedEvent && selectedDate) {\n//       setState((prevState) => {\n//         // Check if the event is already assigned to the selected date\n//         const isEventAssigned = prevState.calendarEvents.some(\n//           (event) =>\n//             event.id === selectedEvent.id &&\n//             event.start.toDateString() === selectedDate.toDateString()\n//         );\n\n//         if (isEventAssigned) {\n//           // Remove the event from the selected date\n//           const updatedEvents = prevState.calendarEvents.filter(\n//             (event) =>\n//               event.id !== selectedEvent.id ||\n//               event.start.toDateString() !== selectedDate.toDateString()\n//           );\n\n//           return {\n//             ...prevState,\n//             calendarEvents: updatedEvents\n//           };\n//         } else {\n//           // Add the event to the selected date\n//           const newEvent = {\n//             id: selectedEvent.id,\n//             title: selectedEvent.title,\n//             color: selectedEvent.color,\n//             start: selectedDate,\n//             end: selectedDate,\n//             custom: selectedEvent.custom\n//           };\n\n//           return {\n//             ...prevState,\n//             calendarEvents: prevState.calendarEvents.concat(newEvent)\n//           };\n//         }\n//       });\n//     }\n//   };\n\n//   const renderEventContent = (eventInfo) => {\n//     return (\n//       <>\n//         <div>{eventInfo.timeText}</div>\n//         <div>\n//           <input\n//             type=\"radio\"\n//             checked={\n//               selectedEvent &&\n//               selectedEvent.id === eventInfo.event.extendedProps.id &&\n//               selectedDate &&\n//               selectedDate.toDateString() === eventInfo.event.start.toDateString()\n//             }\n//             onChange={() => handleEventRadioChange(eventInfo.event)}\n//           />\n//           {eventInfo.event.title}\n//         </div>\n//       </>\n//     );\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div style={{ float: \"left\", width: \"25%\" }}>\n//         <div style={{ margin: \"0 0 20px\" }}>\n//           <input\n//             type=\"submit\"\n//             name=\"name\"\n//             onClick={addEvent}\n//             value=\"add external event\"\n//           />\n//         </div>\n//         <div id=\"external-events\" style={{width:\"100%\"}}>\n//           {/* {state.externalEvents.map((event) => (\n//             <div\n//               className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\n//               title={event.title}\n//               data-id={event.id}\n//               data-color={event.color}\n//               data-custom={event.custom}\n//               key={event.id}\n//               style={{\n//                 backgroundColor: event.color,\n//                 borderColor: event.color,\n//                 cursor: \"pointer\"\n//               }}\n//             >\n//               <div className=\"fc-event-main\" >\n//                 <div>\n//                   <strong>{event.title}</strong>\n//                 </div>\n//                 {event.custom}\n//               </div>\n//             </div>\n//           ))} */}\n//    {/* {state.externalEvents.map((event) => (\n//   <div\n//     className={`fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2 ${\n//       selectedEvent && selectedEvent.id === event.id ? \"selected\" : \"\"\n//     }`}\n//     title={event.title}\n//     data-id={event.id}\n//     data-color={event.color}\n//     data-custom={event.custom}\n//     key={event.id}\n//     onClick={handleExternalEventClick}\n//     style={{\n//       backgroundColor: event.color,\n//       borderColor: event.color,\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     <div className=\"fc-event-main\">\n//       <div>\n//         <strong>{event.title}</strong>\n//       </div>\n//       {event.custom}\n//     </div>\n//     {selectedEvent && selectedEvent.id === event.id && (\n//       <div>\n//         {state.calendarEvents.some(\n//           (calendarEvent) =>\n//             calendarEvent.title === selectedEvent.title &&\n//             assignedDates.includes(calendarEvent.start)\n//         ) ? (\n//           <span>Assigned</span>\n//         ) : (\n//           <input\n//             type=\"checkbox\"\n//             checked={assignedDates.length > 0}\n//             onChange={() => handleExternalEventClick(event)}\n//           />\n//         )}\n//       </div>\n//     )}\n//   </div>\n// ))} */}\n\n// {state.externalEvents.map((event) => (\n//   <div\n//     className={`fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2 ${\n//       selectedEvent && selectedEvent.id === event.id ? \"selected\" : \"\"\n//     }`}\n//     title={event.title}\n//     data-id={event.id}\n//     data-color={event.color}\n//     data-custom={event.custom}\n//     key={event.id}\n//     onClick={handleExternalEventClick}\n//     style={{\n//       backgroundColor: event.color,\n//       borderColor: event.color,\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     <div className=\"fc-event-main\">\n//       <div>\n//         <strong>{event.title}</strong>\n//       </div>\n//       {event.custom}\n//     </div>\n//     {selectedEvent && selectedEvent.id === event.id && (\n//       <div>\n//         {state.calendarEvents.some(\n//           (calendarEvent) =>\n//             calendarEvent.title === selectedEvent.title &&\n//             calendarEvent.start.getDate() === selectedDate?.getDate()\n//         ) ? (\n//           <span>Assigned</span>\n//         ) : (\n//           <input\n//             type=\"checkbox\"\n//             checked={selectedDate && selectedDate.getDate() === new Date().getDate()}\n//             onChange={() => handleExternalEventClick(event)}\n//           />\n//         )}\n//       </div>\n//     )}\n//   </div>\n// ))}\n\n//         </div>\n//       </div>\n//       <div style={{ float: \"left\", width: \"75%\" }}>\n//         {/* <FullCalendar\n//           plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n\n//         headerToolbar={false}\n//           initialView=\"dayGridMonth\"\n//           editable={true}\n//           selectable={true}\n//           selectMirror={true}\n//           dayMaxEvents={true}\n//           weekends={state.weekendsVisible}\n//           events={state.calendarEvents}\n//           droppable={true}\n//           eventReceive={handleEventReceive}\n//         /> */}\n\n// <FullCalendar\n//   plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n//   headerToolbar={{\n//     left: \"prev,next today\",\n//     center: \"title\",\n//     right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n//   }}\n//   initialView=\"dayGridMonth\"\n//   editable={true}\n//   selectable={true}\n//   selectMirror={true}\n//   dayMaxEvents={true}\n//   weekends={state.weekendsVisible}\n//   events={state.calendarEvents}\n//   droppable={true}\n//   eventReceive={handleEventReceive}\n//   eventContent={renderEventContent} // Add this line\n// />\n\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useState } from \"react\";\n// import FullCalendar from \"@fullcalendar/react\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n// import timeGridPlugin from \"@fullcalendar/timegrid\";\n// import interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\n\n// export default function CopyMonthSchedule() {\n//   // initial state\n//   const [state, setState] = useState({\n//     weekendsVisible: true,\n//     externalEvents: [\n//       { title: \"Art 1\", color: \"#0097a7\", id: 34432, custom: \"fdsfdsfds\" },\n//       { title: \"Art 2\", color: \"#f44336\", id: 323232 },\n//       { title: \"Art 3\", color: \"#f57f17\", id: 1111 },\n//       { title: \"Art 4\", color: \"#90a4ae\", id: 432432 }\n//     ],\n//     calendarEvents: []\n//   });\n\n//   // load external events\n//   useEffect(() => {\n//     let draggableEl = document.getElementById(\"external-events\");\n//     new Draggable(draggableEl, {\n//       itemSelector: \".fc-event\",\n//       eventData: function (eventEl) {\n//         let id = eventEl.dataset.id;\n//         let title = eventEl.getAttribute(\"title\");\n//         let color = eventEl.dataset.color;\n//         let custom = eventEl.dataset.custom;\n\n//         return {\n//           id: id,\n//           title: title,\n//           color: color,\n//           custom: custom,\n//           create: true\n//         };\n//       }\n//     });\n//   });\n\n//   // handle external event selection\n//   const handleExternalEventSelect = (event) => {\n//     setState((prevState) => {\n//       // Clear any previously selected events\n//       const calendarEvents = prevState.calendarEvents.map((event) => ({\n//         ...event,\n//         selected: false\n//       }));\n\n//       // Find the selected event\n//       const selectedEvent = calendarEvents.find(\n//         (ev) => ev.id === event.id && ev.selected\n//       );\n\n//       if (selectedEvent) {\n//         // Unselect the event if already selected\n//         selectedEvent.selected = false;\n//       } else {\n//         // Select the event\n//         event.selected = true;\n//       }\n\n//       return {\n//         ...prevState,\n//         calendarEvents: calendarEvents\n//       };\n//     });\n//   };\n\n//   // handle date click\n//   const handleDateClick = (arg) => {\n//     const selectedDate = arg.date;\n\n//     setState((prevState) => {\n//       const selectedEvent = prevState.calendarEvents.find(\n//         (event) => event.selected\n//       );\n\n//       if (selectedEvent) {\n//         // Add the selected event to the selected date\n//         const newEvent = {\n//           id: selectedEvent.id,\n//           title: selectedEvent.title,\n//           color: selectedEvent.color,\n//           start: selectedDate,\n//           end: selectedDate,\n//           custom: selectedEvent.custom\n//         };\n\n//         return {\n//           ...prevState,\n//           calendarEvents: prevState.calendarEvents.concat(newEvent)\n//         };\n//       }\n\n//       return prevState;\n//     });\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div style={{ float: \"left\", width: \"25%\" }}>\n//         <div id=\"external-events\" style={{ width: \"100%\" }}>\n//           {state.externalEvents.map((event) => (\n//             <div\n//               className={`fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2${\n//                 event.selected ? \" selected\" : \"\"\n//               }`}\n//               title={event.title}\n//               data-id={event.id}\n//               data-color={event.color}\n//               data-custom={event.custom}\n//               key={event.id}\n//               onClick={() => handleExternalEventSelect(event)}\n//               style={{\n//                 backgroundColor: event.color,\n//                 borderColor: event.color,\n//                 cursor: \"pointer\"\n//               }}\n//             >\n//               <div className=\"fc-event-main\">\n//                 <div>\n//                   <strong>{event.title}</strong>\n//                 </div>\n//                 {event.custom}\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//       <div style={{ float: \"left\", width: \"75%\" }}>\n//         <FullCalendar\n//           plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n//           headerToolbar={false}\n//           initialView=\"dayGridMonth\"\n//           editable={true}\n//           selectable={true}\n//           selectMirror={true}\n//           dayMaxEvents={true}\n//           weekends={state.weekendsVisible}\n//           events={state.calendarEvents}\n//           dateClick={handleDateClick}\n//           eventRender={({ event, el }) => {\n//             // Add radio button to each date\n//             const inputEl = document.createElement(\"input\");\n//             inputEl.type = \"radio\";\n//             inputEl.addEventListener(\"change\", () =>\n//               handleExternalEventSelect(event)\n//             );\n\n//             el.prepend(inputEl);\n//           }}\n//         />\n//       </div>\n//     </div>\n//   );\n// }\n\n// -----------------------------------\n\n// import React, { useState } from \"react\";\n// import FullCalendar from \"@fullcalendar/react\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n\n// export default function CalendarWithRadioButtons() {\n//   const [selectedDate, setSelectedDate] = useState(null);\n\n//   const handleDateClick = (dateClickInfo) => {\n//     setSelectedDate(dateClickInfo.date);\n//   };\n\n//   const renderDateCell = (dateInfo) => {\n//     const isSelected = selectedDate && dateInfo.date.valueOf() === selectedDate.valueOf();\n\n//     return (\n//       <div>\n//         <input\n//           type=\"radio\"\n//           checked={isSelected}\n//           onChange={() => setSelectedDate(dateInfo.date)}\n//         />\n//         {dateInfo.dayNumberText}\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div className=\"calendar\">\n//       <FullCalendar\n//         plugins={[dayGridPlugin]}\n//         initialView=\"dayGridMonth\"\n//         selectable={true}\n//         dateClick={handleDateClick}\n//         dayCellContent={renderDateCell}\n//       />\n//     </div>\n//   );\n// }\n\n// -----------------------------------\n\n//******************************* */\nimport React, { useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nexport default function CalendarWithEventList() {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [events, setEvents] = useState([\n    { id: 1, title: \"Event 1\", start: \"2023-05-01\", end: \"2023-05-02\" },\n    { id: 2, title: \"Event 2\", start: \"2023-05-03\", end: \"2023-05-04\" },\n    { id: 3, title: \"Event 3\", start: \"2023-05-05\", end: \"2023-05-06\" },\n    { id: 4, title: \"Event 4\", start: \"2023-05-07\", end: \"2023-05-08\" },\n  ]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  console.log(selectedEvent, \"lllllllloooooo\");\n  const [selectedCheckboxes, setSelectedCheckboxes] = useState({});\n\n  const renderDateCell = (dateInfo) => {\n    const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\n    const isSelected = selectedDateValue === dateInfo.date.valueOf();\n    const isEventSelected = selectedEvent;\n\n    if (isEventSelected) {\n      const checkboxKey = dateInfo.date.toISOString();\n      const hasEvent = events.some(\n        (event) => event.start.valueOf() === dateInfo.date.valueOf()\n      );\n\n      return (\n        <div>\n          <input\n            name={`checkbox-${checkboxKey}`}\n            type=\"checkbox\"\n            checked={isSelected || selectedCheckboxes[checkboxKey]}\n            onChange={() => handleDateCellChange(dateInfo)}\n          />\n          {dateInfo.dayNumberText}\n        </div>\n      );\n    }\n\n    return dateInfo.dayNumberText;\n  };\n\n  // const handleDateCellChange = (dateInfo) => {\n  //   if (selectedEvent) {\n  //     const checkboxKey = dateInfo.date.toISOString();\n  //     const selectedDateValue = dateInfo.date.valueOf();\n  //     const filteredEvents = events.filter(\n  //       (event) => event.start.valueOf() !== selectedDateValue\n  //     );\n\n  //     const hasEvent = filteredEvents.some(\n  //       (event) => event.start.valueOf() === selectedDateValue\n  //     );\n\n  //     if (hasEvent) {\n  //       setSelectedEvent(null);\n  //       setSelectedDate(null);\n  //       setEvents(filteredEvents);\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => {\n  //         const updatedCheckboxes = { ...prevSelectedCheckboxes };\n  //         delete updatedCheckboxes[checkboxKey];\n  //         return updatedCheckboxes;\n  //       });\n  //     } else {\n  //       setSelectedDate(dateInfo.date);\n\n  //       const event = {\n  //         title: selectedEvent.title,\n  //         start: dateInfo.date,\n  //       };\n\n  //       setEvents([...filteredEvents, event]);\n\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n  //         ...prevSelectedCheckboxes,\n  //         [checkboxKey]: true,\n  //       }));\n  //     }\n  //   } else {\n  //     setSelectedDate(dateInfo.date);\n  //   }\n  // };\n\n  // const handleDateCellChange = (dateInfo) => {\n  //   console.log(dateInfo, \"iiiiiiiiiii\");\n  //   const checkboxKey = dateInfo.date.toISOString();\n  //   const selectedDateValue = dateInfo.date.valueOf();\n  //   const filteredEvents = events.filter(\n  //     (event) => event.start.valueOf() !== selectedDateValue\n  //   );\n\n  //   const date = new Date(dateInfo.date);\n  //   const formattedDate = date.toLocaleDateString(\"en-GB\", {\n  //     year: \"numeric\",\n  //     month: \"2-digit\",\n  //     day: \"2-digit\",\n  //   });\n\n  //   const [day, month, year] = formattedDate.split(\"/\");\n  //   const desiredFormat = `${year}-${month}-${day}`;\n  //   // console.log(filteredEvents, \"cgvjhjghgk\");\n  //   let hasEvent = false;\n  //   console.log(dateInfo, \"arti\");\n  //   console.log(Object.keys(dateInfo), \"dj\");\n  //   // console.log(example, \"test\");\n  //   // if (dateInfo.event) {\n  //   //   hasEvent = filteredEvents.some((event) =>\n  //   //     console.log(event, \"ttttttttt\")\n  //   //   );\n  //   // }\n  //   console.log(events.id);\n\n  //   if (dateInfo.event && dateInfo.event.id === dateInfo.id) {\n  //     hasEvent = filteredEvents.some((ev) => ev.id === dateInfo.event.id);\n  //   }\n  //   // console.log(hasEvent, \"pppppp\");\n  //   if (hasEvent) {\n  //     setSelectedEvent(null);\n  //     setSelectedDate(null);\n  //     setEvents(filteredEvents);\n  //     setSelectedCheckboxes((prevSelectedCheckboxes) => {\n  //       const updatedCheckboxes = { ...prevSelectedCheckboxes };\n  //       delete updatedCheckboxes[checkboxKey];\n  //       return updatedCheckboxes;\n  //     });\n  //   } else {\n  //     setSelectedDate(dateInfo.date);\n\n  //     if (selectedEvent) {\n  //       // console.log(selectedEvent, \"pppppppp\");\n  //       dateInfo.kkk = selectedEvent;\n  //       // var example = dateInfo.kkk;\n  //       // console.log(dateInfo, \"eeeeeee\");\n  //       const event = {\n  //         title: selectedEvent.title,\n  //         start: dateInfo.date,\n  //       };\n\n  //       setEvents([...filteredEvents, event]);\n\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n  //         ...prevSelectedCheckboxes,\n  //         [checkboxKey]: true,\n  //       }));\n  //     }\n  //   }\n  // };\n\n  function handleDateCellChange(dateInfo) {\n    console.log(dateInfo, \"handleDateCellChange top console\");\n    const checkboxKey = dateInfo.date.toISOString();\n    const selectedDateValue = dateInfo.date.valueOf();\n    if (selectedEvent !== null) {\n      let testObj = JSON.parse(JSON.stringify(dateInfo));\n      testObj.event = selectedEvent;\n      dateInfo.kkk = selectedEvent;\n      console.log(dateInfo, testObj, \"dateInfo -> testObj\");\n      console.log(dateInfo.kkk, testObj.event, \"dateInfo -> testObj\");\n\n      const event = {\n        title: selectedEvent.title,\n        start: dateInfo.date,\n      };\n    }\n    const filteredEvents = events.filter(\n      (event) => event.start.valueOf() !== selectedDateValue\n    );\n\n    const date = new Date(dateInfo.date);\n    const formattedDate = date.toLocaleDateString(\"en-GB\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n    });\n\n    const [day, month, year] = formattedDate.split(\"/\");\n    const desiredFormat = `${year}-${month}-${day}`;\n\n    let hasEvent = false;\n    console.log(dateInfo, \"arti\");\n\n    if (dateInfo.event && dateInfo.event.id) {\n      hasEvent = filteredEvents.some((ev) => ev.id === dateInfo.event.id);\n    }\n\n    if (hasEvent) {\n      setSelectedEvent(null);\n      setSelectedDate(null);\n      setEvents(filteredEvents);\n      setSelectedCheckboxes((prevSelectedCheckboxes) => {\n        const updatedCheckboxes = { ...prevSelectedCheckboxes };\n        delete updatedCheckboxes[checkboxKey];\n        return updatedCheckboxes;\n      });\n    } else {\n      setSelectedDate(dateInfo.date);\n\n      if (\n        selectedEvent &&\n        dateInfo.event &&\n        selectedEvent.id === dateInfo.event.id\n      ) {\n        const eventToRemove = events.find(\n          (event) => event.id === selectedEvent.id\n        );\n        const updatedEvents = events.filter(\n          (event) => event.id !== selectedEvent.id\n        );\n        setSelectedEvent(null);\n        setSelectedDate(null);\n        setEvents(updatedEvents);\n        setSelectedCheckboxes((prevSelectedCheckboxes) => {\n          const updatedCheckboxes = { ...prevSelectedCheckboxes };\n          delete updatedCheckboxes[checkboxKey];\n          return updatedCheckboxes;\n        });\n      } else if (selectedEvent) {\n        const event = {\n          id: selectedEvent.id,\n          title: selectedEvent.title,\n          start: dateInfo.date,\n        };\n        setEvents([...filteredEvents, event]);\n\n        setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n          ...prevSelectedCheckboxes,\n          [checkboxKey]: true,\n        }));\n      }\n    }\n  }\n\n  const getDatesBetween = (start, end) => {\n    const dates = [];\n    let currentDate = new Date(start);\n\n    while (currentDate <= end) {\n      dates.push(currentDate.toISOString().split(\"T\")[0]);\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n\n    return dates;\n  };\n\n  const addCheckboxesToDates = (event) => {\n    const allDates = getDatesBetween(event.start, event.end);\n\n    const calendarEl = document.querySelector(\".calendar-container\");\n    allDates.forEach((date) => {\n      const dateCell = calendarEl.querySelector(`[data-date=\"${date}\"]`);\n      dateCell.classList.add(\"selected-date\");\n    });\n  };\n\n  const handleEventClick = (event) => {\n    setSelectedEvent(event);\n    setSelectedDate(null); // Reset selected date\n    addCheckboxesToDates(event);\n  };\n\n  // const events = [\n  //   { id: 1, title: \"Event 1\", start: \"2023-05-01\", end: \"2023-05-02\" },\n  //   { id: 2, title: \"Event 2\", start: \"2023-05-03\", end: \"2023-05-04\" },\n  //   { id: 3, title: \"Event 3\", start: \"2023-05-05\", end: \"2023-05-06\" },\n  //   { id: 4, title: \"Event 4\", start: \"2023-05-07\", end: \"2023-05-08\" },\n  // ];\n  return (\n    <div className=\"containe\">\n      <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\n        <h2>Event List</h2>\n        <ul>\n          {events.map((event) => (\n            <li\n              key={event.id}\n              onClick={() => handleEventClick(event)}\n              style={{\n                cursor: \"pointer\",\n                fontWeight:\n                  selectedEvent && selectedEvent.id === event.id\n                    ? \"bold\"\n                    : \"normal\",\n              }}\n            >\n              {event.title}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\n        <FullCalendar\n          plugins={[dayGridPlugin, interactionPlugin]}\n          initialView=\"dayGridMonth\"\n          selectable={true}\n          events={events}\n          dayCellContent={renderDateCell}\n          eventContent={(info) => {\n            return (\n              <div>\n                <div>{info.event.title}</div>\n              </div>\n            );\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n//*********************************** */\n\n// import React, { useState } from \"react\";\n// import FullCalendar from \"@fullcalendar/react\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n// import interactionPlugin from \"@fullcalendar/interaction\";\n\n// export default function CalendarWithEventList() {\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [events, setEvents] = useState([]);\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n//   const [selectedRadio, setSelectedRadio] = useState({});\n\n//   const handleDateCellChange = (dateInfo) => {\n//     if (selectedEvent) {\n//       const selectedDateValue = dateInfo.date.valueOf();\n//       const filteredEvents = events.filter(\n//         (event) => event.start.valueOf() !== selectedDateValue\n//       );\n\n//       const hasEvent = filteredEvents.some(\n//         (event) => event.start.valueOf() === selectedDateValue\n//       );\n\n//       if (hasEvent) {\n//         setSelectedEvent(null);\n//         setSelectedDate(null);\n//         setEvents(filteredEvents);\n//         setSelectedRadio({}); // Clear the selected radio state for the date\n//       } else {\n//         setSelectedDate(dateInfo.date);\n\n//         const event = {\n//           title: selectedEvent.title,\n//           start: dateInfo.date,\n//         };\n\n//         setEvents([...filteredEvents, event]);\n//         setSelectedRadio((prevSelectedRadio) => ({\n//           ...prevSelectedRadio,\n//           [dateInfo.date.toISOString()]: true, // Set the selected radio state for the date\n//         }));\n//       }\n//     } else {\n//       setSelectedDate(dateInfo.date);\n//       setSelectedRadio((prevSelectedRadio) => ({\n//         ...prevSelectedRadio,\n//         [dateInfo.date.toISOString()]: true, // Set the selected radio state for the date\n//       }));\n//     }\n//   };\n\n//   const renderDateCell = (dateInfo) => {\n//     const isSelected = selectedDate\n//       ? selectedDate.valueOf() === dateInfo.date.valueOf()\n//       : false;\n//     const isEventSelected = selectedEvent;\n//     const radioKey = dateInfo.date.toISOString();\n\n//     if (isEventSelected) {\n//       const radioButtonName = `radio-${radioKey}`;\n//       const hasEvent = events.some(\n//         (event) => event.start.valueOf() === dateInfo.date.valueOf()\n//       );\n\n//       return (\n//         <div>\n//           <input\n//             name={radioButtonName}\n//             type=\"radio\"\n//             checked={isSelected && selectedRadio[radioKey]}\n//             onChange={() => handleDateCellChange(dateInfo)}\n//           />\n//           {dateInfo.dayNumberText}\n//         </div>\n//       );\n//     }\n\n//     return dateInfo.dayNumberText;\n//   };\n\n//   const getDatesBetween = (start, end) => {\n//     const dates = [];\n//     let currentDate = new Date(start);\n\n//     while (currentDate <= end) {\n//       dates.push(currentDate.toISOString().split(\"T\")[0]);\n//       currentDate.setDate(currentDate.getDate() + 1);\n//     }\n\n//     return dates;\n//   };\n\n//   const addRadioButtonsToDates = (event) => {\n//     const allDates = getDatesBetween(event.start, event.end);\n\n//     const calendarEl = document.querySelector(\".calendar-container\");\n//     allDates.forEach((date) => {\n//       const dateCell = calendarEl.querySelector(`[data-date=\"${date}\"]`);\n//       dateCell.classList.add(\"selected-date\");\n//     });\n//   };\n\n//   const handleEventClick = (event) => {\n//     setSelectedEvent(event);\n//     setSelectedDate(null); // Reset selected date\n//     addRadioButtonsToDates(event);\n//   };\n\n//   const eventsa = [\n//     { id: 1, title: \"Event 1\", start: \"2023-05-01\", end: \"2023-05-02\" },\n//     { id: 2, title: \"Event 2\", start: \"2023-05-03\", end: \"2023-05-04\" },\n//     { id: 3, title: \"Event 3\", start: \"2023-05-05\", end: \"2023-05-06\" },\n//     { id: 4, title: \"Event 4\", start: \"2023-05-07\", end: \"2023-05-08\" },\n//   ];\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\n//         <h2>Event List</h2>\n//         <ul>\n//           {eventsa.map((event) => (\n//             <li\n//               key={event.id}\n//               onClick={() => handleEventClick(event)}\n//               style={{\n//                 cursor: \"pointer\",\n//                 fontWeight:\n//                   selectedEvent && selectedEvent.id === event.id\n//                     ? \"bold\"\n//                     : \"normal\",\n//               }}\n//             >\n//               {event.title}\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\n//         <FullCalendar\n//           plugins={[dayGridPlugin, interactionPlugin]}\n//           initialView=\"dayGridMonth\"\n//           selectable={true}\n//           events={events}\n//           dayCellContent={renderDateCell}\n//           eventContent={(info) => {\n//             return (\n//               <div>\n//                 <div>{info.event.title}</div>\n//               </div>\n//             );\n//           }}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// second month\n\n// import React, { useState } from \"react\";\n// import FullCalendar from \"@fullcalendar/react\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n// import interactionPlugin from \"@fullcalendar/interaction\";\n\n// export default function SecondMonth() {\n//     const [selectedDate, setSelectedDate] = useState(null);\n//     const [events, setEvents] = useState([\n//         { id: 1, title: \"Event 1\", start: \"2023-05-01\", end: \"2023-05-02\" },\n//         { id: 2, title: \"Event 2\", start: \"2023-05-03\", end: \"2023-05-04\" },\n//         { id: 3, title: \"Event 3\", start: \"2023-05-05\", end: \"2023-05-06\" },\n//         { id: 4, title: \"Event 4\", start: \"2023-05-07\", end: \"2023-05-08\" },\n//     ]);\n//     const [selectedEvent, setSelectedEvent] = useState(null);\n//     console.log(selectedEvent, \"lllllllloooooo\");\n//     const [selectedCheckboxes, setSelectedCheckboxes] = useState({});\n\n//     function handleDateCellChange(dateInfo) {\n//         console.log(dateInfo, \"oooooo\")\n//         console.log(dateInfo, \"handleDateCellChange top console\");\n//         const checkboxKey = dateInfo.date.toISOString();\n//         const selectedDateValue = dateInfo.date.valueOf();\n//         const isChecked = selectedCheckboxes[checkboxKey];\n\n//         if (isChecked) {\n//             // Unselecting the checkbox\n//             setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//                 const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//                 delete updatedCheckboxes[checkboxKey];\n//                 return updatedCheckboxes;\n//             });\n\n//             const filteredEvents = events.filter(\n//                 (event) => event.start.valueOf() !== selectedDateValue\n//             );\n\n//             setSelectedEvent(null);\n//             setSelectedDate(null);\n//             setEvents(filteredEvents);\n//         } else {\n//             // Selecting the checkbox\n//             setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//                 ...prevSelectedCheckboxes,\n//                 [checkboxKey]: true,\n//             }));\n\n//             const event = {\n//                 id: selectedEvent.id,\n//                 title: selectedEvent.title,\n//                 start: dateInfo.date,\n//             };\n//             setEvents((prevEvents) => [...prevEvents, event]);\n//         }\n//     }\n\n//     // function handleDateCellChange(dateInfo) {\n//     //     console.log(dateInfo, \"handleDateCellChange top console\");\n//     //     const checkboxKey = dateInfo.date.toISOString();\n//     //     const isChecked = selectedCheckboxes[checkboxKey];\n\n//     //     if (isChecked) {\n//     //         // Unselecting the checkbox\n//     //         setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//     //             const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//     //             delete updatedCheckboxes[checkboxKey];\n//     //             return updatedCheckboxes;\n//     //         });\n\n//     //         const eventToRemove = events.find(\n//     //             (event) => event.start.valueOf() === dateInfo.date.valueOf()\n//     //         );\n\n//     //         if (eventToRemove) {\n//     //             const updatedEvents = events.filter(\n//     //                 (event) => event.id !== eventToRemove.id\n//     //             );\n//     //             setEvents(updatedEvents);\n//     //         }\n//     //     } else {\n//     //         // Selecting the checkbox\n//     //         setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//     //             ...prevSelectedCheckboxes,\n//     //             [checkboxKey]: true,\n//     //         }));\n\n//     //         const event = {\n//     //             id: selectedEvent.id,\n//     //             title: selectedEvent.title,\n//     //             start: dateInfo.date,\n//     //         };\n\n//     //         setEvents((prevEvents) => [...prevEvents, event]);\n//     //     }\n//     // }\n\n//     const renderDateCell = (dateInfo) => {\n//         console.log(dateInfo, \"ppppp\")\n//         const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\n//         const isSelected = selectedDateValue === dateInfo.date.valueOf();\n//         const isEventSelected = selectedEvent;\n\n//         if (isEventSelected) {\n//             const checkboxKey = dateInfo.date.toISOString();\n\n//             return (\n//                 <div>\n//                     <input\n//                         name={`checkbox-${checkboxKey}`}\n//                         type=\"checkbox\"\n//                         checked={isSelected || selectedCheckboxes[checkboxKey]}\n//                         onChange={() => handleDateCellChange(dateInfo)}\n//                     />\n//                     {dateInfo.dayNumberText}\n//                 </div>\n//             );\n//         }\n\n//         return dateInfo.dayNumberText;\n//     };\n\n//     // function handleDateCellChange(dateInfo) {\n//     //     console.log(dateInfo, \"handleDateCellChange top console\");\n//     //     const checkboxKey = dateInfo.date.toISOString();\n//     //     const selectedDateValue = dateInfo.date.valueOf();\n//     //     if (selectedEvent !== null) {\n//     //         let testObj = JSON.parse(JSON.stringify(dateInfo));\n//     //         testObj.event = selectedEvent;\n//     //         dateInfo.kkk = selectedEvent;\n//     //         console.log(dateInfo, testObj, \"dateInfo -> testObj\");\n//     //         console.log(dateInfo.kkk, testObj.event, \"dateInfo -> testObj\");\n\n//     //         const event = {\n//     //             title: selectedEvent.title,\n//     //             start: dateInfo.date,\n//     //         };\n//     //     }\n//     //     const filteredEvents = events.filter(\n//     //         (event) => event.start.valueOf() !== selectedDateValue\n//     //     );\n\n//     //     const date = new Date(dateInfo.date);\n//     //     const formattedDate = date.toLocaleDateString(\"en-GB\", {\n//     //         year: \"numeric\",\n//     //         month: \"2-digit\",\n//     //         day: \"2-digit\",\n//     //     });\n\n//     //     const [day, month, year] = formattedDate.split(\"/\");\n//     //     const desiredFormat = `${year}-${month}-${day}`;\n\n//     //     let hasEvent = false;\n//     //     console.log(dateInfo, \"arti\");\n\n//     //     if (dateInfo.event && dateInfo.event.id) {\n//     //         hasEvent = filteredEvents.some((ev) => ev.id === dateInfo.event.id);\n//     //     }\n\n//     //     if (hasEvent) {\n//     //         setSelectedEvent(null);\n//     //         setSelectedDate(null);\n//     //         setEvents(filteredEvents);\n//     //         setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//     //             const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//     //             delete updatedCheckboxes[checkboxKey];\n//     //             return updatedCheckboxes;\n//     //         });\n//     //     } else {\n//     //         setSelectedDate(dateInfo.date);\n\n//     //         if (\n//     //             selectedEvent &&\n//     //             dateInfo.event &&\n//     //             selectedEvent.id === dateInfo.event.id\n//     //         ) {\n//     //             const eventToRemove = events.find(\n//     //                 (event) => event.id === selectedEvent.id\n//     //             );\n//     //             const updatedEvents = events.filter(\n//     //                 (event) => event.id !== selectedEvent.id\n//     //             );\n//     //             setSelectedEvent(null);\n//     //             setSelectedDate(null);\n//     //             setEvents(updatedEvents);\n//     //             setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//     //                 const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//     //                 delete updatedCheckboxes[checkboxKey];\n//     //                 return updatedCheckboxes;\n//     //             });\n//     //         } else if (selectedEvent) {\n//     //             const event = {\n//     //                 id: selectedEvent.id,\n//     //                 title: selectedEvent.title,\n//     //                 start: dateInfo.date,\n//     //             };\n//     //             setEvents([...filteredEvents, event]);\n\n//     //             setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//     //                 ...prevSelectedCheckboxes,\n//     //                 [checkboxKey]: true,\n//     //             }));\n//     //         }\n//     //     }\n//     // }\n\n//     // const getDatesBetween = (start, end) => {\n//     //     const dates = [];\n//     //     let currentDate = new Date(start);\n\n//     //     while (currentDate <= end) {\n//     //         dates.push(currentDate.toISOString().split(\"T\")[0]);\n//     //         currentDate.setDate(currentDate.getDate() + 1);\n//     //     }\n\n//     //     return dates;\n//     // };\n\n//     // const addCheckboxesToDates = (event) => {\n//     //     const allDates = getDatesBetween(event.start, event.end);\n\n//     //     const calendarEl = document.querySelector(\".calendar-container\");\n//     //     allDates.forEach((date) => {\n//     //         const dateCell = calendarEl.querySelector(`[data-date=\"${date}\"]`);\n//     //         dateCell.classList.add(\"selected-date\");\n//     //     });\n//     // };\n\n//     const handleEventClick = (event) => {\n//         setSelectedEvent(event);\n//         setSelectedDate(null); // Reset selected date\n//         // addCheckboxesToDates(event);\n//     };\n\n//     return (\n//         <div className=\"containe\">\n//             <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\n//                 <h2>Event List</h2>\n//                 <ul>\n//                     {events.map((event, i) => (\n//                         <li\n//                             key={i}\n//                             onClick={() => handleEventClick(event)}\n//                             style={{\n//                                 cursor: \"pointer\",\n//                                 fontWeight:\n//                                     selectedEvent && selectedEvent.id === event.id\n//                                         ? \"bold\"\n//                                         : \"normal\",\n//                             }}\n//                         >\n//                             {event.title}\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//             <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\n//                 <FullCalendar\n//                     plugins={[dayGridPlugin, interactionPlugin]}\n//                     initialView=\"dayGridMonth\"\n//                     selectable={true}\n//                     events={events}\n//                     dayCellContent={renderDateCell}\n//                     eventContent={(info) => {\n//                         return (\n//                             <div>\n//                                 <div>{info.event.title}</div>\n//                             </div>\n//                         );\n//                     }}\n//                 />\n//             </div>\n//         </div>\n//     );\n// }\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/SecondMonth.js",["816"],"import React, { useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\n// export default function SecondMonth() {\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [events, setEvents] = useState([]);\n//   console.log(events, \"events ssssssss\");\n//   const externalEvent = [\n//     { id: 1, title: \"Event 1\", start: \"2023-06-01\", end: \"2023-06-02\" },\n//     { id: 2, title: \"Event 2\", start: \"2023-06-03\", end: \"2023-06-04\" },\n//     { id: 3, title: \"Event 3\", start: \"2023-06-05\", end: \"2023-06-06\" },\n//     { id: 4, title: \"Event 4\", start: \"2023-06-07\", end: \"2023-06-08\" },\n//   ];\n\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n//   console.log(selectedEvent, \"lllllllloooooo\");\n//   const [selectedCheckboxes, setSelectedCheckboxes] = useState({});\n\n//   function handleDateCellChange(dateInfo) {\n//     // dateInfo.event = selectedEvent;\n//     console.log(dateInfo, \"handleDateCellChange top console\");\n//     const checkboxKey = dateInfo.date.toISOString();\n\n//     // console.log(selectedDateValuea, \"selectedDateValuea id\")\n//     const selectedDateValue = dateInfo.date.valueOf();\n//     console.log(dateInfo.event.id, \"dateInfo -> dateInfo.kkk\");\n\n//     const isChecked = selectedCheckboxes[checkboxKey];\n\n//     if (isChecked) {\n//       // Unselecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//         const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//         delete updatedCheckboxes[checkboxKey];\n//         return updatedCheckboxes;\n//       });\n\n//       const filteredEvents = events.filter(\n//         (event) => event.start.valueOf() !== selectedDateValue\n//       );\n\n//       console.log(filteredEvents, \"iiiiiii\");\n\n//       setSelectedEvent(null);\n//       setSelectedDate(null);\n//       setEvents(filteredEvents);\n//     } else {\n//       // Selecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//         ...prevSelectedCheckboxes,\n//         [checkboxKey]: true,\n//       }));\n\n//       const event = {\n//         id: selectedEvent.id,\n//         title: selectedEvent.title,\n//         start: dateInfo.date,\n//       };\n//       setEvents((prevEvents) => [...prevEvents, event]);\n//     }\n//   }\n\n//   function handleDateCellChange(dateInfo) {\n//     const checkboxKey = dateInfo.date.toISOString();\n//     const selectedDateValue = dateInfo.date.valueOf();\n//     const isChecked = selectedCheckboxes[checkboxKey];\n\n//     if (isChecked) {\n//       // Unselecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//         const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//         delete updatedCheckboxes[checkboxKey];\n//         return updatedCheckboxes;\n//       });\n\n//       const filteredEvents = events.filter(\n//         (event) => event.start.valueOf() !== selectedDateValue\n//       );\n\n//       setSelectedEvent(null);\n//       setSelectedDate(null);\n//       setEvents(filteredEvents);\n//     } else {\n//       // Selecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//         ...prevSelectedCheckboxes,\n//         [checkboxKey]: true,\n//       }));\n\n//       const event = {\n//         id: selectedEvent.id,\n//         title: selectedEvent.title,\n//         start: dateInfo.date,\n//       };\n//       setEvents((prevEvents) => [...prevEvents, event]);\n//     }\n//   }\n\n//   const renderDateCell = (dateInfo) => {\n//     const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\n//     const isSelected = selectedDateValue === dateInfo.date.valueOf();\n//     const isEventSelected = selectedEvent;\n\n//     if (isEventSelected) {\n//       const checkboxKey = dateInfo.date.toISOString();\n//       return (\n//         <div>\n//           <input\n//             name={`checkbox-${checkboxKey}`}\n//             type=\"checkbox\"\n//             checked={isSelected || selectedCheckboxes[checkboxKey]}\n//             onChange={() => handleDateCellChange(dateInfo)}\n//           />\n//           {dateInfo.dayNumberText}\n//         </div>\n//       );\n//     }\n\n//     return dateInfo.dayNumberText;\n//   };\n//   const handleEventClick = (event) => {\n//     setSelectedEvent(event);\n//     setSelectedDate(null); // Reset selected date\n//   };\n\n//   return (\n//     <div className=\"containe\">\n//       <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\n//         <h2>Event List</h2>\n//         <ul>\n//           {externalEvent.map((event, i) => (\n//             <li\n//               key={i}\n//               onClick={() => handleEventClick(event)}\n//               style={{\n//                 cursor: \"pointer\",\n//                 fontWeight:\n//                   selectedEvent && selectedEvent.id === event.id\n//                     ? \"bold\"\n//                     : \"normal\",\n//               }}\n//             >\n//               {event.title}\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\n//         <FullCalendar\n//           plugins={[dayGridPlugin, interactionPlugin]}\n//           initialView=\"dayGridMonth\"\n//           selectable={true}\n//           events={events}\n//           dayCellContent={renderDateCell}\n//           eventContent={(info) => {\n//             return (\n//               <div>\n//                 <div>{info.event.title}</div>\n//               </div>\n//             );\n//           }}\n//         />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default function SecondMonth() {\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [events, setEvents] = useState([]);\n//   const externalEvent = [\n//     { id: 1, title: \"Event 1\", start: \"2023-06-01\", end: \"2023-06-02\" },\n//     { id: 2, title: \"Event 2\", start: \"2023-06-03\", end: \"2023-06-04\" },\n//     { id: 3, title: \"Event 3\", start: \"2023-06-05\", end: \"2023-06-06\" },\n//     { id: 4, title: \"Event 4\", start: \"2023-06-07\", end: \"2023-06-08\" },\n//   ];\n\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n//   const [selectedCheckboxes, setSelectedCheckboxes] = useState({});\n//   const [isEventSelected, setIsEventSelected] = useState(false);\n\n//   function handleDateCellChange(dateInfo) {\n//     const checkboxKey = dateInfo.date.toISOString();\n//     const isChecked = selectedCheckboxes[checkboxKey];\n\n//     if (isChecked) {\n//       // Unselecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//         const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//         delete updatedCheckboxes[checkboxKey];\n//         return updatedCheckboxes;\n//       });\n\n//       const filteredEvents = events.filter(\n//         (event) => event.start !== dateInfo.date.toISOString()\n//       );\n\n//       setSelectedEvent(null);\n//       setSelectedDate(null);\n//       setEvents(filteredEvents);\n//     } else {\n//       // Selecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//         ...prevSelectedCheckboxes,\n//         [checkboxKey]: true,\n//       }));\n\n//       const event = {\n//         id: selectedEvent.id,\n//         title: selectedEvent.title,\n//         start: dateInfo.date,\n//       };\n//       setEvents((prevEvents) => [...prevEvents, event]);\n//     }\n//   }\n\n//   const handleEventClick = (event) => {\n//     setSelectedEvent(event);\n//     setSelectedDate(null); // Reset selected date\n//     setSelectedCheckboxes({});\n//     setIsEventSelected(true); // Set isEventSelected to true\n//   };\n\n//   function handleDateCellChange(dateInfo) {\n//     const checkboxKey = dateInfo.date.toISOString();\n//     const isChecked = selectedCheckboxes[checkboxKey];\n\n//     if (isChecked) {\n//       // Unselecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//         const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//         delete updatedCheckboxes[checkboxKey];\n//         return updatedCheckboxes;\n//       });\n\n//       const filteredEvents = events.filter(\n//         (event) => event.start !== dateInfo.date.toISOString()\n//       );\n\n//       setSelectedEvent(null);\n//       setSelectedDate(null);\n//       setEvents(filteredEvents);\n//     } else {\n//       // Selecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//         ...prevSelectedCheckboxes,\n//         [checkboxKey]: true,\n//       }));\n\n//       const event = {\n//         id: selectedEvent.id,\n//         title: selectedEvent.title,\n//         start: dateInfo.date.toISOString(),\n//       };\n//       setEvents((prevEvents) => [...prevEvents, event]);\n//     }\n//   }\n//   // ...existing code...\n\n//   //\n\n//   const handleWeekCellChange = (dayInfo) => {\n//     const { date } = dayInfo;\n//     const selectedDay = new Date(date);\n//     const checkboxKey = selectedDay.toISOString().split(\"T\")[0];\n\n//     setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//       ...prevSelectedCheckboxes,\n//       [checkboxKey]: true,\n//     }));\n\n//     // Add event to the selected day (Sunday)\n//     const eventToAdd = {\n//       id: selectedEvent.id,\n//       title: selectedEvent.title,\n//       start: selectedDay.toISOString().split(\"T\")[0],\n//     };\n//     setEvents((prevEvents) => [...prevEvents, eventToAdd]);\n//   };\n\n//   const renderDayHeader = (dayInfo) => {\n//     const { date } = dayInfo;\n//     const checkboxKey = date.toISOString();\n//     const isChecked = selectedCheckboxes[checkboxKey];\n\n//     if (isEventSelected) {\n//       return (\n//         <div>\n//           <input\n//             name={`checkbox-${checkboxKey}`}\n//             type=\"checkbox\"\n//             checked={isChecked}\n//             onChange={() => handleWeekCellChange(dayInfo)}\n//           />\n//           {date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}\n//         </div>\n//       );\n//     } else {\n//       return (\n//         <div>{date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}</div>\n//       );\n//     }\n//   };\n\n//   const renderDateCell = (dateInfo) => {\n//     const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\n//     const isSelected = selectedDateValue === dateInfo.date.valueOf();\n//     const isEventSelected = selectedEvent;\n\n//     if (isEventSelected) {\n//       const checkboxKey = dateInfo.date.toISOString();\n//       return (\n//         <div>\n//           <input\n//             name={`checkbox-${checkboxKey}`}\n//             type=\"checkbox\"\n//             checked={isSelected || selectedCheckboxes[checkboxKey]}\n//             onChange={() => handleDateCellChange(dateInfo)}\n//           />\n//           {dateInfo.dayNumberText}\n//         </div>\n//       );\n//     }\n//     return dateInfo.dayNumberText;\n//   };\n\n//   return (\n//     <div className=\"fullcalendar-box\">\n//       <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\n//         <h2>Event List</h2>\n//         <ul>\n//           {externalEvent.map((event, i) => (\n//             <li\n//               key={i}\n//               onClick={() => handleEventClick(event)}\n//               style={{\n//                 cursor: \"pointer\",\n//                 fontWeight:\n//                   selectedEvent && selectedEvent.id === event.id\n//                     ? \"bold\"\n//                     : \"normal\",\n//               }}\n//             >\n//               {event.title}\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\n//         <FullCalendar\n//           plugins={[dayGridPlugin, interactionPlugin]}\n//           initialView=\"dayGridMonth\"\n//           selectable={true}\n//           events={events}\n//           dayHeaderContent={renderDayHeader}\n//           dayCellContent={renderDateCell}\n//           eventContent={(info) => (\n//             <div>\n//               <div>{info.event.title}</div>\n//             </div>\n//           )}\n//           headerToolbar={{\n//             start: \"title\",\n//             center: \"selectWeekButton\",\n//             end: \"today prev,next\",\n//           }}\n//         />\n//       </div>\n//     </div>\n//   );\n// }\n// month day logic\nexport default function SecondMonth() {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [events, setEvents] = useState([]);\n  const externalEvent = [\n    { id: 1, title: \"Event 1\", start: \"2023-06-01\", end: \"2023-06-02\" },\n    { id: 2, title: \"Event 2\", start: \"2023-06-03\", end: \"2023-06-04\" },\n    { id: 3, title: \"Event 3\", start: \"2023-06-05\", end: \"2023-06-06\" },\n    { id: 4, title: \"Event 4\", start: \"2023-06-07\", end: \"2023-06-08\" },\n  ];\n\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [selectedCheckboxes, setSelectedCheckboxes] = useState({});\n  const [isEventSelected, setIsEventSelected] = useState(false);\n\n  //   function handleDateCellChange(dateInfo) {\n  //     const checkboxKey = dateInfo.date.toISOString();\n  //     const isChecked = selectedCheckboxes[checkboxKey];\n\n  //     if (isChecked) {\n  //       // Unselecting the checkbox\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => {\n  //         const updatedCheckboxes = { ...prevSelectedCheckboxes };\n  //         delete updatedCheckboxes[checkboxKey];\n  //         return updatedCheckboxes;\n  //       });\n\n  //       const filteredEvents = events.filter(\n  //         (event) => event.start !== dateInfo.date.toISOString()\n  //       );\n\n  //       setSelectedEvent(null);\n  //       setSelectedDate(null);\n  //       setEvents(filteredEvents);\n  //     } else {\n  //       // Selecting the checkbox\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n  //         ...prevSelectedCheckboxes,\n  //         [checkboxKey]: true,\n  //       }));\n\n  //       const event = {\n  //         id: selectedEvent.id,\n  //         title: selectedEvent.title,\n  //         start: dateInfo.date,\n  //       };\n  //       setEvents((prevEvents) => [...prevEvents, event]);\n  //     }\n  //   }\n\n  const handleEventClick = (event) => {\n    setSelectedEvent(event);\n    setSelectedDate(null); // Reset selected date\n    setSelectedCheckboxes({});\n    setIsEventSelected(true); // Set isEventSelected to true\n  };\n\n  //   function handleDateCellChange(dateInfo) {\n  //     const checkboxKey = dateInfo.date.toISOString();\n  //     const isChecked = selectedCheckboxes[checkboxKey];\n\n  //     if (isChecked) {\n  //       // Unselecting the checkbox\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => {\n  //         const updatedCheckboxes = { ...prevSelectedCheckboxes };\n  //         delete updatedCheckboxes[checkboxKey];\n  //         return updatedCheckboxes;\n  //       });\n\n  //       const filteredEvents = events.filter(\n  //         (event) => event.start !== dateInfo.date.toISOString()\n  //       );\n\n  //       setSelectedEvent(null);\n  //       setSelectedDate(null);\n  //       setEvents(filteredEvents);\n  //     } else {\n  //       // Selecting the checkbox\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n  //         ...prevSelectedCheckboxes,\n  //         [checkboxKey]: true,\n  //       }));\n\n  //       const event = {\n  //         id: selectedEvent.id,\n  //         title: selectedEvent.title,\n  //         start: dateInfo.date.toISOString(),\n  //       };\n  //       setEvents((prevEvents) => [...prevEvents, event]);\n  //     }\n  //   }\n\n  function handleDateCellChange(dateInfo) {\n    const checkboxKey = dateInfo.date.toISOString();\n    const isChecked = selectedCheckboxes[checkboxKey];\n\n    if (isChecked) {\n      // Unselecting the checkbox\n      setSelectedCheckboxes((prevSelectedCheckboxes) => {\n        const updatedCheckboxes = { ...prevSelectedCheckboxes };\n        delete updatedCheckboxes[checkboxKey];\n        return updatedCheckboxes;\n      });\n\n      const filteredEvents = events.filter(\n        (event) => event.start !== dateInfo.date.toISOString()\n      );\n\n      setSelectedEvent(null);\n      setSelectedDate(null);\n      setEvents(filteredEvents);\n    } else {\n      // Selecting the checkbox\n      setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n        [checkboxKey]: true,\n      }));\n\n      const existingEvent = events.find(\n        (event) => event.start === dateInfo.date.toISOString()\n      );\n\n      if (!existingEvent) {\n        const event = {\n          id: selectedEvent.id,\n          title: selectedEvent.title,\n          start: dateInfo.date.toISOString(),\n        };\n        setEvents((prevEvents) => [...prevEvents, event]);\n      }\n    }\n  }\n\n  //   const handleWeekCellChange = (dayInfo) => {\n  //     function getDatesForDayOfWeek(year, month, dayOfWeek) {\n  //       const dates = [];\n  //       const date = new Date(year, month, 1); // Subtract 1 from month since JavaScript months are zero-based\n  //       const targetDay = dayOfWeek % 7; // Normalize dayOfWeek to 0-6 range (Sunday is 0)\n  //       while (date.getMonth() === month) {\n  //         if (date.getDay() === targetDay) {\n  //           dates.push(date.getDate());\n  //         }\n  //         date.setDate(date.getDate() + 1);\n  //       }\n\n  //       return dates;\n  //     }\n\n  //     const dates = getDatesForDayOfWeek(\n  //       new Date(dayInfo.date).getFullYear(),\n  //       new Date(dayInfo.date).getMonth(),\n  //       new Date(dayInfo.date).getDay()\n  //     );\n  //     console.log(dates, \"datesssss\");\n  //     const { date } = dayInfo;\n  //     const selectedDay = new Date(date);\n  //     const checkboxKey = selectedDay.toISOString().split(\"T\")[0];\n\n  //     setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n  //       ...prevSelectedCheckboxes,\n  //       [checkboxKey]: true,\n  //     }));\n\n  //     // Add event to the selected day (Sunday)\n  //     // const eventToAdd = {\n  //     //   id: selectedEvent.id,\n  //     //   title: selectedEvent.title,\n  //     //   start: selectedDay.toISOString().split(\"T\")[0],\n  //     // };\n  //     // setEvents((prevEvents) => [...prevEvents, eventToAdd]);\n  //   };\n\n  //   const handleWeekCellChange = (dayInfo) => {\n  //     function getDatesForDayOfWeek(year, month, dayOfWeek) {\n  //       const dates = [];\n  //       const date = new Date(year, month, 1); // Subtract 1 from month since JavaScript months are zero-based\n  //       const targetDay = dayOfWeek % 7; // Normalize dayOfWeek to 0-6 range (Sunday is 0)\n  //       while (date.getMonth() === month) {\n  //         if (date.getDay() === targetDay) {\n  //           dates.push(date.getDate());\n  //         }\n  //         date.setDate(date.getDate() + 1);\n  //       }\n\n  //       return dates;\n  //     }\n\n  //     const dates = getDatesForDayOfWeek(\n  //       new Date(dayInfo.date).getFullYear(),\n  //       new Date(dayInfo.date).getMonth(),\n  //       new Date(dayInfo.date).getDay()\n  //     );\n\n  //     dates.forEach((date) => {\n  //       const selectedDay = new Date(dayInfo.date);\n  //       selectedDay.setDate(date);\n  //       const checkboxKey = selectedDay.toISOString().split(\"T\")[0];\n\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n  //         ...prevSelectedCheckboxes,\n  //         [checkboxKey]: true,\n  //       }));\n\n  //       // Add event to the selected day\n  //       const eventToAdd = {\n  //         id: selectedEvent.id,\n  //         title: selectedEvent.title,\n  //         start: selectedDay.toISOString().split(\"T\")[0],\n  //       };\n  //       setEvents((prevEvents) => [...prevEvents, eventToAdd]);\n  //     });\n  //   };\n\n  //   const handleWeekCellChange = (dayInfo) => {\n  //     function getDatesForDayOfWeek(year, month, dayOfWeek) {\n  //       const dates = [];\n  //       const date = new Date(year, month, 1); // Subtract 1 from month since JavaScript months are zero-based\n  //       const targetDay = dayOfWeek % 7; // Normalize dayOfWeek to 0-6 range (Sunday is 0)\n  //       while (date.getMonth() === month) {\n  //         if (date.getDay() === targetDay) {\n  //           dates.push(new Date(date)); // Push a new Date object to the array\n  //         }\n  //         date.setDate(date.getDate() + 1);\n  //       }\n  //       return dates;\n  //     }\n\n  //     const dates = getDatesForDayOfWeek(\n  //       new Date(dayInfo.date).getFullYear(),\n  //       new Date(dayInfo.date).getMonth(),\n  //       new Date(dayInfo.date).getDay()\n  //     );\n\n  //     dates.forEach((date) => {\n  //       const checkboxKey = date.toISOString().split(\"T\")[0];\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n  //         ...prevSelectedCheckboxes,\n  //         [checkboxKey]: true,\n  //       }));\n\n  //       // Check if the event already exists for the selected date\n  //       const existingEvent = events.find(\n  //         (event) => event.start === date.toISOString().split(\"T\")[0]\n  //       );\n\n  //       // Add event to the selected day if it doesn't already exist\n  //       if (!existingEvent) {\n  //         const eventToAdd = {\n  //           id: selectedEvent.id,\n  //           title: selectedEvent.title,\n  //           start: date.toISOString().split(\"T\")[0],\n  //         };\n  //         setEvents((prevEvents) => [...prevEvents, eventToAdd]);\n  //       }\n  //     });\n  //   };\n\n  const handleWeekCellChange = (year, month, dayOfWeek) => {\n    function getDatesForDayOfWeek(year, month, dayOfWeek) {\n      const dates = [];\n      const date = new Date(year, month, 1); // Subtract 1 from month since JavaScript months are zero-based\n      const targetDay = dayOfWeek % 7; // Normalize dayOfWeek to 0-6 range (Sunday is 0)\n      while (date.getMonth() === month) {\n        if (date.getDay() === targetDay) {\n          dates.push(new Date(date)); // Push a new Date object to the array\n        }\n        date.setDate(date.getDate() + 1);\n      }\n      return dates;\n    }\n\n    // const dates = getDatesForDayOfWeek(\n    //   new Date(dayInfo.date).getFullYear(),\n    //   new Date(dayInfo.date).getMonth(),\n    //   new Date(dayInfo.date).getDay()\n    // );\n\n    const dates = getDatesForDayOfWeek(year, month, dayOfWeek);\n\n    dates.forEach((date) => {\n      console.log(date, \"kkkkkk\");\n\n      // const checkboxKey = inputdate.replace(/\\//g, \"-\");\n      const checkboxKey = date;\n\n      console.log(checkboxKey, \"unitqkjn\");\n\n      setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n        ...prevSelectedCheckboxes,\n        [checkboxKey]: true,\n      }));\n      console.log(selectedCheckboxes, \"sgvyhjmffgbhnj\");\n\n      // Check if the event already exists for the selected date\n      const existingEvent = events.find(\n        (event) => event.start === date.toISOString().split(\"T\")[0]\n      );\n\n      if (!existingEvent) {\n        // Add event to the selected date\n        const eventToAdd = {\n          id: selectedEvent.id,\n          title: selectedEvent.title,\n          start: date.toISOString().split(\"T\")[0],\n        };\n        setEvents((prevEvents) => [...prevEvents, eventToAdd]);\n      }\n    });\n  };\n\n  function getMonthFromString(mon) {\n    return new Date(Date.parse(mon + \" 1, 2012\")).getMonth() + 1;\n  }\n\n  const renderDayHeader = (dayInfo) => {\n    console.log(dayInfo, \"renderDayHeader console\");\n    const { date } = dayInfo;\n    const checkboxKey = date.toISOString();\n    const isChecked = selectedCheckboxes[checkboxKey];\n    console.log(isChecked, \"kkkk\");\n\n    if (isEventSelected) {\n      return (\n        <div>\n          <input\n            className=\"day-checkbox\"\n            name={`checkbox-${checkboxKey}`}\n            type=\"checkbox\"\n            checked={isChecked}\n            onChange={() => {\n              const monthYrStr = document.querySelector(\"#fc-dom-2\").innerHTML;\n              const monthYrArr = monthYrStr.split(\" \");\n              console.log(\"monthYrArr #696\", monthYrArr);\n              console.log(\n                monthYrArr[1],\n                getMonthFromString(monthYrArr[0]),\n                date.getDay()\n              );\n            }}\n          />\n          {date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}\n        </div>\n      );\n    } else {\n      return (\n        <div>{date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}</div>\n      );\n    }\n  };\n\n  const renderDateCell = (dateInfo) => {\n    const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\n    const isSelected = selectedDateValue === dateInfo.date.valueOf();\n    const isEventSelected = selectedEvent;\n\n    if (isEventSelected) {\n      const checkboxKey = dateInfo.date.toISOString();\n      return (\n        <div>\n          <input\n            name={`checkbox-${checkboxKey}`}\n            type=\"checkbox\"\n            checked={isSelected || selectedCheckboxes[checkboxKey]}\n            onChange={() => handleDateCellChange(dateInfo)}\n          />\n          {dateInfo.dayNumberText}\n        </div>\n      );\n    }\n    return dateInfo.dayNumberText;\n  };\n\n  return (\n    <div className=\"fullcalendar-box\">\n      <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\n        <h2>Event List</h2>\n        <ul>\n          {externalEvent.map((event, i) => (\n            <li\n              key={i}\n              onClick={() => handleEventClick(event)}\n              style={{\n                cursor: \"pointer\",\n                fontWeight:\n                  selectedEvent && selectedEvent.id === event.id\n                    ? \"bold\"\n                    : \"normal\",\n              }}\n            >\n              {event.title}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\n        <FullCalendar\n          plugins={[dayGridPlugin, interactionPlugin]}\n          initialView=\"dayGridMonth\"\n          selectable={true}\n          events={events}\n          dayHeaderContent={renderDayHeader}\n          dayCellContent={renderDateCell}\n          eventContent={(info) => (\n            <div>\n              <div>{info.event.title}</div>\n            </div>\n          )}\n          headerToolbar={{\n            start: \"title\",\n            center: \"selectWeekButton\",\n            end: \"today prev,next\",\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/DesignMonthSchedule.js",["817"],{"ruleId":"818","severity":1,"message":"819","line":1,"column":37,"nodeType":"820","messageId":"821","endLine":1,"endColumn":45},{"ruleId":"818","severity":1,"message":"822","line":2,"column":10,"nodeType":"820","messageId":"821","endLine":2,"endColumn":12},{"ruleId":"823","severity":1,"message":"824","line":37,"column":8,"nodeType":"825","endLine":37,"endColumn":33,"suggestions":"826"},{"ruleId":"818","severity":1,"message":"827","line":6,"column":10,"nodeType":"820","messageId":"821","endLine":6,"endColumn":13},{"ruleId":"818","severity":1,"message":"828","line":6,"column":15,"nodeType":"820","messageId":"821","endLine":6,"endColumn":18},{"ruleId":"818","severity":1,"message":"829","line":6,"column":20,"nodeType":"820","messageId":"821","endLine":6,"endColumn":24},{"ruleId":"818","severity":1,"message":"830","line":61,"column":9,"nodeType":"820","messageId":"821","endLine":61,"endColumn":17},{"ruleId":"818","severity":1,"message":"831","line":2,"column":18,"nodeType":"820","messageId":"821","endLine":2,"endColumn":26},{"ruleId":"818","severity":1,"message":"832","line":6,"column":8,"nodeType":"820","messageId":"821","endLine":6,"endColumn":17},{"ruleId":"818","severity":1,"message":"833","line":7,"column":8,"nodeType":"820","messageId":"821","endLine":7,"endColumn":16},{"ruleId":"818","severity":1,"message":"834","line":8,"column":8,"nodeType":"820","messageId":"821","endLine":8,"endColumn":29},{"ruleId":"818","severity":1,"message":"835","line":9,"column":8,"nodeType":"820","messageId":"821","endLine":9,"endColumn":18},{"ruleId":"823","severity":1,"message":"836","line":40,"column":6,"nodeType":"825","endLine":40,"endColumn":8,"suggestions":"837"},{"ruleId":"818","severity":1,"message":"838","line":2,"column":8,"nodeType":"820","messageId":"821","endLine":2,"endColumn":14},{"ruleId":"823","severity":1,"message":"839","line":27,"column":6,"nodeType":"825","endLine":27,"endColumn":10,"suggestions":"840"},{"ruleId":"818","severity":1,"message":"841","line":2,"column":35,"nodeType":"820","messageId":"821","endLine":2,"endColumn":53},{"ruleId":"818","severity":1,"message":"838","line":8,"column":8,"nodeType":"820","messageId":"821","endLine":8,"endColumn":14},{"ruleId":"823","severity":1,"message":"842","line":78,"column":6,"nodeType":"825","endLine":78,"endColumn":8,"suggestions":"843"},{"ruleId":"823","severity":1,"message":"844","line":200,"column":5,"nodeType":"825","endLine":200,"endColumn":18,"suggestions":"845"},{"ruleId":"846","severity":1,"message":"847","line":58,"column":9,"nodeType":"848","messageId":"849","endLine":58,"endColumn":15},{"ruleId":"846","severity":1,"message":"847","line":61,"column":9,"nodeType":"848","messageId":"849","endLine":61,"endColumn":15},{"ruleId":"846","severity":1,"message":"847","line":64,"column":9,"nodeType":"848","messageId":"849","endLine":64,"endColumn":15},{"ruleId":"846","severity":1,"message":"847","line":67,"column":9,"nodeType":"848","messageId":"849","endLine":67,"endColumn":15},{"ruleId":"818","severity":1,"message":"834","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":29},{"ruleId":"818","severity":1,"message":"850","line":1,"column":35,"nodeType":"820","messageId":"821","endLine":1,"endColumn":40},{"ruleId":"818","severity":1,"message":"831","line":1,"column":42,"nodeType":"820","messageId":"821","endLine":1,"endColumn":50},{"ruleId":"818","severity":1,"message":"827","line":1,"column":25,"nodeType":"820","messageId":"821","endLine":1,"endColumn":28},{"ruleId":"818","severity":1,"message":"828","line":1,"column":30,"nodeType":"820","messageId":"821","endLine":1,"endColumn":33},{"ruleId":"818","severity":1,"message":"850","line":1,"column":35,"nodeType":"820","messageId":"821","endLine":1,"endColumn":40},{"ruleId":"818","severity":1,"message":"831","line":1,"column":42,"nodeType":"820","messageId":"821","endLine":1,"endColumn":50},{"ruleId":"818","severity":1,"message":"850","line":1,"column":35,"nodeType":"820","messageId":"821","endLine":1,"endColumn":40},{"ruleId":"818","severity":1,"message":"831","line":1,"column":42,"nodeType":"820","messageId":"821","endLine":1,"endColumn":50},{"ruleId":"818","severity":1,"message":"851","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":20},{"ruleId":"818","severity":1,"message":"852","line":4,"column":10,"nodeType":"820","messageId":"821","endLine":4,"endColumn":14},{"ruleId":"818","severity":1,"message":"853","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":24},{"ruleId":"818","severity":1,"message":"854","line":9,"column":8,"nodeType":"820","messageId":"821","endLine":9,"endColumn":14},{"ruleId":"818","severity":1,"message":"855","line":14,"column":9,"nodeType":"820","messageId":"821","endLine":14,"endColumn":21},{"ruleId":"818","severity":1,"message":"827","line":1,"column":25,"nodeType":"820","messageId":"821","endLine":1,"endColumn":28},{"ruleId":"818","severity":1,"message":"828","line":1,"column":30,"nodeType":"820","messageId":"821","endLine":1,"endColumn":33},{"ruleId":"818","severity":1,"message":"851","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":20},{"ruleId":"818","severity":1,"message":"852","line":4,"column":10,"nodeType":"820","messageId":"821","endLine":4,"endColumn":14},{"ruleId":"823","severity":1,"message":"856","line":23,"column":6,"nodeType":"825","endLine":23,"endColumn":20,"suggestions":"857"},{"ruleId":"818","severity":1,"message":"858","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":21},{"ruleId":"818","severity":1,"message":"859","line":8,"column":8,"nodeType":"820","messageId":"821","endLine":8,"endColumn":18},{"ruleId":"818","severity":1,"message":"850","line":1,"column":35,"nodeType":"820","messageId":"821","endLine":1,"endColumn":40},{"ruleId":"823","severity":1,"message":"856","line":28,"column":6,"nodeType":"825","endLine":28,"endColumn":20,"suggestions":"860"},{"ruleId":"818","severity":1,"message":"850","line":1,"column":35,"nodeType":"820","messageId":"821","endLine":1,"endColumn":40},{"ruleId":"818","severity":1,"message":"851","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":20},{"ruleId":"818","severity":1,"message":"850","line":1,"column":35,"nodeType":"820","messageId":"821","endLine":1,"endColumn":40},{"ruleId":"818","severity":1,"message":"851","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":20},{"ruleId":"818","severity":1,"message":"861","line":7,"column":8,"nodeType":"820","messageId":"821","endLine":7,"endColumn":22},{"ruleId":"818","severity":1,"message":"862","line":1,"column":10,"nodeType":"820","messageId":"821","endLine":1,"endColumn":21},{"ruleId":"818","severity":1,"message":"863","line":4,"column":8,"nodeType":"820","messageId":"821","endLine":4,"endColumn":22},{"ruleId":"818","severity":1,"message":"864","line":20,"column":21,"nodeType":"820","messageId":"821","endLine":20,"endColumn":33},{"ruleId":"818","severity":1,"message":"865","line":2,"column":8,"nodeType":"820","messageId":"821","endLine":2,"endColumn":16},{"ruleId":"818","severity":1,"message":"866","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":21},{"ruleId":"823","severity":1,"message":"867","line":19,"column":6,"nodeType":"825","endLine":19,"endColumn":8,"suggestions":"868"},{"ruleId":"869","replacedBy":"870"},{"ruleId":"871","replacedBy":"872"},{"ruleId":"818","severity":1,"message":"819","line":1,"column":37,"nodeType":"820","messageId":"821","endLine":1,"endColumn":45},{"ruleId":"818","severity":1,"message":"822","line":2,"column":10,"nodeType":"820","messageId":"821","endLine":2,"endColumn":12},{"ruleId":"818","severity":1,"message":"873","line":16,"column":8,"nodeType":"820","messageId":"821","endLine":16,"endColumn":16},{"ruleId":"823","severity":1,"message":"824","line":38,"column":8,"nodeType":"825","endLine":38,"endColumn":33,"suggestions":"874"},{"ruleId":"818","severity":1,"message":"827","line":6,"column":10,"nodeType":"820","messageId":"821","endLine":6,"endColumn":13},{"ruleId":"818","severity":1,"message":"828","line":6,"column":15,"nodeType":"820","messageId":"821","endLine":6,"endColumn":18},{"ruleId":"818","severity":1,"message":"829","line":6,"column":20,"nodeType":"820","messageId":"821","endLine":6,"endColumn":24},{"ruleId":"818","severity":1,"message":"875","line":30,"column":8,"nodeType":"820","messageId":"821","endLine":30,"endColumn":23},{"ruleId":"818","severity":1,"message":"876","line":1,"column":17,"nodeType":"820","messageId":"821","endLine":1,"endColumn":26},{"ruleId":"818","severity":1,"message":"819","line":1,"column":28,"nodeType":"820","messageId":"821","endLine":1,"endColumn":36},{"ruleId":"818","severity":1,"message":"830","line":61,"column":9,"nodeType":"820","messageId":"821","endLine":61,"endColumn":17},{"ruleId":"818","severity":1,"message":"831","line":158,"column":18,"nodeType":"820","messageId":"821","endLine":158,"endColumn":26},{"ruleId":"818","severity":1,"message":"877","line":162,"column":10,"nodeType":"820","messageId":"821","endLine":162,"endColumn":19},{"ruleId":"818","severity":1,"message":"878","line":170,"column":10,"nodeType":"820","messageId":"821","endLine":170,"endColumn":19},{"ruleId":"818","severity":1,"message":"879","line":170,"column":21,"nodeType":"820","messageId":"821","endLine":170,"endColumn":33},{"ruleId":"823","severity":1,"message":"836","line":40,"column":6,"nodeType":"825","endLine":40,"endColumn":8,"suggestions":"880"},{"ruleId":"818","severity":1,"message":"838","line":2,"column":8,"nodeType":"820","messageId":"821","endLine":2,"endColumn":14},{"ruleId":"823","severity":1,"message":"839","line":27,"column":6,"nodeType":"825","endLine":27,"endColumn":10,"suggestions":"881"},{"ruleId":"818","severity":1,"message":"841","line":2,"column":35,"nodeType":"820","messageId":"821","endLine":2,"endColumn":53},{"ruleId":"818","severity":1,"message":"828","line":4,"column":10,"nodeType":"820","messageId":"821","endLine":4,"endColumn":13},{"ruleId":"818","severity":1,"message":"838","line":8,"column":8,"nodeType":"820","messageId":"821","endLine":8,"endColumn":14},{"ruleId":"823","severity":1,"message":"882","line":61,"column":6,"nodeType":"825","endLine":61,"endColumn":18,"suggestions":"883"},{"ruleId":"823","severity":1,"message":"844","line":218,"column":5,"nodeType":"825","endLine":218,"endColumn":18,"suggestions":"884"},{"ruleId":"846","severity":1,"message":"847","line":58,"column":9,"nodeType":"848","messageId":"849","endLine":58,"endColumn":15},{"ruleId":"846","severity":1,"message":"847","line":61,"column":9,"nodeType":"848","messageId":"849","endLine":61,"endColumn":15},{"ruleId":"846","severity":1,"message":"847","line":64,"column":9,"nodeType":"848","messageId":"849","endLine":64,"endColumn":15},{"ruleId":"846","severity":1,"message":"847","line":67,"column":9,"nodeType":"848","messageId":"849","endLine":67,"endColumn":15},{"ruleId":"818","severity":1,"message":"834","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":29},{"ruleId":"818","severity":1,"message":"850","line":1,"column":35,"nodeType":"820","messageId":"821","endLine":1,"endColumn":40},{"ruleId":"818","severity":1,"message":"831","line":1,"column":42,"nodeType":"820","messageId":"821","endLine":1,"endColumn":50},{"ruleId":"818","severity":1,"message":"827","line":1,"column":25,"nodeType":"820","messageId":"821","endLine":1,"endColumn":28},{"ruleId":"818","severity":1,"message":"828","line":1,"column":30,"nodeType":"820","messageId":"821","endLine":1,"endColumn":33},{"ruleId":"818","severity":1,"message":"850","line":1,"column":35,"nodeType":"820","messageId":"821","endLine":1,"endColumn":40},{"ruleId":"818","severity":1,"message":"831","line":1,"column":42,"nodeType":"820","messageId":"821","endLine":1,"endColumn":50},{"ruleId":"818","severity":1,"message":"850","line":1,"column":35,"nodeType":"820","messageId":"821","endLine":1,"endColumn":40},{"ruleId":"818","severity":1,"message":"831","line":1,"column":42,"nodeType":"820","messageId":"821","endLine":1,"endColumn":50},{"ruleId":"818","severity":1,"message":"851","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":20},{"ruleId":"818","severity":1,"message":"852","line":4,"column":10,"nodeType":"820","messageId":"821","endLine":4,"endColumn":14},{"ruleId":"818","severity":1,"message":"827","line":1,"column":25,"nodeType":"820","messageId":"821","endLine":1,"endColumn":28},{"ruleId":"818","severity":1,"message":"828","line":1,"column":30,"nodeType":"820","messageId":"821","endLine":1,"endColumn":33},{"ruleId":"818","severity":1,"message":"851","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":20},{"ruleId":"818","severity":1,"message":"852","line":4,"column":10,"nodeType":"820","messageId":"821","endLine":4,"endColumn":14},{"ruleId":"818","severity":1,"message":"858","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":21},{"ruleId":"818","severity":1,"message":"853","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":24},{"ruleId":"818","severity":1,"message":"854","line":9,"column":8,"nodeType":"820","messageId":"821","endLine":9,"endColumn":14},{"ruleId":"818","severity":1,"message":"855","line":14,"column":9,"nodeType":"820","messageId":"821","endLine":14,"endColumn":21},{"ruleId":"823","severity":1,"message":"856","line":25,"column":6,"nodeType":"825","endLine":25,"endColumn":20,"suggestions":"885"},{"ruleId":"818","severity":1,"message":"859","line":8,"column":8,"nodeType":"820","messageId":"821","endLine":8,"endColumn":18},{"ruleId":"818","severity":1,"message":"850","line":1,"column":35,"nodeType":"820","messageId":"821","endLine":1,"endColumn":40},{"ruleId":"818","severity":1,"message":"861","line":7,"column":8,"nodeType":"820","messageId":"821","endLine":7,"endColumn":22},{"ruleId":"818","severity":1,"message":"850","line":1,"column":35,"nodeType":"820","messageId":"821","endLine":1,"endColumn":40},{"ruleId":"818","severity":1,"message":"851","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":20},{"ruleId":"823","severity":1,"message":"856","line":28,"column":6,"nodeType":"825","endLine":28,"endColumn":20,"suggestions":"886"},{"ruleId":"818","severity":1,"message":"850","line":1,"column":35,"nodeType":"820","messageId":"821","endLine":1,"endColumn":40},{"ruleId":"818","severity":1,"message":"851","line":3,"column":8,"nodeType":"820","messageId":"821","endLine":3,"endColumn":20},{"ruleId":"818","severity":1,"message":"862","line":1,"column":10,"nodeType":"820","messageId":"821","endLine":1,"endColumn":21},{"ruleId":"818","severity":1,"message":"863","line":4,"column":8,"nodeType":"820","messageId":"821","endLine":4,"endColumn":22},{"ruleId":"818","severity":1,"message":"864","line":20,"column":21,"nodeType":"820","messageId":"821","endLine":20,"endColumn":33},{"ruleId":"818","severity":1,"message":"865","line":2,"column":8,"nodeType":"820","messageId":"821","endLine":2,"endColumn":16},{"ruleId":"818","severity":1,"message":"866","line":5,"column":8,"nodeType":"820","messageId":"821","endLine":5,"endColumn":21},{"ruleId":"823","severity":1,"message":"867","line":19,"column":6,"nodeType":"825","endLine":19,"endColumn":8,"suggestions":"887"},{"ruleId":"818","severity":1,"message":"831","line":17,"column":17,"nodeType":"820","messageId":"821","endLine":17,"endColumn":25},{"ruleId":"818","severity":1,"message":"833","line":20,"column":8,"nodeType":"820","messageId":"821","endLine":20,"endColumn":16},{"ruleId":"818","severity":1,"message":"834","line":21,"column":8,"nodeType":"820","messageId":"821","endLine":21,"endColumn":29},{"ruleId":"818","severity":1,"message":"859","line":23,"column":8,"nodeType":"820","messageId":"821","endLine":23,"endColumn":18},{"ruleId":"818","severity":1,"message":"835","line":24,"column":8,"nodeType":"820","messageId":"821","endLine":24,"endColumn":18},{"ruleId":"818","severity":1,"message":"888","line":38,"column":11,"nodeType":"820","messageId":"821","endLine":38,"endColumn":18},{"ruleId":"818","severity":1,"message":"889","line":39,"column":13,"nodeType":"820","messageId":"821","endLine":39,"endColumn":15},{"ruleId":"818","severity":1,"message":"890","line":57,"column":11,"nodeType":"820","messageId":"821","endLine":57,"endColumn":29},{"ruleId":"891","severity":2,"message":"892","line":11,"column":31,"nodeType":"820","endLine":11,"endColumn":39},{"ruleId":"891","severity":2,"message":"893","line":40,"column":5,"nodeType":"820","endLine":40,"endColumn":14},{"ruleId":"869","replacedBy":"894"},{"ruleId":"871","replacedBy":"895"},{"ruleId":"818","severity":1,"message":"896","line":1,"column":28,"nodeType":"820","messageId":"821","endLine":1,"endColumn":34},{"ruleId":"818","severity":1,"message":"831","line":14,"column":17,"nodeType":"820","messageId":"821","endLine":14,"endColumn":25},{"ruleId":"818","severity":1,"message":"897","line":17,"column":7,"nodeType":"820","messageId":"821","endLine":17,"endColumn":21},{"ruleId":"818","severity":1,"message":"898","line":24,"column":19,"nodeType":"820","messageId":"821","endLine":24,"endColumn":27},{"ruleId":"818","severity":1,"message":"899","line":24,"column":29,"nodeType":"820","messageId":"821","endLine":24,"endColumn":35},{"ruleId":"818","severity":1,"message":"900","line":28,"column":35,"nodeType":"820","messageId":"821","endLine":28,"endColumn":42},{"ruleId":"818","severity":1,"message":"901","line":36,"column":19,"nodeType":"820","messageId":"821","endLine":36,"endColumn":27},{"ruleId":"818","severity":1,"message":"902","line":69,"column":12,"nodeType":"820","messageId":"821","endLine":69,"endColumn":23},{"ruleId":"818","severity":1,"message":"903","line":69,"column":25,"nodeType":"820","messageId":"821","endLine":69,"endColumn":39},{"ruleId":"818","severity":1,"message":"904","line":70,"column":11,"nodeType":"820","messageId":"821","endLine":70,"endColumn":20},{"ruleId":"818","severity":1,"message":"905","line":86,"column":11,"nodeType":"820","messageId":"821","endLine":86,"endColumn":28},{"ruleId":"818","severity":1,"message":"906","line":117,"column":15,"nodeType":"820","messageId":"821","endLine":117,"endColumn":23},{"ruleId":"818","severity":1,"message":"907","line":138,"column":24,"nodeType":"820","messageId":"821","endLine":138,"endColumn":32},{"ruleId":"818","severity":1,"message":"896","line":1,"column":28,"nodeType":"820","messageId":"821","endLine":1,"endColumn":34},{"ruleId":"818","severity":1,"message":"897","line":9,"column":7,"nodeType":"820","messageId":"821","endLine":9,"endColumn":21},{"ruleId":"818","severity":1,"message":"901","line":18,"column":17,"nodeType":"820","messageId":"821","endLine":18,"endColumn":25},{"ruleId":"818","severity":1,"message":"906","line":100,"column":11,"nodeType":"820","messageId":"821","endLine":100,"endColumn":19},{"ruleId":"818","severity":1,"message":"907","line":126,"column":20,"nodeType":"820","messageId":"821","endLine":126,"endColumn":28},{"ruleId":"908","severity":1,"message":"909","line":188,"column":17,"nodeType":"910","endLine":188,"endColumn":43},{"ruleId":"818","severity":1,"message":"896","line":2,"column":28,"nodeType":"820","messageId":"821","endLine":2,"endColumn":34},{"ruleId":"818","severity":1,"message":"897","line":10,"column":7,"nodeType":"820","messageId":"821","endLine":10,"endColumn":21},{"ruleId":"818","severity":1,"message":"901","line":19,"column":17,"nodeType":"820","messageId":"821","endLine":19,"endColumn":25},{"ruleId":"818","severity":1,"message":"906","line":99,"column":11,"nodeType":"820","messageId":"821","endLine":99,"endColumn":19},{"ruleId":"818","severity":1,"message":"911","line":116,"column":9,"nodeType":"820","messageId":"821","endLine":116,"endColumn":25},{"ruleId":"818","severity":1,"message":"907","line":124,"column":20,"nodeType":"820","messageId":"821","endLine":124,"endColumn":28},{"ruleId":"908","severity":1,"message":"909","line":171,"column":17,"nodeType":"910","endLine":171,"endColumn":43},{"ruleId":"818","severity":1,"message":"912","line":604,"column":13,"nodeType":"820","messageId":"821","endLine":604,"endColumn":21},{"ruleId":"818","severity":1,"message":"913","line":741,"column":13,"nodeType":"820","messageId":"821","endLine":741,"endColumn":18},{"ruleId":"818","severity":1,"message":"914","line":758,"column":11,"nodeType":"820","messageId":"821","endLine":758,"endColumn":24},{"ruleId":"818","severity":1,"message":"915","line":784,"column":15,"nodeType":"820","messageId":"821","endLine":784,"endColumn":28},{"ruleId":"818","severity":1,"message":"916","line":630,"column":9,"nodeType":"820","messageId":"821","endLine":630,"endColumn":29},{"ruleId":"818","severity":1,"message":"916","line":67,"column":9,"nodeType":"820","messageId":"821","endLine":67,"endColumn":29},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'io' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.","ArrayExpression",["917"],"'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'response' is assigned a value but never used.","'Dropdown' is defined but never used.","'downArrow' is defined but never used.","'menuIcon' is defined but never used.","'defaultComparisonIcon' is defined but never used.","'deleteIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'callAllScreenApi'. Either include it or remove the dependency array.",["918"],"'useSWR' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["919"],"'getCompositionById' is defined but never used.","React Hook useEffect has missing dependencies: 'getScreenCode' and 'id'. Either include them or remove the dependency array.",["920"],"React Hook useEffect has a missing dependency: 'handleAddClass'. Either include it or remove the dependency array. If 'handleAddClass' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["921"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Badge' is defined but never used.","'tagCloseIcon' is defined but never used.","'Link' is defined but never used.","'PerfectScrollbar' is defined but never used.","'avatar' is defined but never used.","'onFullScreen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'content'. Either include it or remove the dependency array.",["922"],"'emptyMediaImg' is defined but never used.","'nameAvatar' is defined but never used.",["923"],"'layoutSelected' is defined but never used.","'useCallback' is defined but never used.","'WebVideoPlayer' is defined but never used.","'setIsLoading' is assigned a value but never used.","'ReactDOM' is defined but never used.","'getCroppedImg' is defined but never used.","React Hook useCallback has a missing dependency: 'setCroppedAreaPixels'. Either include it or remove the dependency array. If 'setCroppedAreaPixels' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["924"],"no-native-reassign",["925"],"no-negated-in-lhs",["926"],"'Error404' is defined but never used.",["927"],"'testDaySchudele' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'published' is assigned a value but never used.","'setPublished' is assigned a value but never used.",["928"],["929"],"React Hook useEffect has a missing dependency: 'getScreenCode'. Either include it or remove the dependency array.",["930"],["931"],["932"],["933"],["934"],"'history' is assigned a value but never used.","'id' is assigned a value but never used.","'handlePublishcOpen' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"testDaySchudele\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useEffect\" is called in function \"testDaySchudele\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.",["925"],["926"],"'useRef' is defined but never used.","'MyCustomPlugin' is assigned a value but never used.","'allMedia' is assigned a value but never used.","'mutate' is assigned a value but never used.","'mutatej' is assigned a value but never used.","'setState' is assigned a value but never used.","'composition' is assigned a value but never used.","'setComposition' is assigned a value but never used.","'parseMeta' is assigned a value but never used.","'videoMetaDuration' is assigned a value but never used.","'newEvent' is assigned a value but never used.","'timeText' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'handleEventClick' is assigned a value but never used.","'hasEvent' is assigned a value but never used.","'event' is assigned a value but never used.","'desiredFormat' is assigned a value but never used.","'eventToRemove' is assigned a value but never used.","'handleWeekCellChange' is assigned a value but never used.",{"desc":"935","fix":"936"},{"desc":"937","fix":"938"},{"desc":"939","fix":"940"},{"desc":"941","fix":"942"},{"desc":"943","fix":"944"},{"desc":"945","fix":"946"},{"desc":"945","fix":"947"},{"desc":"948","fix":"949"},"no-global-assign","no-unsafe-negation",{"desc":"935","fix":"950"},{"desc":"937","fix":"951"},{"desc":"939","fix":"952"},{"desc":"953","fix":"954"},{"desc":"943","fix":"955"},{"desc":"945","fix":"956"},{"desc":"945","fix":"957"},{"desc":"948","fix":"958"},"Update the dependencies array to be: [dispatch, path, props.history]",{"range":"959","text":"960"},"Update the dependencies array to be: [callAllScreenApi]",{"range":"961","text":"962"},"Update the dependencies array to be: [getData, id]",{"range":"963","text":"964"},"Update the dependencies array to be: [getScreenCode, id]",{"range":"965","text":"966"},"Update the dependencies array to be: [composition, handleAddClass]",{"range":"967","text":"968"},"Update the dependencies array to be: [content, currentIndex]",{"range":"969","text":"970"},{"range":"971","text":"970"},"Update the dependencies array to be: [setCroppedAreaPixels]",{"range":"972","text":"973"},{"range":"974","text":"960"},{"range":"975","text":"962"},{"range":"976","text":"964"},"Update the dependencies array to be: [getScreenCode, isVerified]",{"range":"977","text":"978"},{"range":"979","text":"968"},{"range":"980","text":"970"},{"range":"981","text":"970"},{"range":"982","text":"973"},[1345,1370],"[dispatch, path, props.history]",[1502,1504],"[callAllScreenApi]",[910,914],"[getData, id]",[2472,2474],"[getScreenCode, id]",[6461,6474],"[composition, handleAddClass]",[744,758],"[content, currentIndex]",[963,977],[500,502],"[setCroppedAreaPixels]",[1399,1424],[1502,1504],[910,914],[2076,2088],"[getScreenCode, isVerified]",[7051,7064],[900,914],[963,977],[500,502]]