[{"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/index.js":"1","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/reportWebVitals.js":"2","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/App.js":"3","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/store.js":"4","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/context/ThemeContext.js":"5","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/selectors/AuthSelectors.js":"6","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/services/AuthService.js":"7","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/Error404.js":"8","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/Registration.js":"9","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/ForgotPassword.js":"10","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/Login.js":"11","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/reducers/PostsReducer.js":"12","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/reducers/AuthReducer.js":"13","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/reducers/Reducers.js":"14","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/index.jsx":"15","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Layout.jsx":"16","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/PushScreen.jsx":"17","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/actions/PostTypes.js":"18","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/actions/AuthActions.js":"19","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/utils/api.js":"20","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/index.jsx":"21","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/TestDaySchudele.js":"22","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/DesignMonthSchedule.js":"23","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/LockScreen.js":"24","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/DaySchedule.js":"25","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/SecondMonth.js":"26","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/ScrollToTop.js":"27","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/Footer.js":"28","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/TestDay.js":"29","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/SequenceEdit.js":"30","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/ChooseLayout.jsx":"31","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/SelectComparison.jsx":"32","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/CopyTestDay.jsx":"33","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/MonthSchedule.jsx":"34","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/CopyMonthSchedule.jsx":"35","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/details.jsx":"36","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/EditComposition.jsx":"37","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/CreateComposition.jsx":"38","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/reports/reportsList.jsx":"39","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/utils/fetchClient.js":"40","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/index.js":"41","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/utils/UtilsService.js":"42","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/index.jsx":"43","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/media/index.jsx":"44","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/index.jsx":"45","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/PublishMediaModal.jsx":"46","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/DeleteConfirmation.jsx":"47","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/WindowsModal.jsx":"48","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/UpdateModal.jsx":"49","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/SelecteMedia.jsx":"50","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddScreenModal.jsx":"51","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddDeviceProfile.jsx":"52","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddGroup.jsx":"53","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/roles.jsx":"54","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/profile.jsx":"55","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/group.jsx":"56","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddUserModal.jsx":"57","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/TableLoader.jsx":"58","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/User.jsx":"59","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/defaultComposition.jsx":"60","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/UploadMediaFileModal.jsx":"61","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/FilterModal.jsx":"62","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/QuickSearchToolbar.js":"63","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/CustomNoRowsOverlay.js":"64","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/tagInputField.jsx":"65","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/DefaultCompositionModal.jsx":"66","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/media/fileUploadWithPreview.jsx":"67","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddNewTagModal.jsx":"68","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/SelectScreenModal.jsx":"69","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/DragMove.jsx":"70","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddMedia.jsx":"71","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/Clock.js":"72","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/listScreens.jsx":"73","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/media/listMedia.jsx":"74","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/ChatBox.js":"75","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/Header.js":"76","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/NavHader.js":"77","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/SideBar.js":"78","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/CompolistionListModel.jsx":"79","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/Logout.js":"80","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/Chat.js":"81","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/MsgBox.js":"82","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/Notes.js":"83","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/Alerts.js":"84","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/reports/Audit.jsx":"85","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/reports/Media.jsx":"86","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/generateReportModal.jsx":"87","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/reports/Uptime.jsx":"88","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/Common.jsx":"89","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/QuickPlayModal.jsx":"90","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/main.jsx":"91","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/saveCompositionName.jsx":"92","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/previewComposition.jsx":"93","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/CompositionTable.jsx":"94","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/ZoneInfoTable.jsx":"95","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/compositionPlayer.jsx":"96","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/WebVideoPlayer.jsx":"97","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/listComposition.jsx":"98","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/viewSchedule.jsx":"99","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/UrlAppModal.jsx":"100","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/ScrollerTextAppModal.jsx":"101","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/YoutubeAppModal.jsx":"102","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/ClockApp.jsx":"103","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/WeatherAppModal.jsx":"104","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/QrCodeModal.jsx":"105","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/RssFeedAppModal.jsx":"106","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/TextAppModal.jsx":"107","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/StocksAppModal.jsx":"108","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/BulletinBoardAppModal.jsx":"109","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AirQualityAppModal.jsx":"110","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/editSelectedComposition.jsx":"111","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/Zone1.jsx":"112","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/Zone2.jsx":"113","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/Zone3.jsx":"114","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/reports/index.jsx":"115","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/integrations/index.jsx":"116","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/CompositionActions.jsx":"117","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/cropImage/cropImage.jsx":"118","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/duplicateComposition.jsx":"119","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/cropImage/index.jsx":"120","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/layouts/viewDetails.jsx":"121","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/ResetPassword.jsx":"122","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/ChangePassword.jsx":"123","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/Verification.jsx":"124","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/VerificationBkp.jsx":"125","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/integrations/PeopleSpace.jsx":"126","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/integrations/Createtemplate.jsx":"127","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/integrations/PeopleSpacePreview.jsx":"128","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/EditTemplate.jsx":"129","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/QuoteModel.jsx":"130","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AllNewsAppModal.jsx":"131","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/GoogleSlideAppModal.jsx":"132","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/MfaPage.jsx":"133","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/TemplateAddContent.jsx":"134","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/DefComplist.jsx":"135","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/QuickPlayList.jsx":"136","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/ScheduleList.jsx":"137"},{"size":1355,"mtime":1692162954223,"results":"138","hashOfConfig":"139"},{"size":362,"mtime":1692162954314,"results":"140","hashOfConfig":"139"},{"size":4377,"mtime":1695648292190,"results":"141","hashOfConfig":"139"},{"size":753,"mtime":1692162954433,"results":"142","hashOfConfig":"139"},{"size":1856,"mtime":1692162953594,"results":"143","hashOfConfig":"139"},{"size":237,"mtime":1695648197946,"results":"144","hashOfConfig":"139"},{"size":3213,"mtime":1695648197938,"results":"145","hashOfConfig":"139"},{"size":1004,"mtime":1692162954304,"results":"146","hashOfConfig":"139"},{"size":5716,"mtime":1692162954306,"results":"147","hashOfConfig":"139"},{"size":2040,"mtime":1692162954305,"results":"148","hashOfConfig":"139"},{"size":12041,"mtime":1695648292297,"results":"149","hashOfConfig":"139"},{"size":1666,"mtime":1692162954431,"results":"150","hashOfConfig":"139"},{"size":2921,"mtime":1695648197943,"results":"151","hashOfConfig":"139"},{"size":1006,"mtime":1692162954432,"results":"152","hashOfConfig":"139"},{"size":5181,"mtime":1695648292277,"results":"153","hashOfConfig":"139"},{"size":4474,"mtime":1695648292264,"results":"154","hashOfConfig":"139"},{"size":22069,"mtime":1695648292268,"results":"155","hashOfConfig":"139"},{"size":503,"mtime":1692162954429,"results":"156","hashOfConfig":"139"},{"size":9137,"mtime":1695648292299,"results":"157","hashOfConfig":"139"},{"size":16362,"mtime":1695648292301,"results":"158","hashOfConfig":"139"},{"size":2722,"mtime":1692162954274,"results":"159","hashOfConfig":"139"},{"size":5400,"mtime":1692162954269,"results":"160","hashOfConfig":"139"},{"size":15987,"mtime":1692162954267,"results":"161","hashOfConfig":"139"},{"size":716,"mtime":1695648197936,"results":"162","hashOfConfig":"139"},{"size":9328,"mtime":1692162954266,"results":"163","hashOfConfig":"139"},{"size":26197,"mtime":1692162954268,"results":"164","hashOfConfig":"139"},{"size":245,"mtime":1692162954283,"results":"165","hashOfConfig":"139"},{"size":412,"mtime":1692162954283,"results":"166","hashOfConfig":"139"},{"size":16218,"mtime":1695648292270,"results":"167","hashOfConfig":"139"},{"size":16382,"mtime":1695648292270,"results":"168","hashOfConfig":"139"},{"size":5041,"mtime":1695648197908,"results":"169","hashOfConfig":"139"},{"size":11618,"mtime":1692162954268,"results":"170","hashOfConfig":"139"},{"size":6538,"mtime":1692162954266,"results":"171","hashOfConfig":"139"},{"size":5817,"mtime":1692162954267,"results":"172","hashOfConfig":"139"},{"size":44423,"mtime":1692162954266,"results":"173","hashOfConfig":"139"},{"size":20009,"mtime":1695648292272,"results":"174","hashOfConfig":"139"},{"size":1062,"mtime":1692162954264,"results":"175","hashOfConfig":"139"},{"size":1045,"mtime":1695648197912,"results":"176","hashOfConfig":"139"},{"size":3169,"mtime":1692162954270,"results":"177","hashOfConfig":"139"},{"size":779,"mtime":1692162954433,"results":"178","hashOfConfig":"139"},{"size":955,"mtime":1692162954285,"results":"179","hashOfConfig":"139"},{"size":86769,"mtime":1695648292300,"results":"180","hashOfConfig":"139"},{"size":4816,"mtime":1695648292272,"results":"181","hashOfConfig":"139"},{"size":6621,"mtime":1695648292265,"results":"182","hashOfConfig":"139"},{"size":7454,"mtime":1695648292273,"results":"183","hashOfConfig":"139"},{"size":7102,"mtime":1695648292287,"results":"184","hashOfConfig":"139"},{"size":773,"mtime":1692162954289,"results":"185","hashOfConfig":"139"},{"size":973,"mtime":1692162954295,"results":"186","hashOfConfig":"139"},{"size":2670,"mtime":1692162954293,"results":"187","hashOfConfig":"139"},{"size":7217,"mtime":1695648292291,"results":"188","hashOfConfig":"139"},{"size":10121,"mtime":1695648292280,"results":"189","hashOfConfig":"139"},{"size":13998,"mtime":1692162954286,"results":"190","hashOfConfig":"139"},{"size":6205,"mtime":1692162954286,"results":"191","hashOfConfig":"139"},{"size":63463,"mtime":1692162954273,"results":"192","hashOfConfig":"139"},{"size":12073,"mtime":1695648292274,"results":"193","hashOfConfig":"139"},{"size":4176,"mtime":1692162954272,"results":"194","hashOfConfig":"139"},{"size":7224,"mtime":1692162954287,"results":"195","hashOfConfig":"139"},{"size":312,"mtime":1692162954224,"results":"196","hashOfConfig":"139"},{"size":6956,"mtime":1692162954272,"results":"197","hashOfConfig":"139"},{"size":3638,"mtime":1692162954272,"results":"198","hashOfConfig":"139"},{"size":3735,"mtime":1695648292294,"results":"199","hashOfConfig":"139"},{"size":8815,"mtime":1695648292285,"results":"200","hashOfConfig":"139"},{"size":568,"mtime":1692162954224,"results":"201","hashOfConfig":"139"},{"size":3480,"mtime":1692162954223,"results":"202","hashOfConfig":"139"},{"size":1695,"mtime":1692162954271,"results":"203","hashOfConfig":"139"},{"size":6618,"mtime":1692162954289,"results":"204","hashOfConfig":"139"},{"size":4255,"mtime":1692162954265,"results":"205","hashOfConfig":"139"},{"size":4439,"mtime":1695648292279,"results":"206","hashOfConfig":"139"},{"size":9023,"mtime":1695648292290,"results":"207","hashOfConfig":"139"},{"size":887,"mtime":1692162954290,"results":"208","hashOfConfig":"139"},{"size":9502,"mtime":1692162954286,"results":"209","hashOfConfig":"139"},{"size":1551,"mtime":1695648292259,"results":"210","hashOfConfig":"139"},{"size":11886,"mtime":1695648292273,"results":"211","hashOfConfig":"139"},{"size":13278,"mtime":1695648292266,"results":"212","hashOfConfig":"139"},{"size":2258,"mtime":1692162954281,"results":"213","hashOfConfig":"139"},{"size":3673,"mtime":1692162954284,"results":"214","hashOfConfig":"139"},{"size":860,"mtime":1695301655396,"results":"215","hashOfConfig":"139"},{"size":6170,"mtime":1695648292279,"results":"216","hashOfConfig":"139"},{"size":7177,"mtime":1695648292283,"results":"217","hashOfConfig":"139"},{"size":1214,"mtime":1695648292278,"results":"218","hashOfConfig":"139"},{"size":12605,"mtime":1692162954242,"results":"219","hashOfConfig":"139"},{"size":12668,"mtime":1692162954242,"results":"220","hashOfConfig":"139"},{"size":5797,"mtime":1692162954243,"results":"221","hashOfConfig":"139"},{"size":5763,"mtime":1692162954241,"results":"222","hashOfConfig":"139"},{"size":1649,"mtime":1692162954270,"results":"223","hashOfConfig":"139"},{"size":1467,"mtime":1692162954270,"results":"224","hashOfConfig":"139"},{"size":7617,"mtime":1692162954298,"results":"225","hashOfConfig":"139"},{"size":2238,"mtime":1692162954270,"results":"226","hashOfConfig":"139"},{"size":8708,"mtime":1695301655374,"results":"227","hashOfConfig":"139"},{"size":6295,"mtime":1692162954291,"results":"228","hashOfConfig":"139"},{"size":8290,"mtime":1695648292276,"results":"229","hashOfConfig":"139"},{"size":2188,"mtime":1692162954302,"results":"230","hashOfConfig":"139"},{"size":15181,"mtime":1692162954301,"results":"231","hashOfConfig":"139"},{"size":9931,"mtime":1695648292263,"results":"232","hashOfConfig":"139"},{"size":10880,"mtime":1695301655375,"results":"233","hashOfConfig":"139"},{"size":4836,"mtime":1695301655391,"results":"234","hashOfConfig":"139"},{"size":2410,"mtime":1692162954274,"results":"235","hashOfConfig":"139"},{"size":7386,"mtime":1695648292264,"results":"236","hashOfConfig":"139"},{"size":6289,"mtime":1695648292271,"results":"237","hashOfConfig":"139"},{"size":7293,"mtime":1695648292294,"results":"238","hashOfConfig":"139"},{"size":10198,"mtime":1695648292289,"results":"239","hashOfConfig":"139"},{"size":9522,"mtime":1695648292296,"results":"240","hashOfConfig":"139"},{"size":16184,"mtime":1695648292282,"results":"241","hashOfConfig":"139"},{"size":14575,"mtime":1695648292295,"results":"242","hashOfConfig":"139"},{"size":14047,"mtime":1695648292287,"results":"243","hashOfConfig":"139"},{"size":15295,"mtime":1695648292289,"results":"244","hashOfConfig":"139"},{"size":14484,"mtime":1695648292293,"results":"245","hashOfConfig":"139"},{"size":14700,"mtime":1695648292292,"results":"246","hashOfConfig":"139"},{"size":22341,"mtime":1695648292282,"results":"247","hashOfConfig":"139"},{"size":12788,"mtime":1695648292280,"results":"248","hashOfConfig":"139"},{"size":6376,"mtime":1692162954296,"results":"249","hashOfConfig":"139"},{"size":8648,"mtime":1695648292274,"results":"250","hashOfConfig":"139"},{"size":16975,"mtime":1695648292275,"results":"251","hashOfConfig":"139"},{"size":25781,"mtime":1695648292275,"results":"252","hashOfConfig":"139"},{"size":8013,"mtime":1695648197921,"results":"253","hashOfConfig":"139"},{"size":14585,"mtime":1695648292262,"results":"254","hashOfConfig":"139"},{"size":7578,"mtime":1695648292263,"results":"255","hashOfConfig":"139"},{"size":2567,"mtime":1692162954244,"results":"256","hashOfConfig":"139"},{"size":2542,"mtime":1695648292296,"results":"257","hashOfConfig":"139"},{"size":764,"mtime":1692162954244,"results":"258","hashOfConfig":"139"},{"size":4141,"mtime":1692162954301,"results":"259","hashOfConfig":"139"},{"size":3277,"mtime":1695648197935,"results":"260","hashOfConfig":"139"},{"size":2061,"mtime":1695648197935,"results":"261","hashOfConfig":"139"},{"size":6525,"mtime":1695648292298,"results":"262","hashOfConfig":"139"},{"size":8894,"mtime":1695648292298,"results":"263","hashOfConfig":"139"},{"size":3762,"mtime":1695648292261,"results":"264","hashOfConfig":"139"},{"size":17420,"mtime":1695648292260,"results":"265","hashOfConfig":"139"},{"size":2874,"mtime":1695648292261,"results":"266","hashOfConfig":"139"},{"size":10113,"mtime":1695648292284,"results":"267","hashOfConfig":"139"},{"size":11873,"mtime":1695648292288,"results":"268","hashOfConfig":"139"},{"size":12555,"mtime":1695648292281,"results":"269","hashOfConfig":"139"},{"size":14477,"mtime":1695648292285,"results":"270","hashOfConfig":"139"},{"size":2056,"mtime":1695648292278,"results":"271","hashOfConfig":"139"},{"size":3958,"mtime":1695648292292,"results":"272","hashOfConfig":"139"},{"size":11804,"mtime":1695648292267,"results":"273","hashOfConfig":"139"},{"size":8269,"mtime":1695648292268,"results":"274","hashOfConfig":"139"},{"size":13361,"mtime":1695648292269,"results":"275","hashOfConfig":"139"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},"mjyqd6",{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"278"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"278"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"278"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"278"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"278"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":11,"source":null},{"filePath":"340","messages":"341","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":7,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"278"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"278"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"278"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"278"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"278"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"278"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":102,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"372","messages":"373","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"374","messages":"375","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"278"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"278"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"392","messages":"393","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"394","usedDeprecatedRules":"278"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"278"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"278"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"278"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"278"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"278"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"278"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"278"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"278"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"435","messages":"436","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"278"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"278"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"278"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"278"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"278"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"278"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"278"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"484","usedDeprecatedRules":"278"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"278"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"490","messages":"491","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"278"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"278"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"498","messages":"499","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"278"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"278"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"278"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"509","messages":"510","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"511","messages":"512","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"513","messages":"514","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"515","messages":"516","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"517","messages":"518","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"519","messages":"520","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"521","messages":"522","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"523","messages":"524","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"525","messages":"526","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"527","messages":"528","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"529","messages":"530","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"531","messages":"532","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"533","messages":"534","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"278"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"538","messages":"539","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"540","messages":"541","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"542","messages":"543","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"278"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"553","messages":"554","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"278"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"278"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"278"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"278"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"278"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"278"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"278"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"278"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"278"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"278"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"278"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"278"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"278"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"278"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"278"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"278"},"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/index.js",[],["606","607"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/reportWebVitals.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/App.js",["608","609","610","611"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/store.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/context/ThemeContext.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/selectors/AuthSelectors.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/services/AuthService.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/Error404.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/Registration.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/ForgotPassword.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/Login.js",["612","613","614","615","616","617","618","619","620","621","622","623","624","625","626"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/reducers/PostsReducer.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/reducers/AuthReducer.js",["627"],"import {\n    LOADING_TOGGLE_ACTION,\n    LOGIN_CONFIRMED_ACTION,\n    LOGIN_FAILED_ACTION,\n    LOGOUT_ACTION,\n    SIGNUP_CONFIRMED_ACTION,\n    SIGNUP_FAILED_ACTION,\n    CLEAR_ERRORS,\n    OTP_CONFIRMED_ACTION,\n    OTP_FAILED_ACTION,\n    RESET_PASSWORD_CONFIRMED_ACTION,\n    RESET_PASSWORD_FAILED_ACTION,\n    GET_PERMISSION_CONFIRMED_ACTION,\n    GET_PERMISSION_FAILED_ACTION\n} from '../actions/AuthActions';\n\nconst initialState = {\n    permission:null,\n    auth: {\n        email: '',\n        idToken: '',\n        localId: '',\n        expiresIn: '',\n        refreshToken: '',\n    },\n    errorMessage: '',\n    successMessage: '',\n    showLoading: false,\n};\n\nexport function AuthReducer(state = initialState, action) {\n    if (action.type === SIGNUP_CONFIRMED_ACTION) {\n        return {\n            ...state,\n            auth: action.payload,\n            permission:null,\n            errorMessage: '',\n            successMessage: 'OTP has been sent to registered email',\n            showLoading: false,\n        };\n    }\n    if (action.type === LOGIN_CONFIRMED_ACTION) {\n        const isV = action?.payload?.vendor?.isVerified;\n        return {\n            ...state,\n            auth: action.payload,\n            permission:null,\n            errorMessage: '',\n            successMessage: !isV ? \"\" : 'Login Successfully Completed',\n            showLoading: false,\n        };\n    }\n    if (action.type === GET_PERMISSION_CONFIRMED_ACTION) {\n        return {\n            ...state,\n            permission: action.payload\n        };\n    }\n\n    if (action.type === OTP_CONFIRMED_ACTION || action.type === RESET_PASSWORD_CONFIRMED_ACTION) {\n        return {\n            ...state,\n            auth: action.payload,\n            errorMessage: '',\n            successMessage: 'Mail has been Sent Successfully',\n            showLoading: false,\n        };\n    }\n\n    if (action.type === LOGOUT_ACTION) {\n        return {\n            ...state,\n            errorMessage: '',\n            successMessage: '',\n            permission:null,\n            auth: {\n                email: '',\n                idToken: '',\n                localId: '',\n                expiresIn: '',\n                refreshToken: '',\n            },\n        };\n    }\n\n    if (\n        action.type === SIGNUP_FAILED_ACTION ||\n        action.type === LOGIN_FAILED_ACTION  ||\n        action.type === OTP_FAILED_ACTION ||\n        action.type === RESET_PASSWORD_FAILED_ACTION\n    ) {\n        return {\n            ...state,\n            errorMessage: action.payload,\n            successMessage: '',\n            showLoading: false,\n        };\n    }\n\n    if (action.type === LOADING_TOGGLE_ACTION) {\n        return {\n            ...state,\n            showLoading: action.payload,\n        };\n    }\n    if (action.type === CLEAR_ERRORS) {\n        return {\n            ...state,\n            errorMessage: '',\n            successMessage: '',\n        };\n    }\n    return state;\n}\n\n    \n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/reducers/Reducers.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/index.jsx",["628","629","630"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Layout.jsx",["631","632","633","634"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/PushScreen.jsx",["635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/actions/PostTypes.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/store/actions/AuthActions.js",["651","652","653","654"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/utils/api.js",["655","656","657","658","659","660","661"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/index.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/TestDaySchudele.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/DesignMonthSchedule.js",["662","663","664","665","666","667","668","669","670","671"],"import React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { Button } from \"react-bootstrap\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport {\n  deleteSequence,\n  getAllDaySequence,\n  pushAddDates,\n} from \"../../../utils/api\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport edit from \"../../../img/edit-composition.png\";\nimport deleteIcon from \"../../../img/delete-icon.png\";\nimport da from \"date-fns/locale/da/index.js\";\nimport { toast } from \"react-toastify\";\nexport default function DesignMonthSchedule() {\n  const history = useHistory();\n  const { id } = useParams();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [events, setEvents] = useState([]);\n  const [daySequence, setDaySequence] = useState([]);\n  const [activeCard, setActiveCard] = useState(false);\n  const [selectedButtonIndex, setSelectedButtonIndex] = useState(null);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [selectedCheckboxes, setSelectedCheckboxes] = useState([]);\n  const [isEventSelected, setIsEventSelected] = useState(false);\n  const [currentMonth, setCurrentMonth] = useState(0);\n\n  var days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  const handleEventClick = (event) => {\n    //setEvents([]);\n    setSelectedEvent(event);\n    setSelectedDate(null); // Reset selected date\n    //setSelectedCheckboxes([]);\n    setIsEventSelected(true);\n  };\n\n  const callAllDaySequence = async (id) => {\n    const list = await getAllDaySequence(id);\n    setDaySequence(list.sequence);\n    console.log(\"list.sequence\", list.sequence);\n    list.sequence.forEach((item) => {\n      if (item.dates && item.dates.length > 0) {\n        console.log(\"isLoading:true\");\n        const datesList = [];\n        item.dates.forEach((item2) => {\n          datesList.push(item2.split(\"T\")[0] + \"*****\" + item._id);\n        });\n        //console.log(\"selectedEvent\",selectedEvent)\n        handlCustomeWeek(datesList, item, true);\n      }\n    });\n    console.log(\"isLoading:false\");\n  };\n  useEffect(() => {\n    callAllDaySequence(id);\n  }, [id]);\n\n  useEffect(() => {}, [selectedCheckboxes, selectedEvent]);\n\n  function handleDateCellChange(dateInfo, isWk, isCustom = false, ev = {}) {\n    if (!isCustom) {\n      const checkboxKey = dateInfo + \"*****\" + selectedEvent._id;\n      const dt = new Date(dateInfo);\n      const isChecked = selectedCheckboxes[checkboxKey];\n      if (isWk) {\n        if (!isChecked) {\n          // Unselecting the checkbox\n          setSelectedCheckboxes((prevSelectedCheckboxes) => {\n            const updatedCheckboxes = { ...prevSelectedCheckboxes };\n            delete updatedCheckboxes[checkboxKey];\n            return updatedCheckboxes;\n          });\n          setEvents((current) =>\n            current.filter((event) => event.start !== dateInfo)\n          );\n        } else {\n          // Selecting the checkbox\n          setSelectedCheckboxes({ ...selectedCheckboxes, [checkboxKey]: true });\n          const existingEvent = events.find(\n            (event) => event.start === dateInfo\n          );\n\n          if (!existingEvent) {\n            const event = {\n              id: selectedEvent._id,\n              title: selectedEvent.name,\n              start: dateInfo,\n            };\n            setEvents((prevEvents) => [...prevEvents, event]);\n          }\n        }\n      } else {\n        if (isChecked) {\n          setSelectedCheckboxes((prevSelectedCheckboxes) => {\n            const updatedCheckboxes = { ...prevSelectedCheckboxes };\n            delete updatedCheckboxes[checkboxKey];\n            updatedCheckboxes[days[dt.getDay()]] = false;\n            return updatedCheckboxes;\n          });\n          //setSelectedCheckboxes({...selectedCheckboxes,[days[dt.getDay()]] : false})\n\n          const filteredEvents = events.filter(\n            (event) => event.start !== dateInfo\n          );\n          setEvents(filteredEvents);\n        } else {\n          const dayList = getSundays(days[dt.getDay()], dt.getDay());\n          let ct = false;\n\n          dayList.forEach((item) => {\n            if (\n              selectedCheckboxes[item.format(\"YYYY-MM-DD\")] &&\n              selectedCheckboxes[item.format(\"YYYY-MM-DD\")] !== undefined\n            ) {\n              ct = true;\n            } else {\n              ct = false;\n            }\n          });\n          setSelectedCheckboxes({\n            ...selectedCheckboxes,\n            [checkboxKey]: true,\n            [days[dt.getDay()]]:\n              ct == true ? true : selectedCheckboxes[dt.getDay()],\n          });\n          const existingEvent = events.find(\n            (event) => event.start === dateInfo\n          );\n\n          if (!existingEvent) {\n            const event = {\n              id: selectedEvent._id,\n              title: selectedEvent.name,\n              start: dateInfo,\n            };\n            setEvents((prevEvents) => [...prevEvents, event]);\n          }\n        }\n      }\n    } else {\n      const checkboxKey = dateInfo;\n      setSelectedCheckboxes({ ...selectedCheckboxes, [checkboxKey]: true });\n      const existingEvent = events.find(\n        (event) => event.start === dateInfo.split(\"*****\")[0]\n      );\n      if (!existingEvent) {\n        const event = {\n          id: ev._id,\n          title: ev.name,\n          start: dateInfo.split(\"*****\")[0],\n        };\n        setEvents((prevEvents) => [...prevEvents, event]);\n      }\n    }\n  }\n\n  const handlCustomeWeek = async (dayList, ev, iswk = true) => {\n    const newArray = selectedCheckboxes;\n    dayList.forEach((item) => {\n      const checkboxKey = item;\n      if (\n        moment(item.split(\"*****\")[0]).format(\"YYYY-MM-DD\") >=\n        moment(new Date()).format(\"YYYY-MM-DD\")\n      ) {\n        newArray[checkboxKey] = true;\n        handleDateCellChange(item, true, true, ev);\n      }\n    });\n    setSelectedCheckboxes(newArray);\n    handleEventClick(ev);\n  };\n\n  const handleWeek = async (e, day, dayInfo, iswk = true) => {\n    const dayList = getSundays(days[day], day);\n    const newArray = selectedCheckboxes;\n    if (e.target.checked) {\n      dayList.forEach((item) => {\n        const checkboxKey =\n          item.format(\"YYYY-MM-DD\") + \"*****\" + selectedEvent._id;\n        if (\n          moment(item._d).format(\"YYYY-MM-DD\") >=\n          moment(new Date()).format(\"YYYY-MM-DD\")\n        ) {\n          newArray[checkboxKey] = true;\n          handleDateCellChange(item.format(\"YYYY-MM-DD\"), iswk);\n          newArray[days[day]] = true;\n        }\n      });\n    } else {\n      dayList.forEach((item) => {\n        const checkboxKey =\n          item.format(\"YYYY-MM-DD\") + \"*****\" + selectedEvent._id;\n        if (newArray[checkboxKey] !== undefined) {\n          delete newArray[checkboxKey];\n        }\n        handleDateCellChange(item.format(\"YYYY-MM-DD\"), iswk);\n        newArray[days[day]] = false;\n      });\n    }\n    setSelectedCheckboxes(newArray);\n  };\n\n  const getSundays = (dayName, dayId) => {\n    const result = [];\n    var startDate = new Date();\n    const cMonth = currentMonth;\n    const cYear = startDate.getFullYear();\n    var endDate = new Date(cYear, cMonth, 31);\n    var day = dayId;\n    for (var i = 0; i <= 7; i++) {\n      if (startDate.toString().indexOf(dayName) !== -1) {\n        break;\n      }\n      startDate = new Date(cYear, cMonth, i);\n    }\n    startDate = moment(startDate);\n    endDate = moment(endDate);\n    result.push(startDate);\n    var current = startDate.clone();\n    while (current.day(7 + day).isBefore(endDate)) {\n      result.push(current.clone());\n    }\n    return result;\n  };\n\n  const renderDayHeader = (dayInfo) => {\n    const { date } = dayInfo;\n    const checkboxKey = dayInfo.date.toISOString();\n    //const isChecked = selectedCheckboxes[checkboxKey];\n\n    if (isEventSelected) {\n      return (\n        <div className=\"month-schedule-header-checkbox\">\n          <input\n            className={`day-checkbox checkbox-day-${dayInfo.date.getDay()} month--${currentMonth}`}\n            name={`checkbox-${checkboxKey}`}\n            type=\"checkbox\"\n            id={`checkbox-${checkboxKey}`}\n            checked={selectedCheckboxes[days[dayInfo.date.getDay()]]}\n            onChange={(e) => {\n              handleWeek(e, dayInfo.date.getDay(), dayInfo);\n            }}\n          />\n          {date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}\n        </div>\n      );\n    } else {\n      return (\n        <div>{date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}</div>\n      );\n    }\n  };\n\n  const renderDateCell = (dateInfo) => {\n    const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\n    const isSelected = selectedDateValue === dateInfo.date.valueOf();\n    const isEventSelected = selectedEvent;\n    if (isEventSelected) {\n      const checkboxKey = dateInfo.date.toISOString();\n      const checkDate = checkboxKey.split(\"T\")[0];\n      const lastDate = moment(checkDate, \"YYYY-MM-DD\")\n        .add(\"days\", 1)\n        .format(\"YYYY-MM-DD\");\n      let disablePrp = false;\n      if (moment(checkDate, \"YYYY-MM-DD\").add(\"days\", 2) < moment()) {\n        disablePrp = true;\n      }\n      let checker = false;\n      daySequence.forEach((i) => {\n        if (selectedCheckboxes[lastDate + \"*****\" + i._id] !== undefined) {\n          checker = true;\n        }\n      });\n\n      return (\n        <div className=\"month-schedule-checkbox\">\n          <input\n            name={`checkbox-${lastDate}`}\n            className={`${disablePrp == true ? \"disabled-checkbox\" : \"\"}`}\n            type=\"checkbox\"\n            //disabled={disablePrp}\n            checked={isSelected || selectedCheckboxes[lastDate] || checker}\n            onChange={() => handleDateCellChange(lastDate, false)}\n          />\n          {dateInfo.dayNumberText}\n        </div>\n      );\n    }\n    return dateInfo.dayNumberText;\n  };\n\n  const makePublishData = (data) => {\n    const result = [];\n    daySequence.forEach((item) => {\n      const newA = [];\n      data.forEach((items, i) => {\n        const spl = items.split(\"*****\");\n        const dt = spl[0];\n        const sq = spl[1];\n        if (sq === item._id) {\n          newA.push(dt);\n        }\n      });\n      if (newA.length > 0) {\n        result.push({\n          sequenceId: item._id,\n          dates: newA,\n        });\n      }\n    });\n    return result;\n  };\n\n  const handlePublish = async (e) => {\n    e.preventDefault();\n\n    //console.log(\"selectedCheckboxes\",selectedCheckboxes);\n\n    const dates = Object.keys(selectedCheckboxes).filter(\n      (i) =>\n        i !== \"Sun\" &&\n        i !== \"Mon\" &&\n        i !== \"Tue\" &&\n        i !== \"Wed\" &&\n        i !== \"Thu\" &&\n        i !== \"Fri\" &&\n        i !== \"Sat\"\n    );\n    const publishData = makePublishData(dates);\n    if (!publishData || publishData.length == 0) {\n      toast.error(\"Please select at least one date\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n\n      return false;\n    }\n    const payload = {\n      scheduleId: id,\n      scheduleArray: publishData,\n    };\n    await pushAddDates(payload).then((res) => {\n      if (res.data.statusCode === 200) {\n        history.push(`/push`);\n      }\n    });\n  };\n\n  const getCurrentMonth = (arg) => {\n    const startDate = arg.view.activeStart;\n    if (arg.view.type === \"dayGridMonth\") {\n      setCurrentMonth(startDate.getMonth() + 1);\n      return;\n    }\n    if (arg.view.type === \"dayGridDay\") {\n      startDate.setDate(startDate.getDate() + 8);\n      setCurrentMonth(startDate.getMonth() + 1);\n      return;\n    }\n  };\n\n  const handleDeleteSequesce = async (sequenceId, id) => {\n    await deleteSequence(sequenceId, id).then((res) => {\n      if (res.data.statusCode === 200) {\n        callAllDaySequence(id);\n      }\n    });\n  };\n\n  const handleButtonClick = (index) => {\n    setSelectedButtonIndex(index);\n    // Perform any other logic specific to the clicked button\n  };\n\n  const handleEditSequesce = (e, seqId, schId) => {\n    e.preventDefault();\n    history.push(`/push/sequence/${schId}/${seqId}`);\n  };\n  return (\n    <>\n      <div className=\"fullcalendar-box\">\n        <div className=\"d-flex justify-content-end\">\n          <Button\n            className=\"mr-2\"\n            onClick={(e) => {\n              handlePublish(e);\n            }}\n            variant=\"info add-screen-btn\"\n          >\n            Publish\n          </Button>\n        </div>\n\n        <div className=\"event-list\">\n          <div className=\"d-flex align-items-center justify-content-between pb-4\">\n            <h3 className=\"p-0\">Day Sequence</h3>\n            <Link to={`/testday/${id}`} className=\"mr-2\">\n              <Button variant=\"info add-screen-btn\">Create New</Button>\n            </Link>\n          </div>\n\n          {daySequence.map((event, i) => {\n            return (\n              <div\n                key={i}\n                className=\"month-schedule-list mt-4\"\n                onClick={() => {\n                  handleButtonClick(i);\n                  handleEventClick(event);\n                  // setActiveCard(true);\n                }}\n              >\n                <div\n                  className=\"d-flex align-items-center px-2 py-4 justify-content-between\"\n                  style={{\n                    boxShadow:\n                      selectedEvent &&\n                      selectedEvent._id &&\n                      selectedEvent._id === event._id\n                        ? \"rgba(0, 0, 0, 0.5) 0px 4px 12px\"\n                        : \"\",\n                  }}\n                  // className={\n                  //   selectedButtonIndex === i\n                  //     ? \"zone zone-active \"\n                  //     : \"zone\"\n                  // }\n                >\n                  <span>\n                    {event.name?.length > 6\n                      ? event.name.slice(0, 6) + \"...\"\n                      : event.name}\n                  </span>\n\n                  <span className=\"total-composition\">\n                    Contains {event.timings.length} compositions\n                  </span>\n                  <span onClick={(e) => handleEditSequesce(e, event._id, id)}>\n                    <img\n                      src={edit}\n                      className=\"dropdown-list-img img-fluid\"\n                      height=\"25px\"\n                      width=\"25px\"\n                    />\n                  </span>\n                  <span onClick={() => handleDeleteSequesce(event._id, id)}>\n                    <img\n                      src={deleteIcon}\n                      className=\"dropdown-list-img img-fluid\"\n                      height=\"30px\"\n                      width=\"30px\"\n                    />\n                  </span>\n                  <span className=\"add-btn\">Add to Calendar </span>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"calendar\" style={{ float: \"left\", width: \"55%\" }}>\n          <FullCalendar\n            className=\"month-schedule\"\n            weekends={true}\n            plugins={[dayGridPlugin, interactionPlugin]}\n            initialView=\"dayGridMonth\"\n            selectable={true}\n            events={events}\n            dayHeaderContent={renderDayHeader}\n            dayCellContent={renderDateCell}\n            //validRange={{\"start\":moment().format('YYYY-MM-DD'),'end':null}}\n            datesSet={(arg) => getCurrentMonth(arg)}\n            eventContent={(info) => (\n              <div className=\"month-schedule-event\">\n                <div>\n                  {info.event.title.length > 5\n                    ? info.event.title.slice(0, 5) + \"...\"\n                    : info.event.title}\n                </div>\n              </div>\n            )}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/LockScreen.js",["672"],"import React from \"react\";\n\nconst LockScreen = ({ history, message }) => {\n   const submitHandler = (e) => {\n      e.preventDefault();\n      history.push(\"/\");\n   };\n   return (\n      <div className=\"row justify-content-center h-100 align-items-center\">\n         <div className=\"col-md-6\">\n            <div className=\"authincation-content\">\n               <div className=\"row no-gutters\">\n                  <div className=\"col-xl-12\">\n                     <div className=\"auth-form\">\n                        <h4 className=\"text-center mb-4\">{message}</h4>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default LockScreen;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/DaySchedule.js",["673","674","675","676","677","678","679","680"],"// import React from 'react'\n// import { useParams, useHistory } from \"react-router-dom\";\n\n// export default function DaySchedule() {\n//     const history = useHistory();\n//     const { id } = useParams();\n//     console.log(id, \"DaySchedule page id\")\n//     return (\n//         <div>DaySchedule</div>\n//     )\n// }\n\n\n\n\nimport React, { useState } from \"react\";\nimport { Table, Dropdown } from \"react-bootstrap\";\nimport AddNewTagModal from \"../../modals/AddNewTagModal\";\nimport downArrow from \"../../../img/down-arrow.png\";\nimport menuIcon from \"../../../img/menu-icon.png\";\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\nimport emptyMediaImg from \"../../../img/addmedia-empty-img.png\";\nimport nameAvatar from \"../../../img/assets-avatar-img.png\";\nimport deleteIcon from \"../../../img/delete-icon.png\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getAllMedia } from \"../../../utils/api\";\nimport useSWR from 'swr'\n\nimport {\n    getDatetimeIn12Hours,\n    humanReadableFormattedDateString,\n} from \"../../../utils/UtilsService\";\nimport DeleteConfirmation from \"../../modals/DeleteConfirmation\";\nimport { deleteMedia, BASE_URL } from \"../../../utils/api\";\nimport PublishMediaModal from \"../../modals/PublishMediaModal\";\n\nconst DaySchedule = () => {\n    const history = useHistory();\n    const { id } = useParams();\n    const { data: allMedia, mutate } = useSWR('/vendor/display/media', getAllMedia);\n    console.log(allMedia, \"day schedule\")\n\n    const [showNewTagModal, setNewTagModal] = useState(false);\n    const [deleteModal, setDeleteModal] = useState(false);\n    const [selectedMedia, setSelectedMedia] = useState(\"\");\n    const [showPublishPopUp, setShowPublishPopUp] = useState(false);\n\n    // use effect\n\n\n    const handleDelete = async () => {\n        setDeleteModal(false)\n        await deleteMedia(selectedMedia._id)\n        mutate()\n    };\n\n    const handlePublishcOpen = (media) => {\n        setShowPublishPopUp(media);\n    }\n    // const parseMeta = (media) => {\n    //     const meta = JSON.parse(media.properties)\n    //     return (\n    //         <span className=\"td-content\">\n    //             {media?.type === \"image\" && <strong>{meta.height} x  {meta.width}</strong>}\n    //             {media?.type === \"video\" && <strong>{meta.length.toFixed(0) / 60} Sec</strong>}\n    //             <span>{meta.size} MB</span>\n    //         </span>\n    //     )\n    // }\n\n    const parseMeta = (media) => {\n        const meta = JSON.parse(media.properties);\n        return (\n            <span className=\"td-content\">\n                {media?.type === \"image\" && <strong>{meta?.height} x {meta?.width}</strong>}\n                {media?.type === \"video\" && meta?.length && (\n                    <strong>{(meta.length / 60).toFixed(0)} Sec</strong>\n                )}\n                {meta?.size && <span>{meta.size} MB</span>}\n            </span>\n        );\n    };\n\n\n    const videoMetaDuration = (media) => {\n        const properties = JSON.parse(media?.properties);\n        if (properties && properties.length) {\n            return (properties.length.toFixed(0) / 60).toFixed(0);\n        }\n        return null;\n    };\n    return (\n        <>\n            <div className=\" d-flex\">\n\n\n                <div className=\"col-7\">\n\n\n                    {allMedia && allMedia.length !== 0 ? (\n                        <Table responsive className=\"custom-table\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Type</th>\n                                    <th>Uploaded Date</th>\n                                    <th>Properties</th>\n                                    <th>Tags</th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {allMedia.map((media) => {\n                                    return (\n                                        <tr key={media._id}>\n                                            <td>\n                                                <span className=\"td-content d-flex name-td-content\">\n                                                    <span className={`name-img mr-2  ${media.type === \"video\" && \"videotableName\"}`}>\n                                                        {media.type === \"image\" && <img\n                                                            className=\"media-img img-fluid\"\n                                                            src={`${BASE_URL}${media.title}`}\n                                                            alt=\"media-img\"\n                                                        />}\n                                                        {media.type === \"video\" && videoMetaDuration(media)}\n                                                    </span>\n                                                    <span className=\"name-content d-flex flex-column flex-grow-1\">\n                                                        <strong>{media.title.split(\"/\")[media.title.split(\"/\").length - 1]}</strong>\n                                                        <span>{media.createdBy.name}</span>\n                                                    </span>\n                                                </span>\n                                            </td>\n                                            <td>{media.type.slice(0, 1).toUpperCase() + media.type.slice(1)}</td>\n                                            <td>\n                                                <span className=\"td-content\">\n                                                    <strong>\n                                                        {humanReadableFormattedDateString(media.createdAt)}\n                                                    </strong>\n                                                    <span>{getDatetimeIn12Hours(media.createdAt)}</span>\n                                                </span>\n                                            </td>\n                                            <td>\n                                                {parseMeta(media)}\n                                            </td>\n                                            <td>\n                                                {media.tags.map((tag) => {\n                                                    return <span className=\"my-phone-tag text-truncate ml-1\">{tag}</span>;\n                                                })}\n                                                <span\n                                                    className=\"down-arrow\"\n                                                    onClick={() => {\n                                                        setSelectedMedia(media)\n                                                        setNewTagModal(true);\n                                                    }}\n                                                >\n                                                    <img\n                                                        className=\"down-arrow-img img-fluid\"\n                                                        src={downArrow}\n                                                        alt=\"arrow\"\n                                                    />\n                                                </span>\n                                            </td>\n\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </Table>\n                    ) : (\n                        <div className=\"empty-media text-center\">\n                            <div class=\"empty-media-img mx-auto\">\n                                <img\n                                    className=\"media-img img-fluid\"\n                                    src={emptyMediaImg}\n                                    alt=\"media-img\"\n                                />\n                            </div>\n                            <h3>Add Media</h3>\n                            <p>\n                                Upload your favourite images and videos from the local storage\n                                <br /> of your device\n                            </p>\n                        </div>\n                    )}\n\n                    {showNewTagModal && (\n                        <AddNewTagModal\n                            selected={selectedMedia}\n                            setNewTagModal={setNewTagModal}\n\n                        />\n                    )}\n                    {showPublishPopUp && (\n                        <PublishMediaModal\n                            selected={showPublishPopUp}\n                            setShowPublishPopUp={setShowPublishPopUp}\n                            type=\"media\"\n                        />\n                    )}\n                    {deleteModal && <DeleteConfirmation setDeleteModal={setDeleteModal} callbackFunction={handleDelete} text=\"Are you sure you want to delete?\" yes={\"Yes Deactivate\"} />}\n                </div>\n                <div className=\"col-6\">\n                    <h4>jjjj</h4>\n                </div>\n            </div>\n        </>\n    );\n};\nexport default DaySchedule;\n\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/SecondMonth.js",["681"],"import React, { useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\n// export default function SecondMonth() {\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [events, setEvents] = useState([]);\n//   console.log(events, \"events ssssssss\");\n//   const externalEvent = [\n//     { id: 1, title: \"Event 1\", start: \"2023-06-01\", end: \"2023-06-02\" },\n//     { id: 2, title: \"Event 2\", start: \"2023-06-03\", end: \"2023-06-04\" },\n//     { id: 3, title: \"Event 3\", start: \"2023-06-05\", end: \"2023-06-06\" },\n//     { id: 4, title: \"Event 4\", start: \"2023-06-07\", end: \"2023-06-08\" },\n//   ];\n\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n//   console.log(selectedEvent, \"lllllllloooooo\");\n//   const [selectedCheckboxes, setSelectedCheckboxes] = useState({});\n\n//   function handleDateCellChange(dateInfo) {\n//     // dateInfo.event = selectedEvent;\n//     console.log(dateInfo, \"handleDateCellChange top console\");\n//     const checkboxKey = dateInfo.date.toISOString();\n\n//     // console.log(selectedDateValuea, \"selectedDateValuea id\")\n//     const selectedDateValue = dateInfo.date.valueOf();\n//     console.log(dateInfo.event.id, \"dateInfo -> dateInfo.kkk\");\n\n//     const isChecked = selectedCheckboxes[checkboxKey];\n\n//     if (isChecked) {\n//       // Unselecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//         const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//         delete updatedCheckboxes[checkboxKey];\n//         return updatedCheckboxes;\n//       });\n\n//       const filteredEvents = events.filter(\n//         (event) => event.start.valueOf() !== selectedDateValue\n//       );\n\n//       console.log(filteredEvents, \"iiiiiii\");\n\n//       setSelectedEvent(null);\n//       setSelectedDate(null);\n//       setEvents(filteredEvents);\n//     } else {\n//       // Selecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//         ...prevSelectedCheckboxes,\n//         [checkboxKey]: true,\n//       }));\n\n//       const event = {\n//         id: selectedEvent.id,\n//         title: selectedEvent.title,\n//         start: dateInfo.date,\n//       };\n//       setEvents((prevEvents) => [...prevEvents, event]);\n//     }\n//   }\n\n//   function handleDateCellChange(dateInfo) {\n//     const checkboxKey = dateInfo.date.toISOString();\n//     const selectedDateValue = dateInfo.date.valueOf();\n//     const isChecked = selectedCheckboxes[checkboxKey];\n\n//     if (isChecked) {\n//       // Unselecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//         const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//         delete updatedCheckboxes[checkboxKey];\n//         return updatedCheckboxes;\n//       });\n\n//       const filteredEvents = events.filter(\n//         (event) => event.start.valueOf() !== selectedDateValue\n//       );\n\n//       setSelectedEvent(null);\n//       setSelectedDate(null);\n//       setEvents(filteredEvents);\n//     } else {\n//       // Selecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//         ...prevSelectedCheckboxes,\n//         [checkboxKey]: true,\n//       }));\n\n//       const event = {\n//         id: selectedEvent.id,\n//         title: selectedEvent.title,\n//         start: dateInfo.date,\n//       };\n//       setEvents((prevEvents) => [...prevEvents, event]);\n//     }\n//   }\n\n//   const renderDateCell = (dateInfo) => {\n//     const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\n//     const isSelected = selectedDateValue === dateInfo.date.valueOf();\n//     const isEventSelected = selectedEvent;\n\n//     if (isEventSelected) {\n//       const checkboxKey = dateInfo.date.toISOString();\n//       return (\n//         <div>\n//           <input\n//             name={`checkbox-${checkboxKey}`}\n//             type=\"checkbox\"\n//             checked={isSelected || selectedCheckboxes[checkboxKey]}\n//             onChange={() => handleDateCellChange(dateInfo)}\n//           />\n//           {dateInfo.dayNumberText}\n//         </div>\n//       );\n//     }\n\n//     return dateInfo.dayNumberText;\n//   };\n//   const handleEventClick = (event) => {\n//     setSelectedEvent(event);\n//     setSelectedDate(null); // Reset selected date\n//   };\n\n//   return (\n//     <div className=\"containe\">\n//       <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\n//         <h2>Event List</h2>\n//         <ul>\n//           {externalEvent.map((event, i) => (\n//             <li\n//               key={i}\n//               onClick={() => handleEventClick(event)}\n//               style={{\n//                 cursor: \"pointer\",\n//                 fontWeight:\n//                   selectedEvent && selectedEvent.id === event.id\n//                     ? \"bold\"\n//                     : \"normal\",\n//               }}\n//             >\n//               {event.title}\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\n//         <FullCalendar\n//           plugins={[dayGridPlugin, interactionPlugin]}\n//           initialView=\"dayGridMonth\"\n//           selectable={true}\n//           events={events}\n//           dayCellContent={renderDateCell}\n//           eventContent={(info) => {\n//             return (\n//               <div>\n//                 <div>{info.event.title}</div>\n//               </div>\n//             );\n//           }}\n//         />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default function SecondMonth() {\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [events, setEvents] = useState([]);\n//   const externalEvent = [\n//     { id: 1, title: \"Event 1\", start: \"2023-06-01\", end: \"2023-06-02\" },\n//     { id: 2, title: \"Event 2\", start: \"2023-06-03\", end: \"2023-06-04\" },\n//     { id: 3, title: \"Event 3\", start: \"2023-06-05\", end: \"2023-06-06\" },\n//     { id: 4, title: \"Event 4\", start: \"2023-06-07\", end: \"2023-06-08\" },\n//   ];\n\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n//   const [selectedCheckboxes, setSelectedCheckboxes] = useState({});\n//   const [isEventSelected, setIsEventSelected] = useState(false);\n\n//   function handleDateCellChange(dateInfo) {\n//     const checkboxKey = dateInfo.date.toISOString();\n//     const isChecked = selectedCheckboxes[checkboxKey];\n\n//     if (isChecked) {\n//       // Unselecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//         const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//         delete updatedCheckboxes[checkboxKey];\n//         return updatedCheckboxes;\n//       });\n\n//       const filteredEvents = events.filter(\n//         (event) => event.start !== dateInfo.date.toISOString()\n//       );\n\n//       setSelectedEvent(null);\n//       setSelectedDate(null);\n//       setEvents(filteredEvents);\n//     } else {\n//       // Selecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//         ...prevSelectedCheckboxes,\n//         [checkboxKey]: true,\n//       }));\n\n//       const event = {\n//         id: selectedEvent.id,\n//         title: selectedEvent.title,\n//         start: dateInfo.date,\n//       };\n//       setEvents((prevEvents) => [...prevEvents, event]);\n//     }\n//   }\n\n//   const handleEventClick = (event) => {\n//     setSelectedEvent(event);\n//     setSelectedDate(null); // Reset selected date\n//     setSelectedCheckboxes({});\n//     setIsEventSelected(true); // Set isEventSelected to true\n//   };\n\n//   function handleDateCellChange(dateInfo) {\n//     const checkboxKey = dateInfo.date.toISOString();\n//     const isChecked = selectedCheckboxes[checkboxKey];\n\n//     if (isChecked) {\n//       // Unselecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//         const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//         delete updatedCheckboxes[checkboxKey];\n//         return updatedCheckboxes;\n//       });\n\n//       const filteredEvents = events.filter(\n//         (event) => event.start !== dateInfo.date.toISOString()\n//       );\n\n//       setSelectedEvent(null);\n//       setSelectedDate(null);\n//       setEvents(filteredEvents);\n//     } else {\n//       // Selecting the checkbox\n//       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//         ...prevSelectedCheckboxes,\n//         [checkboxKey]: true,\n//       }));\n\n//       const event = {\n//         id: selectedEvent.id,\n//         title: selectedEvent.title,\n//         start: dateInfo.date.toISOString(),\n//       };\n//       setEvents((prevEvents) => [...prevEvents, event]);\n//     }\n//   }\n//   // ...existing code...\n\n//   //\n\n//   const handleWeekCellChange = (dayInfo) => {\n//     const { date } = dayInfo;\n//     const selectedDay = new Date(date);\n//     const checkboxKey = selectedDay.toISOString().split(\"T\")[0];\n\n//     setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//       ...prevSelectedCheckboxes,\n//       [checkboxKey]: true,\n//     }));\n\n//     // Add event to the selected day (Sunday)\n//     const eventToAdd = {\n//       id: selectedEvent.id,\n//       title: selectedEvent.title,\n//       start: selectedDay.toISOString().split(\"T\")[0],\n//     };\n//     setEvents((prevEvents) => [...prevEvents, eventToAdd]);\n//   };\n\n//   const renderDayHeader = (dayInfo) => {\n//     const { date } = dayInfo;\n//     const checkboxKey = date.toISOString();\n//     const isChecked = selectedCheckboxes[checkboxKey];\n\n//     if (isEventSelected) {\n//       return (\n//         <div>\n//           <input\n//             name={`checkbox-${checkboxKey}`}\n//             type=\"checkbox\"\n//             checked={isChecked}\n//             onChange={() => handleWeekCellChange(dayInfo)}\n//           />\n//           {date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}\n//         </div>\n//       );\n//     } else {\n//       return (\n//         <div>{date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}</div>\n//       );\n//     }\n//   };\n\n//   const renderDateCell = (dateInfo) => {\n//     const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\n//     const isSelected = selectedDateValue === dateInfo.date.valueOf();\n//     const isEventSelected = selectedEvent;\n\n//     if (isEventSelected) {\n//       const checkboxKey = dateInfo.date.toISOString();\n//       return (\n//         <div>\n//           <input\n//             name={`checkbox-${checkboxKey}`}\n//             type=\"checkbox\"\n//             checked={isSelected || selectedCheckboxes[checkboxKey]}\n//             onChange={() => handleDateCellChange(dateInfo)}\n//           />\n//           {dateInfo.dayNumberText}\n//         </div>\n//       );\n//     }\n//     return dateInfo.dayNumberText;\n//   };\n\n//   return (\n//     <div className=\"fullcalendar-box\">\n//       <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\n//         <h2>Event List</h2>\n//         <ul>\n//           {externalEvent.map((event, i) => (\n//             <li\n//               key={i}\n//               onClick={() => handleEventClick(event)}\n//               style={{\n//                 cursor: \"pointer\",\n//                 fontWeight:\n//                   selectedEvent && selectedEvent.id === event.id\n//                     ? \"bold\"\n//                     : \"normal\",\n//               }}\n//             >\n//               {event.title}\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\n//         <FullCalendar\n//           plugins={[dayGridPlugin, interactionPlugin]}\n//           initialView=\"dayGridMonth\"\n//           selectable={true}\n//           events={events}\n//           dayHeaderContent={renderDayHeader}\n//           dayCellContent={renderDateCell}\n//           eventContent={(info) => (\n//             <div>\n//               <div>{info.event.title}</div>\n//             </div>\n//           )}\n//           headerToolbar={{\n//             start: \"title\",\n//             center: \"selectWeekButton\",\n//             end: \"today prev,next\",\n//           }}\n//         />\n//       </div>\n//     </div>\n//   );\n// }\n// month day logic\nexport default function SecondMonth() {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [events, setEvents] = useState([]);\n  const externalEvent = [\n    { id: 1, title: \"Event 1\", start: \"2023-06-01\", end: \"2023-06-02\" },\n    { id: 2, title: \"Event 2\", start: \"2023-06-03\", end: \"2023-06-04\" },\n    { id: 3, title: \"Event 3\", start: \"2023-06-05\", end: \"2023-06-06\" },\n    { id: 4, title: \"Event 4\", start: \"2023-06-07\", end: \"2023-06-08\" },\n  ];\n\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [selectedCheckboxes, setSelectedCheckboxes] = useState({});\n  const [isEventSelected, setIsEventSelected] = useState(false);\n\n  //   function handleDateCellChange(dateInfo) {\n  //     const checkboxKey = dateInfo.date.toISOString();\n  //     const isChecked = selectedCheckboxes[checkboxKey];\n\n  //     if (isChecked) {\n  //       // Unselecting the checkbox\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => {\n  //         const updatedCheckboxes = { ...prevSelectedCheckboxes };\n  //         delete updatedCheckboxes[checkboxKey];\n  //         return updatedCheckboxes;\n  //       });\n\n  //       const filteredEvents = events.filter(\n  //         (event) => event.start !== dateInfo.date.toISOString()\n  //       );\n\n  //       setSelectedEvent(null);\n  //       setSelectedDate(null);\n  //       setEvents(filteredEvents);\n  //     } else {\n  //       // Selecting the checkbox\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n  //         ...prevSelectedCheckboxes,\n  //         [checkboxKey]: true,\n  //       }));\n\n  //       const event = {\n  //         id: selectedEvent.id,\n  //         title: selectedEvent.title,\n  //         start: dateInfo.date,\n  //       };\n  //       setEvents((prevEvents) => [...prevEvents, event]);\n  //     }\n  //   }\n\n  const handleEventClick = (event) => {\n    setSelectedEvent(event);\n    setSelectedDate(null); // Reset selected date\n    setSelectedCheckboxes({});\n    setIsEventSelected(true); // Set isEventSelected to true\n  };\n\n  //   function handleDateCellChange(dateInfo) {\n  //     const checkboxKey = dateInfo.date.toISOString();\n  //     const isChecked = selectedCheckboxes[checkboxKey];\n\n  //     if (isChecked) {\n  //       // Unselecting the checkbox\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => {\n  //         const updatedCheckboxes = { ...prevSelectedCheckboxes };\n  //         delete updatedCheckboxes[checkboxKey];\n  //         return updatedCheckboxes;\n  //       });\n\n  //       const filteredEvents = events.filter(\n  //         (event) => event.start !== dateInfo.date.toISOString()\n  //       );\n\n  //       setSelectedEvent(null);\n  //       setSelectedDate(null);\n  //       setEvents(filteredEvents);\n  //     } else {\n  //       // Selecting the checkbox\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n  //         ...prevSelectedCheckboxes,\n  //         [checkboxKey]: true,\n  //       }));\n\n  //       const event = {\n  //         id: selectedEvent.id,\n  //         title: selectedEvent.title,\n  //         start: dateInfo.date.toISOString(),\n  //       };\n  //       setEvents((prevEvents) => [...prevEvents, event]);\n  //     }\n  //   }\n\n  function handleDateCellChange(dateInfo) {\n    const checkboxKey = dateInfo.date.toISOString();\n    const isChecked = selectedCheckboxes[checkboxKey];\n\n    if (isChecked) {\n      // Unselecting the checkbox\n      setSelectedCheckboxes((prevSelectedCheckboxes) => {\n        const updatedCheckboxes = { ...prevSelectedCheckboxes };\n        delete updatedCheckboxes[checkboxKey];\n        return updatedCheckboxes;\n      });\n\n      const filteredEvents = events.filter(\n        (event) => event.start !== dateInfo.date.toISOString()\n      );\n\n      setSelectedEvent(null);\n      setSelectedDate(null);\n      setEvents(filteredEvents);\n    } else {\n      // Selecting the checkbox\n      setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n        [checkboxKey]: true,\n      }));\n\n      const existingEvent = events.find(\n        (event) => event.start === dateInfo.date.toISOString()\n      );\n\n      if (!existingEvent) {\n        const event = {\n          id: selectedEvent.id,\n          title: selectedEvent.title,\n          start: dateInfo.date.toISOString(),\n        };\n        setEvents((prevEvents) => [...prevEvents, event]);\n      }\n    }\n  }\n\n  //   const handleWeekCellChange = (dayInfo) => {\n  //     function getDatesForDayOfWeek(year, month, dayOfWeek) {\n  //       const dates = [];\n  //       const date = new Date(year, month, 1); // Subtract 1 from month since JavaScript months are zero-based\n  //       const targetDay = dayOfWeek % 7; // Normalize dayOfWeek to 0-6 range (Sunday is 0)\n  //       while (date.getMonth() === month) {\n  //         if (date.getDay() === targetDay) {\n  //           dates.push(date.getDate());\n  //         }\n  //         date.setDate(date.getDate() + 1);\n  //       }\n\n  //       return dates;\n  //     }\n\n  //     const dates = getDatesForDayOfWeek(\n  //       new Date(dayInfo.date).getFullYear(),\n  //       new Date(dayInfo.date).getMonth(),\n  //       new Date(dayInfo.date).getDay()\n  //     );\n  //     console.log(dates, \"datesssss\");\n  //     const { date } = dayInfo;\n  //     const selectedDay = new Date(date);\n  //     const checkboxKey = selectedDay.toISOString().split(\"T\")[0];\n\n  //     setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n  //       ...prevSelectedCheckboxes,\n  //       [checkboxKey]: true,\n  //     }));\n\n  //     // Add event to the selected day (Sunday)\n  //     // const eventToAdd = {\n  //     //   id: selectedEvent.id,\n  //     //   title: selectedEvent.title,\n  //     //   start: selectedDay.toISOString().split(\"T\")[0],\n  //     // };\n  //     // setEvents((prevEvents) => [...prevEvents, eventToAdd]);\n  //   };\n\n  //   const handleWeekCellChange = (dayInfo) => {\n  //     function getDatesForDayOfWeek(year, month, dayOfWeek) {\n  //       const dates = [];\n  //       const date = new Date(year, month, 1); // Subtract 1 from month since JavaScript months are zero-based\n  //       const targetDay = dayOfWeek % 7; // Normalize dayOfWeek to 0-6 range (Sunday is 0)\n  //       while (date.getMonth() === month) {\n  //         if (date.getDay() === targetDay) {\n  //           dates.push(date.getDate());\n  //         }\n  //         date.setDate(date.getDate() + 1);\n  //       }\n\n  //       return dates;\n  //     }\n\n  //     const dates = getDatesForDayOfWeek(\n  //       new Date(dayInfo.date).getFullYear(),\n  //       new Date(dayInfo.date).getMonth(),\n  //       new Date(dayInfo.date).getDay()\n  //     );\n\n  //     dates.forEach((date) => {\n  //       const selectedDay = new Date(dayInfo.date);\n  //       selectedDay.setDate(date);\n  //       const checkboxKey = selectedDay.toISOString().split(\"T\")[0];\n\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n  //         ...prevSelectedCheckboxes,\n  //         [checkboxKey]: true,\n  //       }));\n\n  //       // Add event to the selected day\n  //       const eventToAdd = {\n  //         id: selectedEvent.id,\n  //         title: selectedEvent.title,\n  //         start: selectedDay.toISOString().split(\"T\")[0],\n  //       };\n  //       setEvents((prevEvents) => [...prevEvents, eventToAdd]);\n  //     });\n  //   };\n\n  //   const handleWeekCellChange = (dayInfo) => {\n  //     function getDatesForDayOfWeek(year, month, dayOfWeek) {\n  //       const dates = [];\n  //       const date = new Date(year, month, 1); // Subtract 1 from month since JavaScript months are zero-based\n  //       const targetDay = dayOfWeek % 7; // Normalize dayOfWeek to 0-6 range (Sunday is 0)\n  //       while (date.getMonth() === month) {\n  //         if (date.getDay() === targetDay) {\n  //           dates.push(new Date(date)); // Push a new Date object to the array\n  //         }\n  //         date.setDate(date.getDate() + 1);\n  //       }\n  //       return dates;\n  //     }\n\n  //     const dates = getDatesForDayOfWeek(\n  //       new Date(dayInfo.date).getFullYear(),\n  //       new Date(dayInfo.date).getMonth(),\n  //       new Date(dayInfo.date).getDay()\n  //     );\n\n  //     dates.forEach((date) => {\n  //       const checkboxKey = date.toISOString().split(\"T\")[0];\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n  //         ...prevSelectedCheckboxes,\n  //         [checkboxKey]: true,\n  //       }));\n\n  //       // Check if the event already exists for the selected date\n  //       const existingEvent = events.find(\n  //         (event) => event.start === date.toISOString().split(\"T\")[0]\n  //       );\n\n  //       // Add event to the selected day if it doesn't already exist\n  //       if (!existingEvent) {\n  //         const eventToAdd = {\n  //           id: selectedEvent.id,\n  //           title: selectedEvent.title,\n  //           start: date.toISOString().split(\"T\")[0],\n  //         };\n  //         setEvents((prevEvents) => [...prevEvents, eventToAdd]);\n  //       }\n  //     });\n  //   };\n\n  const handleWeekCellChange = (year, month, dayOfWeek) => {\n    function getDatesForDayOfWeek(year, month, dayOfWeek) {\n      const dates = [];\n      const date = new Date(year, month, 1); // Subtract 1 from month since JavaScript months are zero-based\n      const targetDay = dayOfWeek % 7; // Normalize dayOfWeek to 0-6 range (Sunday is 0)\n      while (date.getMonth() === month) {\n        if (date.getDay() === targetDay) {\n          dates.push(new Date(date)); // Push a new Date object to the array\n        }\n        date.setDate(date.getDate() + 1);\n      }\n      return dates;\n    }\n\n    // const dates = getDatesForDayOfWeek(\n    //   new Date(dayInfo.date).getFullYear(),\n    //   new Date(dayInfo.date).getMonth(),\n    //   new Date(dayInfo.date).getDay()\n    // );\n\n    const dates = getDatesForDayOfWeek(year, month, dayOfWeek);\n\n    dates.forEach((date) => {\n      console.log(date, \"kkkkkk\");\n\n      // const checkboxKey = inputdate.replace(/\\//g, \"-\");\n      const checkboxKey = date;\n\n      console.log(checkboxKey, \"unitqkjn\");\n\n      setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n        ...prevSelectedCheckboxes,\n        [checkboxKey]: true,\n      }));\n      console.log(selectedCheckboxes, \"sgvyhjmffgbhnj\");\n\n      // Check if the event already exists for the selected date\n      const existingEvent = events.find(\n        (event) => event.start === date.toISOString().split(\"T\")[0]\n      );\n\n      if (!existingEvent) {\n        // Add event to the selected date\n        const eventToAdd = {\n          id: selectedEvent.id,\n          title: selectedEvent.title,\n          start: date.toISOString().split(\"T\")[0],\n        };\n        setEvents((prevEvents) => [...prevEvents, eventToAdd]);\n      }\n    });\n  };\n\n  function getMonthFromString(mon) {\n    return new Date(Date.parse(mon + \" 1, 2012\")).getMonth() + 1;\n  }\n\n  const renderDayHeader = (dayInfo) => {\n    console.log(dayInfo, \"renderDayHeader console\");\n    const { date } = dayInfo;\n    const checkboxKey = date.toISOString();\n    const isChecked = selectedCheckboxes[checkboxKey];\n    console.log(isChecked, \"kkkk\");\n\n    if (isEventSelected) {\n      return (\n        <div>\n          <input\n            className=\"day-checkbox\"\n            name={`checkbox-${checkboxKey}`}\n            type=\"checkbox\"\n            checked={isChecked}\n            onChange={() => {\n              const monthYrStr = document.querySelector(\"#fc-dom-2\").innerHTML;\n              const monthYrArr = monthYrStr.split(\" \");\n              console.log(\"monthYrArr #696\", monthYrArr);\n              console.log(\n                monthYrArr[1],\n                getMonthFromString(monthYrArr[0]),\n                date.getDay()\n              );\n            }}\n          />\n          {date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}\n        </div>\n      );\n    } else {\n      return (\n        <div>{date.toLocaleDateString(\"en-US\", { weekday: \"short\" })}</div>\n      );\n    }\n  };\n\n  const renderDateCell = (dateInfo) => {\n    const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\n    const isSelected = selectedDateValue === dateInfo.date.valueOf();\n    const isEventSelected = selectedEvent;\n\n    if (isEventSelected) {\n      const checkboxKey = dateInfo.date.toISOString();\n      return (\n        <div>\n          <input\n            name={`checkbox-${checkboxKey}`}\n            type=\"checkbox\"\n            checked={isSelected || selectedCheckboxes[checkboxKey]}\n            onChange={() => handleDateCellChange(dateInfo)}\n          />\n          {dateInfo.dayNumberText}\n        </div>\n      );\n    }\n    return dateInfo.dayNumberText;\n  };\n\n  return (\n    <div className=\"fullcalendar-box\">\n      <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\n        <h2>Event List</h2>\n        <ul>\n          {externalEvent.map((event, i) => (\n            <li\n              key={i}\n              onClick={() => handleEventClick(event)}\n              style={{\n                cursor: \"pointer\",\n                fontWeight:\n                  selectedEvent && selectedEvent.id === event.id\n                    ? \"bold\"\n                    : \"normal\",\n              }}\n            >\n              {event.title}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\n        <FullCalendar\n          plugins={[dayGridPlugin, interactionPlugin]}\n          initialView=\"dayGridMonth\"\n          selectable={true}\n          events={events}\n          dayHeaderContent={renderDayHeader}\n          dayCellContent={renderDateCell}\n          eventContent={(info) => (\n            <div>\n              <div>{info.event.title}</div>\n            </div>\n          )}\n          headerToolbar={{\n            start: \"title\",\n            center: \"selectWeekButton\",\n            end: \"today prev,next\",\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/ScrollToTop.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/Footer.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/TestDay.js",["682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/SequenceEdit.js",["712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/ChooseLayout.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/SelectComparison.jsx",["738","739","740","741"],"// import React, { useState } from 'react'\n// import { Button, Dropdown, Table } from \"react-bootstrap\";\n// import searchIcon from \"../../../img/search.png\";\n// import listIcon from \"../../../img/list-icon.png\";\n// import layoutSelected from \"../../../img/layout-select-img.png\";\n// import downArrow from \"../../../img/down-arrow.png\";\n// import menuIcon from \"../../../img/menu-icon.png\";\n// import defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\n// import deleteIcon from \"../../../img/delete-icon.png\";\n// const SelectComparison = () => {\n//   const [allScreens, setAllScreens] = useState(\"\");\n\n//   const [checkedItems, setCheckedItems] = useState({});\n//   const [checkedValues, setCheckedValues] = useState([]);\n\n//   const handleCheckboxChange = (event) => {\n//     const newCheckedItems = {\n//       ...checkedItems,\n//       [event.target.name]: event.target.checked,\n//     };\n//     const selectedScreens = [];\n//     for (const key in newCheckedItems) {\n//       if (newCheckedItems[key] === true) {\n//         selectedScreens.push(key);\n//       }\n//     }\n//     setCheckedValues(selectedScreens);\n//     setCheckedItems(newCheckedItems);\n//   };\n\n//   const handleSelectAllChange = (event) => {\n//     const newCheckedItems = {};\n//     allScreens.forEach((item) => {\n//       newCheckedItems[item._id] = event.target.checked;\n//     });\n//     const selectedScreens = [];\n//     for (const key in newCheckedItems) {\n//       if (newCheckedItems[key] === true) {\n//         selectedScreens.push(key);\n//       }\n//     }\n//     setCheckedValues(selectedScreens);\n//     setCheckedItems(newCheckedItems);\n//   };\n\n//   return (\n//     <>\n//           <div className=\"custom-content-heading selected-heading d-flex flex-wrap\">\n//         <h1>Select Composition</h1>\n\n//         <div className=\"search-textfield search-selected ml-auto d-flex flex-wrap align-items-center\">\n//           <div className=\"form-group mb-0\">\n//             <input\n//               type=\"text\"\n//               className=\"form-control input-default \"\n//               placeholder=\"Search...\"\n//             />\n//             <img className=\"search-icon\" src={searchIcon} alt=\"search\" />\n//           </div>\n//           <Button\n//             className=\"ml-2 icon-btn\"\n//             variant=\"primary\"\n//           >\n//             <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\n//           </Button>\n//         </div>\n//       </div>\n// {/*\n//       <Table responsive className=\"custom-table mt-3\">\n//           <thead>\n//             <tr>\n//               <th>Composition</th>\n//               <th>Date Added</th>\n//               <th>Associated Schedule</th>\n//               <th>Tags</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n\n//                 <tr>\n//                   <td>\n//                     <span className=\"td-content d-flex name-td-content\">\n//                       <span className=\"name-img mr-2\">\n//                       <img\n//                   className=\"layout-select-img\"\n//                   src={layoutSelected}\n//                   alt=\"menu-icon\"\n//                 />\n//                       </span>\n//                       <span className=\"name-content d-flex flex-column flex-grow-1\">\n//                         <strong>C-c02Nov 21 12:03</strong>\n//                         <span>Added by Gauri Batra</span>\n//                       </span>\n//                     </span>\n//                   </td>\n//                   <td>\n//                   <span className=\"name-content d-flex flex-column flex-grow-1\">\n//                         <strong>2 Nov, 2021</strong>\n//                         <span>12:02 PM</span>\n//                       </span>\n//                   </td>\n//                   <td>\n//                    0\n//                   </td>\n//                   <td>\n//                       <span className=\"my-phone-tag text-truncate ml-1\">My Phone is</span>\n\n//                   </td>\n//                 </tr>\n//                 <tr>\n//                   <td>\n//                     <span className=\"td-content d-flex name-td-content\">\n//                       <span className=\"name-img mr-2\">\n//                       <img\n//                   className=\"layout-select-img\"\n//                   src={layoutSelected}\n//                   alt=\"menu-icon\"\n//                 />\n//                       </span>\n//                       <span className=\"name-content d-flex flex-column flex-grow-1\">\n//                         <strong>C-c02Nov 21 12:03</strong>\n//                         <span>Added by Gauri Batra</span>\n//                       </span>\n//                     </span>\n//                   </td>\n//                   <td>\n//                   <span className=\"name-content d-flex flex-column flex-grow-1\">\n//                         <strong>2 Nov, 2021</strong>\n//                         <span>12:02 PM</span>\n//                       </span>\n//                   </td>\n//                   <td>\n//                    0\n//                   </td>\n//                   <td>\n//                       <span className=\"my-phone-tag text-truncate ml-1\">My Phone is</span>\n\n//                   </td>\n//                 </tr>\n//           </tbody>\n//         </Table> */}\n\n//     </>\n//   )\n// }\n\n// export default SelectComparison\n\nimport { useEffect, useState } from \"react\";\nimport TableLoader from \"../TableLoader\";\nimport \"../Table.css\";\nimport { getAllScreens, pushAddSchedule } from \"../../../utils/api\";\nimport { Button, Dropdown, Table } from \"react-bootstrap\";\nimport searchIcon from \"../../../img/search.png\";\nimport listIcon from \"../../../img/list-icon.png\";\n// import tagCloseIcon from \"../../img/tag-close-icon.png\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nconst SelectComparison = () => {\n  const history = useHistory();\n  const [allScreens, setAllScreens] = useState(\"\");\n  const [checkedItems, setCheckedItems] = useState({});\n  const [checkedValues, setCheckedValues] = useState([]);\n  const [published, setPublished] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [scheduleName, setScheduleName] = useState(\"\");\n  // use effect\n  console.log(checkedItems, \"SelectCompariso checkedItemsn\");\n  console.log(checkedValues, \"SelectCompariso checkedValues\");\n\n  useEffect(() => {\n    callAllScreenApi();\n  }, []);\n\n  const callAllScreenApi = async () => {\n    setLoading(true);\n    const list = await getAllScreens();\n    setLoading(false);\n    setAllScreens(list);\n  };\n\n  const handleCheckboxChange = (event) => {\n    const newCheckedItems = {\n      ...checkedItems,\n      [event.target.name]: event.target.checked,\n    };\n    const selectedScreens = [];\n    for (const key in newCheckedItems) {\n      if (newCheckedItems[key] === true) {\n        selectedScreens.push(key);\n      }\n    }\n    setCheckedValues(selectedScreens);\n    setCheckedItems(newCheckedItems);\n  };\n\n  const handleSelectAllChange = (event) => {\n    const newCheckedItems = {};\n    allScreens.forEach((item) => {\n      newCheckedItems[item._id] = event.target.checked;\n    });\n    const selectedScreens = [];\n    for (const key in newCheckedItems) {\n      if (newCheckedItems[key] === true) {\n        selectedScreens.push(key);\n      }\n    }\n    setCheckedValues(selectedScreens);\n    setCheckedItems(newCheckedItems);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await pushAddSchedule({\n      name: scheduleName,\n      screens: checkedValues,\n    }).then((res) => {\n      console.log(res, \"res schedule name\");\n      if (res.data.statusCode === 200) {\n        console.log(res.data.data.name);\n        history.push(`/testday/${res.data.data._id}`);\n      }\n    });\n  };\n  return (\n    <>\n      <div className=\"custom-content-heading selected-heading d-flex flex-wrap\">\n        <h1>Select Screen</h1>\n\n        <div className=\"search-textfield search-selected ml-auto d-flex flex-wrap align-items-center\">\n          <div className=\"form-group mb-0\">\n            <input\n              type=\"text\"\n              className=\"form-control input-default \"\n              placeholder=\"Search...\"\n            />\n            <img className=\"search-icon\" src={searchIcon} alt=\"search\" />\n          </div>\n          <Button className=\"ml-2 icon-btn\" variant=\"primary\">\n            <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\n          </Button>\n        </div>\n      </div>\n      <form\n        onSubmit={handleSubmit}\n        className=\"d-flex justify-content-between align-items-center my-4\"\n      >\n        <input\n          type=\"text\"\n          className=\" schedule-name-input-feild form-control input-default \"\n          placeholder=\"Schedule Name\"\n          value={scheduleName}\n          onChange={(e) => setScheduleName(e.target.value)}\n          required\n        />\n\n        <Button className=\"mr-2\" variant=\"info add-screen-btn\" type=\"submit\">\n          Save\n        </Button>\n      </form>\n\n      <Table responsive>\n        <thead>\n          <tr>\n            <th className=\"width50\">\n              <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\n                <input\n                  type=\"checkbox\"\n                  className=\"custom-control-input\"\n                  id=\"checkbox1_exam_all\"\n                  onChange={handleSelectAllChange}\n                  required=\"\"\n                />\n                <label\n                  className=\"custom-control-label\"\n                  htmlFor=\"checkbox1_exam_all\"\n                ></label>\n              </div>\n            </th>\n            <th>Screen</th>\n            <th>Last Seen</th>\n            <th>Default Composition</th>\n            <th>Current Schedule</th>\n          </tr>\n        </thead>\n        {loading ? (\n          <TableLoader colSpan={5} />\n        ) : (\n          <tbody>\n            {allScreens !== \"\" &&\n              allScreens.map((screen) => {\n                return (\n                  <tr>\n                    <td>\n                      <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\n                        <input\n                          type=\"checkbox\"\n                          className=\"custom-control-input\"\n                          id={screen._id}\n                          name={screen._id}\n                          checked={checkedItems[screen._id]}\n                          onChange={handleCheckboxChange}\n                        />\n                        <label\n                          className=\"custom-control-label\"\n                          htmlFor={screen._id}\n                        ></label>\n                      </div>\n                    </td>\n\n                    <td>\n                      <span className=\"td-content\">\n                        <strong>{screen.name}</strong>\n                        <span>{screen.screenLocation}</span>\n                      </span>\n                    </td>\n                    <td>\n                      <span className=\"d-flex align-items-center\">\n                        <span className=\"status status-green\"></span>\n                        <span className=\"td-content\">\n                          <strong>{screen.name}</strong>\n                          <span>{screen.screenLocation}</span>\n                        </span>\n                      </span>\n                    </td>\n                    <td>Default Compo. </td>\n                    <td>No Schedule</td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        )}\n      </Table>\n    </>\n  );\n};\n\nexport default SelectComparison;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/CopyTestDay.jsx",["742","743","744","745","746","747"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { createPlugin } from \"@fullcalendar/core\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\n\nconst MyCustomPlugin = createPlugin({\n  ...timeGridPlugin,\n  ...interactionPlugin,\n  // other plugin options\n});\n\nexport default function CopyTestDay() {\n  // initial state\n\n  const [state, setState] = useState({\n    weekendsVisible: true,\n    externalEvents: [\n      {\n        title: \"Art 1\",\n        color: \"#0097a7\",\n        id: 34432,\n        custom: defaultComparisonIcon,\n      },\n      {\n        title: \"Art 2\",\n        color: \"#f44336\",\n        id: 323232,\n\n        custom: defaultComparisonIcon,\n      },\n      {\n        title: \"Art 3\",\n        color: \"#f57f17\",\n        id: 1111,\n\n        custom: defaultComparisonIcon,\n      },\n      {\n        title: \"Art 4\",\n        color: \"#90a4ae\",\n        id: 432432,\n\n        custom: defaultComparisonIcon,\n      },\n    ],\n    // calendarEvents: [\n    //     {\n    //         id: 1,\n    //         title: \"All-day event\",\n    //         color: \"#388e3c\",\n    //         start: \"2020-12-12\",\n    //         end: \"2020-12-12\",\n    //         custom: \"questo è un campo custom\"\n    //     },\n    //     {\n    //         id: 2,\n    //         title: \"Timed event\",\n    //         color: \"#0097a7\",\n    //         start: \"2020-12-07\",\n    //         end: \"2020-12-10\",\n    //         custom: \"custom stuff\"\n    //     }\n    // ].map((event) => ({\n    //     ...event,\n    //     showDeleteButton: true,\n    //     extendedProps: {\n    //         ...event.extendedProps,\n    //         imageUrl: defaultComparisonIcon, // Add the image URL here\n    //     },\n    // }))\n  });\n\n  // load external events\n  useEffect(() => {\n    let draggableEl = document.getElementById(\"external-events\");\n    new Draggable(draggableEl, {\n      itemSelector: \".fc-event\",\n      eventData: function (eventEl) {\n        let id = eventEl.dataset.id;\n        let title = eventEl.getAttribute(\"title\");\n        let color = \"#FFE494\";\n        let custom = eventEl.dataset.custom;\n\n        return {\n          id: id,\n          title: title,\n          color: color,\n          custom: custom,\n          create: true,\n        };\n      },\n    });\n  }, []);\n\n  // handle event receive\n  const handleEventReceive = (eventInfo) => {\n    const newEvent = {\n      id: eventInfo.draggedEl.getAttribute(\"data-id\"),\n      title: eventInfo.draggedEl.getAttribute(\"title\"),\n      color: eventInfo.draggedEl.getAttribute(\"data-color\"),\n      start: eventInfo.date,\n      end: eventInfo.date,\n      custom: eventInfo.draggedEl.getAttribute(\"data-custom\"),\n      showDeleteButton: true,\n    };\n\n    // setState((prevState) => ({\n    //     ...prevState,\n    //     calendarEvents: prevState.calendarEvents.concat(newEvent)\n    // }));\n  };\n\n  // handle deletion of an event\n\n  const handleEventClick = (info) => {\n    console.log(info, \"sssss\");\n    info.event.remove();\n  };\n\n  function renderEventContent(eventInfo) {\n    console.log(eventInfo, \"eventInfo inside renderEventContent\");\n    const { event } = eventInfo;\n    const { title, timeText } = event;\n    console.log(eventInfo.timeText, \"ooooo\");\n    return (\n      <>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-evenly\",\n            height: \"-webkit-fill-available\",\n          }}\n        >\n          <img\n            src={event.extendedProps.custom}\n            className=\"day-schedule-fullcelender-img\"\n            alt=\"Event\"\n          />\n          <p className=\"m-0 fullcalender-title\">{title}</p>\n          <p className=\"m-0 fullcalender-time\">{eventInfo.timeText}</p>\n\n          <h5 className=\"m-0\" onClick={() => handleEventClick(eventInfo)}>\n            de\n          </h5>\n        </div>\n      </>\n    );\n  }\n  useEffect(() => {\n    const calendarEl = document.getElementById(\"fullCalendar-table\");\n    if (calendarEl) {\n      calendarEl.style.backgroundColor = \"#fff\"; // Set your desired background color here\n    }\n  }, []);\n  useEffect(() => {\n    const calendarContainer = document.querySelector(\".fullcalendar-container\");\n    if (calendarContainer) {\n      calendarContainer.style.backgroundColor = \"#f0f0f0\"; // Set the desired background color here\n    }\n  }, []);\n  return (\n    <div className=\"App\">\n      <div style={{ float: \"left\", width: \"25%\" }}>\n        <div id=\"external-events\">\n          {state.externalEvents.map((event) => (\n            <div\n              className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\n              title={event.title}\n              data-id={event.id}\n              data-color={event.color}\n              data-custom={event.custom}\n              key={event.id}\n              style={{\n                backgroundColor: event.color,\n                borderColor: event.color,\n                cursor: \"pointer\"\n              }}\n            >\n              <div className=\"fc-event-main\">\n                <div>\n                  <strong>{event.title}</strong>\n                </div>\n                <img src={event.custom} />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div style={{ float: \"left\", width: \"75%\" }}>\n        <FullCalendar\n            id=\"fullCalendar-table\"\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n          // headerToolbar={{\n          //     left: \"\",\n          //     center: \"\",\n          //     right: \"\"\n          // }}\n          headerToolbar={false}\n          initialView=\"timeGridDay\"\n          slotDuration=\"00:10:00\"\n          slotLabelInterval={{ hours: 1 }}\n          allDaySlot={false}\n          editable={true}\n          selectable={false}\n          selectMirror={true}\n          dayMaxEvents={false}\n          weekends={state.weekendsVisible}\n          // events={state.calendarEvents}\n          droppable={true}\n          eventReceive={handleEventReceive}\n          slotEventOverlap={false}\n          eventOverlap={false}\n          // select={handleSelect}\n          // eventClick={handleEventClick}\n          // eventRender={handleEventRender}\n          eventContent={renderEventContent}\n         \n        ></FullCalendar>\n      </div>\n    </div>\n  );\n}\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/MonthSchedule.jsx",["748","749","750","751","752","753","754"],"\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { createPlugin } from \"@fullcalendar/core\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\n\nconst MyCustomPlugin = createPlugin({\n  ...timeGridPlugin,\n  ...interactionPlugin,\n  // other plugin options\n});\n\nexport default function MonthSchedule() {\n  // initial state\n\n  const [state, setState] = useState({\n    weekendsVisible: true,\n    externalEvents: [\n      {\n        title: \"Art 1\",\n        color: \"#0097a7\",\n        id: 34432,\n        custom: defaultComparisonIcon,\n      },\n      {\n        title: \"Art 2\",\n        color: \"#f44336\",\n        id: 323232,\n\n        custom: defaultComparisonIcon,\n      },\n      {\n        title: \"Art 3\",\n        color: \"#f57f17\",\n        id: 1111,\n\n        custom: defaultComparisonIcon,\n      },\n      {\n        title: \"Art 4\",\n        color: \"#90a4ae\",\n        id: 432432,\n\n        custom: defaultComparisonIcon,\n      },\n    ],\n    // calendarEvents: [\n    //     {\n    //         id: 1,\n    //         title: \"All-day event\",\n    //         color: \"#388e3c\",\n    //         start: \"2020-12-12\",\n    //         end: \"2020-12-12\",\n    //         custom: \"questo è un campo custom\"\n    //     },\n    //     {\n    //         id: 2,\n    //         title: \"Timed event\",\n    //         color: \"#0097a7\",\n    //         start: \"2020-12-07\",\n    //         end: \"2020-12-10\",\n    //         custom: \"custom stuff\"\n    //     }\n    // ].map((event) => ({\n    //     ...event,\n    //     showDeleteButton: true,\n    //     extendedProps: {\n    //         ...event.extendedProps,\n    //         imageUrl: defaultComparisonIcon, // Add the image URL here\n    //     },\n    // }))\n  });\n\n  // load external events\n  useEffect(() => {\n    let draggableEl = document.getElementById(\"external-events\");\n    new Draggable(draggableEl, {\n      itemSelector: \".fc-event\",\n      eventData: function (eventEl) {\n        let id = eventEl.dataset.id;\n        let title = eventEl.getAttribute(\"title\");\n        let color = \"#FFE494\";\n\n        return {\n          id: id,\n          title: title,\n          color: color,\n          create: true,\n        };\n      },\n    });\n  }, []);\n\n  // handle event receive\n  const handleEventReceive = (eventInfo) => {\n    const newEvent = {\n      id: eventInfo.draggedEl.getAttribute(\"data-id\"),\n      title: eventInfo.draggedEl.getAttribute(\"title\"),\n      color: eventInfo.draggedEl.getAttribute(\"data-color\"),\n      start: eventInfo.date,\n      end: eventInfo.date,\n      showDeleteButton: true,\n    };\n\n    // setState((prevState) => ({\n    //     ...prevState,\n    //     calendarEvents: prevState.calendarEvents.concat(newEvent)\n    // }));\n  };\n\n  // handle deletion of an event\n\n  const handleEventClick = (info) => {\n    console.log(info, \"sssss\");\n    info.event.remove();\n  };\n\n  function renderEventContent(eventInfo) {\n    console.log(eventInfo, \"eventInfo inside renderEventContent\");\n    const { event } = eventInfo;\n    const { title, timeText } = event;\n    console.log(eventInfo.timeText, \"ooooo\");\n    return (\n      <>\n        <div\n        //   style={{\n        //     display: \"flex\",\n        //     flexDirection: \"row\",\n        //     alignItems: \"center\",\n        //     justifyContent: \"space-evenly\",\n        //     height: \"-webkit-fill-available\",\n        //   }}\n        >\n       \n          <p className=\"m-0 fullcalender-title\">{title}</p>\n          {/* <p className=\"m-0 fullcalender-time\">{eventInfo.timeText}</p> */}\n\n          {/* <h5 className=\"m-0\" onClick={() => handleEventClick(eventInfo)}>\n            de\n          </h5> */}\n        </div>\n      </>\n    );\n  }\n \n  return (\n    <div className=\"App\">\n      <div style={{ float: \"left\", width: \"25%\" }}>\n        <div id=\"external-events\">\n          {state.externalEvents.map((event) => (\n            <div\n              className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\n              title={event.title}\n              data-id={event.id}\n              data-color={event.color}\n            \n              key={event.id}\n              style={{\n                backgroundColor: event.color,\n                borderColor: event.color,\n                cursor: \"pointer\"\n              }}\n            >\n              <div className=\"fc-event-main\">\n                <div>\n                  <strong>{event.title}</strong>\n                </div>\n                <img src={event.custom} />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div style={{ float: \"left\", width: \"75%\" }}>\n        <FullCalendar\n            id=\"fullCalendar-table\"\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n          // headerToolbar={{\n          //     left: \"\",\n          //     center: \"\",\n          //     right: \"\"\n          // }}\n          headerToolbar={false}\n          initialView=\"dayGridMonth\"\n        //   slotDuration=\"00:10:00\"\n        //   slotLabelInterval={{ hours: 1 }}\n          allDaySlot={false}\n          editable={true}\n          selectable={false}\n          selectMirror={true}\n          dayMaxEvents={false}\n          weekends={state.weekendsVisible}\n          // events={state.calendarEvents}\n          droppable={true}\n          eventReceive={handleEventReceive}\n          slotEventOverlap={false}\n          eventOverlap={false}\n          // select={handleSelect}\n          // eventClick={handleEventClick}\n          // eventRender={handleEventRender}\n          eventContent={renderEventContent}\n         \n        ></FullCalendar>\n      </div>\n    </div>\n  );\n}\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/CopyMonthSchedule.jsx",["755","756","757","758"],"// import React, { useEffect, useState } from \"react\";\n// import FullCalendar from \"@fullcalendar/react\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n// import timeGridPlugin from \"@fullcalendar/timegrid\";\n// import interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\n\n// export default function CopyMonthSchedule() {\n//   // initial state\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n// const [assignedDates, setAssignedDates] = useState([]);\n// const [selectedDate, setSelectedDate] = useState(null);\n\n//   const [state, setState] = useState({\n//     weekendsVisible: true,\n//     externalEvents: [\n//       { title: \"Art 1\", color: \"#0097a7\", id: 34432, custom: \"fdsfdsfds\" },\n//       { title: \"Art 2\", color: \"#f44336\", id: 323232 },\n//       { title: \"Art 3\", color: \"#f57f17\", id: 1111 },\n//       { title: \"Art 4\", color: \"#90a4ae\", id: 432432 }\n//     ],\n//     calendarEvents: [\n//       {\n//         id: 1,\n//         title: \"All-day event\",\n//         color: \"#388e3c\",\n//         start: \"2020-12-12\",\n//         end: \"2020-12-12\",\n//         custom: \"questo è un campo custom\"\n//       },\n//       {\n//         id: 2,\n//         title: \"Timed event\",\n//         color: \"#0097a7\",\n//         start: \"2020-12-07\",\n//         end: \"2020-12-10\",\n//         custom: \"custom stuff\"\n//       }\n//     ]\n//   });\n\n//   // load external events\n//   useEffect(() => {\n//     let draggableEl = document.getElementById(\"external-events\");\n//     new Draggable(draggableEl, {\n//       itemSelector: \".fc-event\",\n//       eventData: function (eventEl) {\n//         let id = eventEl.dataset.id;\n//         let title = eventEl.getAttribute(\"title\");\n//         let color = eventEl.dataset.color;\n//         let custom = eventEl.dataset.custom;\n\n//         return {\n//           id: id,\n//           title: title,\n//           color: color,\n//           custom: custom,\n//           create: true\n//         };\n//       }\n//     });\n//   });\n\n//   // add external events\n//   const addEvent = () => {\n//     let newEvent = {\n//       id: 3433,\n//       title: \"Timed event\",\n//       color: \"#333333\",\n//       start: \"2020-12-31\",\n//       end: \"2020-12-31\",\n//       custom: \"custom stuff\"\n//     };\n\n//     setState((state) => {\n//       return {\n//         ...state,\n//         externalEvents: state.externalEvents.concat(newEvent)\n//       };\n//     });\n//   };\n\n//   // handle event receive\n//   const handleEventReceive = (eventInfo) => {\n//     const newEvent = {\n//       id: eventInfo.draggedEl.getAttribute(\"data-id\"),\n//       title: eventInfo.draggedEl.getAttribute(\"title\"),\n//       color: eventInfo.draggedEl.getAttribute(\"data-color\"),\n//       start: eventInfo.date,\n//       end: eventInfo.date,\n//       custom: eventInfo.draggedEl.getAttribute(\"data-custom\")\n//     };\n\n//     setSelectedEvent(null);\n\n//     setState((state) => ({\n//       ...state,\n//       calendarEvents: state.calendarEvents.concat(newEvent)\n//     }));\n//   };\n// //   const handleExternalEventClick = (event) => {\n// //     const eventId = event.currentTarget.getAttribute(\"data-id\");\n// //     const eventTitle = event.currentTarget.getAttribute(\"title\");\n// //     const eventColor = event.currentTarget.getAttribute(\"data-color\");\n// //     const eventCustom = event.currentTarget.getAttribute(\"data-custom\");\n\n// //     if (selectedEvent && selectedEvent.id === eventId) {\n// //       // Uncheck the selected event\n// //       setSelectedEvent(null);\n// //       setAssignedDates([]);\n// //     } else {\n// //       // Check a new event\n// //       setSelectedEvent({\n// //         id: eventId,\n// //         title: eventTitle,\n// //         color: eventColor,\n// //         custom: eventCustom\n// //       });\n// //       setAssignedDates(\n// //         state.calendarEvents\n// //           .filter((event) => event.title === eventTitle)\n// //           .map((event) => event.start)\n// //       );\n// //     }\n// //   };\n\n//   const handleExternalEventClick = (event) => {\n//     const eventId = event.currentTarget.getAttribute(\"data-id\");\n//     const eventTitle = event.currentTarget.getAttribute(\"title\");\n//     const eventColor = event.currentTarget.getAttribute(\"data-color\");\n//     const eventCustom = event.currentTarget.getAttribute(\"data-custom\");\n\n//     if (selectedEvent && selectedEvent.id === eventId && selectedDate) {\n//       // Uncheck the selected event and clear the selected date\n//       setSelectedEvent(null);\n//       setSelectedDate(null);\n//     } else {\n//       // Check a new event and set the selected date to the current date\n//       setSelectedEvent({\n//         id: eventId,\n//         title: eventTitle,\n//         color: eventColor,\n//         custom: eventCustom\n//       });\n//       setSelectedDate(new Date());\n//     }\n//   };\n\n//   const handleDateSelect = (selectInfo) => {\n//     setSelectedDate(selectInfo.startStr);\n//   };\n//   // Define handleEventRadioChange function\n// const handleEventRadioChange = (selectedEvent, selectedDate) => {\n//     if (selectedEvent && selectedDate) {\n//       setState((prevState) => {\n//         // Check if the event is already assigned to the selected date\n//         const isEventAssigned = prevState.calendarEvents.some(\n//           (event) =>\n//             event.id === selectedEvent.id &&\n//             event.start.toDateString() === selectedDate.toDateString()\n//         );\n\n//         if (isEventAssigned) {\n//           // Remove the event from the selected date\n//           const updatedEvents = prevState.calendarEvents.filter(\n//             (event) =>\n//               event.id !== selectedEvent.id ||\n//               event.start.toDateString() !== selectedDate.toDateString()\n//           );\n\n//           return {\n//             ...prevState,\n//             calendarEvents: updatedEvents\n//           };\n//         } else {\n//           // Add the event to the selected date\n//           const newEvent = {\n//             id: selectedEvent.id,\n//             title: selectedEvent.title,\n//             color: selectedEvent.color,\n//             start: selectedDate,\n//             end: selectedDate,\n//             custom: selectedEvent.custom\n//           };\n\n//           return {\n//             ...prevState,\n//             calendarEvents: prevState.calendarEvents.concat(newEvent)\n//           };\n//         }\n//       });\n//     }\n//   };\n\n//   const renderEventContent = (eventInfo) => {\n//     return (\n//       <>\n//         <div>{eventInfo.timeText}</div>\n//         <div>\n//           <input\n//             type=\"radio\"\n//             checked={\n//               selectedEvent &&\n//               selectedEvent.id === eventInfo.event.extendedProps.id &&\n//               selectedDate &&\n//               selectedDate.toDateString() === eventInfo.event.start.toDateString()\n//             }\n//             onChange={() => handleEventRadioChange(eventInfo.event)}\n//           />\n//           {eventInfo.event.title}\n//         </div>\n//       </>\n//     );\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div style={{ float: \"left\", width: \"25%\" }}>\n//         <div style={{ margin: \"0 0 20px\" }}>\n//           <input\n//             type=\"submit\"\n//             name=\"name\"\n//             onClick={addEvent}\n//             value=\"add external event\"\n//           />\n//         </div>\n//         <div id=\"external-events\" style={{width:\"100%\"}}>\n//           {/* {state.externalEvents.map((event) => (\n//             <div\n//               className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\n//               title={event.title}\n//               data-id={event.id}\n//               data-color={event.color}\n//               data-custom={event.custom}\n//               key={event.id}\n//               style={{\n//                 backgroundColor: event.color,\n//                 borderColor: event.color,\n//                 cursor: \"pointer\"\n//               }}\n//             >\n//               <div className=\"fc-event-main\" >\n//                 <div>\n//                   <strong>{event.title}</strong>\n//                 </div>\n//                 {event.custom}\n//               </div>\n//             </div>\n//           ))} */}\n//    {/* {state.externalEvents.map((event) => (\n//   <div\n//     className={`fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2 ${\n//       selectedEvent && selectedEvent.id === event.id ? \"selected\" : \"\"\n//     }`}\n//     title={event.title}\n//     data-id={event.id}\n//     data-color={event.color}\n//     data-custom={event.custom}\n//     key={event.id}\n//     onClick={handleExternalEventClick}\n//     style={{\n//       backgroundColor: event.color,\n//       borderColor: event.color,\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     <div className=\"fc-event-main\">\n//       <div>\n//         <strong>{event.title}</strong>\n//       </div>\n//       {event.custom}\n//     </div>\n//     {selectedEvent && selectedEvent.id === event.id && (\n//       <div>\n//         {state.calendarEvents.some(\n//           (calendarEvent) =>\n//             calendarEvent.title === selectedEvent.title &&\n//             assignedDates.includes(calendarEvent.start)\n//         ) ? (\n//           <span>Assigned</span>\n//         ) : (\n//           <input\n//             type=\"checkbox\"\n//             checked={assignedDates.length > 0}\n//             onChange={() => handleExternalEventClick(event)}\n//           />\n//         )}\n//       </div>\n//     )}\n//   </div>\n// ))} */}\n\n// {state.externalEvents.map((event) => (\n//   <div\n//     className={`fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2 ${\n//       selectedEvent && selectedEvent.id === event.id ? \"selected\" : \"\"\n//     }`}\n//     title={event.title}\n//     data-id={event.id}\n//     data-color={event.color}\n//     data-custom={event.custom}\n//     key={event.id}\n//     onClick={handleExternalEventClick}\n//     style={{\n//       backgroundColor: event.color,\n//       borderColor: event.color,\n//       cursor: \"pointer\"\n//     }}\n//   >\n//     <div className=\"fc-event-main\">\n//       <div>\n//         <strong>{event.title}</strong>\n//       </div>\n//       {event.custom}\n//     </div>\n//     {selectedEvent && selectedEvent.id === event.id && (\n//       <div>\n//         {state.calendarEvents.some(\n//           (calendarEvent) =>\n//             calendarEvent.title === selectedEvent.title &&\n//             calendarEvent.start.getDate() === selectedDate?.getDate()\n//         ) ? (\n//           <span>Assigned</span>\n//         ) : (\n//           <input\n//             type=\"checkbox\"\n//             checked={selectedDate && selectedDate.getDate() === new Date().getDate()}\n//             onChange={() => handleExternalEventClick(event)}\n//           />\n//         )}\n//       </div>\n//     )}\n//   </div>\n// ))}\n\n//         </div>\n//       </div>\n//       <div style={{ float: \"left\", width: \"75%\" }}>\n//         {/* <FullCalendar\n//           plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n\n//         headerToolbar={false}\n//           initialView=\"dayGridMonth\"\n//           editable={true}\n//           selectable={true}\n//           selectMirror={true}\n//           dayMaxEvents={true}\n//           weekends={state.weekendsVisible}\n//           events={state.calendarEvents}\n//           droppable={true}\n//           eventReceive={handleEventReceive}\n//         /> */}\n\n// <FullCalendar\n//   plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n//   headerToolbar={{\n//     left: \"prev,next today\",\n//     center: \"title\",\n//     right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n//   }}\n//   initialView=\"dayGridMonth\"\n//   editable={true}\n//   selectable={true}\n//   selectMirror={true}\n//   dayMaxEvents={true}\n//   weekends={state.weekendsVisible}\n//   events={state.calendarEvents}\n//   droppable={true}\n//   eventReceive={handleEventReceive}\n//   eventContent={renderEventContent} // Add this line\n// />\n\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useState } from \"react\";\n// import FullCalendar from \"@fullcalendar/react\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n// import timeGridPlugin from \"@fullcalendar/timegrid\";\n// import interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\n\n// export default function CopyMonthSchedule() {\n//   // initial state\n//   const [state, setState] = useState({\n//     weekendsVisible: true,\n//     externalEvents: [\n//       { title: \"Art 1\", color: \"#0097a7\", id: 34432, custom: \"fdsfdsfds\" },\n//       { title: \"Art 2\", color: \"#f44336\", id: 323232 },\n//       { title: \"Art 3\", color: \"#f57f17\", id: 1111 },\n//       { title: \"Art 4\", color: \"#90a4ae\", id: 432432 }\n//     ],\n//     calendarEvents: []\n//   });\n\n//   // load external events\n//   useEffect(() => {\n//     let draggableEl = document.getElementById(\"external-events\");\n//     new Draggable(draggableEl, {\n//       itemSelector: \".fc-event\",\n//       eventData: function (eventEl) {\n//         let id = eventEl.dataset.id;\n//         let title = eventEl.getAttribute(\"title\");\n//         let color = eventEl.dataset.color;\n//         let custom = eventEl.dataset.custom;\n\n//         return {\n//           id: id,\n//           title: title,\n//           color: color,\n//           custom: custom,\n//           create: true\n//         };\n//       }\n//     });\n//   });\n\n//   // handle external event selection\n//   const handleExternalEventSelect = (event) => {\n//     setState((prevState) => {\n//       // Clear any previously selected events\n//       const calendarEvents = prevState.calendarEvents.map((event) => ({\n//         ...event,\n//         selected: false\n//       }));\n\n//       // Find the selected event\n//       const selectedEvent = calendarEvents.find(\n//         (ev) => ev.id === event.id && ev.selected\n//       );\n\n//       if (selectedEvent) {\n//         // Unselect the event if already selected\n//         selectedEvent.selected = false;\n//       } else {\n//         // Select the event\n//         event.selected = true;\n//       }\n\n//       return {\n//         ...prevState,\n//         calendarEvents: calendarEvents\n//       };\n//     });\n//   };\n\n//   // handle date click\n//   const handleDateClick = (arg) => {\n//     const selectedDate = arg.date;\n\n//     setState((prevState) => {\n//       const selectedEvent = prevState.calendarEvents.find(\n//         (event) => event.selected\n//       );\n\n//       if (selectedEvent) {\n//         // Add the selected event to the selected date\n//         const newEvent = {\n//           id: selectedEvent.id,\n//           title: selectedEvent.title,\n//           color: selectedEvent.color,\n//           start: selectedDate,\n//           end: selectedDate,\n//           custom: selectedEvent.custom\n//         };\n\n//         return {\n//           ...prevState,\n//           calendarEvents: prevState.calendarEvents.concat(newEvent)\n//         };\n//       }\n\n//       return prevState;\n//     });\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div style={{ float: \"left\", width: \"25%\" }}>\n//         <div id=\"external-events\" style={{ width: \"100%\" }}>\n//           {state.externalEvents.map((event) => (\n//             <div\n//               className={`fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2${\n//                 event.selected ? \" selected\" : \"\"\n//               }`}\n//               title={event.title}\n//               data-id={event.id}\n//               data-color={event.color}\n//               data-custom={event.custom}\n//               key={event.id}\n//               onClick={() => handleExternalEventSelect(event)}\n//               style={{\n//                 backgroundColor: event.color,\n//                 borderColor: event.color,\n//                 cursor: \"pointer\"\n//               }}\n//             >\n//               <div className=\"fc-event-main\">\n//                 <div>\n//                   <strong>{event.title}</strong>\n//                 </div>\n//                 {event.custom}\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//       <div style={{ float: \"left\", width: \"75%\" }}>\n//         <FullCalendar\n//           plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n//           headerToolbar={false}\n//           initialView=\"dayGridMonth\"\n//           editable={true}\n//           selectable={true}\n//           selectMirror={true}\n//           dayMaxEvents={true}\n//           weekends={state.weekendsVisible}\n//           events={state.calendarEvents}\n//           dateClick={handleDateClick}\n//           eventRender={({ event, el }) => {\n//             // Add radio button to each date\n//             const inputEl = document.createElement(\"input\");\n//             inputEl.type = \"radio\";\n//             inputEl.addEventListener(\"change\", () =>\n//               handleExternalEventSelect(event)\n//             );\n\n//             el.prepend(inputEl);\n//           }}\n//         />\n//       </div>\n//     </div>\n//   );\n// }\n\n// -----------------------------------\n\n// import React, { useState } from \"react\";\n// import FullCalendar from \"@fullcalendar/react\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n\n// export default function CalendarWithRadioButtons() {\n//   const [selectedDate, setSelectedDate] = useState(null);\n\n//   const handleDateClick = (dateClickInfo) => {\n//     setSelectedDate(dateClickInfo.date);\n//   };\n\n//   const renderDateCell = (dateInfo) => {\n//     const isSelected = selectedDate && dateInfo.date.valueOf() === selectedDate.valueOf();\n\n//     return (\n//       <div>\n//         <input\n//           type=\"radio\"\n//           checked={isSelected}\n//           onChange={() => setSelectedDate(dateInfo.date)}\n//         />\n//         {dateInfo.dayNumberText}\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div className=\"calendar\">\n//       <FullCalendar\n//         plugins={[dayGridPlugin]}\n//         initialView=\"dayGridMonth\"\n//         selectable={true}\n//         dateClick={handleDateClick}\n//         dayCellContent={renderDateCell}\n//       />\n//     </div>\n//   );\n// }\n\n// -----------------------------------\n\n//******************************* */\nimport React, { useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nexport default function CalendarWithEventList() {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [events, setEvents] = useState([\n    { id: 1, title: \"Event 1\", start: \"2023-05-01\", end: \"2023-05-02\" },\n    { id: 2, title: \"Event 2\", start: \"2023-05-03\", end: \"2023-05-04\" },\n    { id: 3, title: \"Event 3\", start: \"2023-05-05\", end: \"2023-05-06\" },\n    { id: 4, title: \"Event 4\", start: \"2023-05-07\", end: \"2023-05-08\" },\n  ]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  console.log(selectedEvent, \"lllllllloooooo\");\n  const [selectedCheckboxes, setSelectedCheckboxes] = useState({});\n\n  const renderDateCell = (dateInfo) => {\n    const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\n    const isSelected = selectedDateValue === dateInfo.date.valueOf();\n    const isEventSelected = selectedEvent;\n\n    if (isEventSelected) {\n      const checkboxKey = dateInfo.date.toISOString();\n      const hasEvent = events.some(\n        (event) => event.start.valueOf() === dateInfo.date.valueOf()\n      );\n\n      return (\n        <div>\n          <input\n            name={`checkbox-${checkboxKey}`}\n            type=\"checkbox\"\n            checked={isSelected || selectedCheckboxes[checkboxKey]}\n            onChange={() => handleDateCellChange(dateInfo)}\n          />\n          {dateInfo.dayNumberText}\n        </div>\n      );\n    }\n\n    return dateInfo.dayNumberText;\n  };\n\n  // const handleDateCellChange = (dateInfo) => {\n  //   if (selectedEvent) {\n  //     const checkboxKey = dateInfo.date.toISOString();\n  //     const selectedDateValue = dateInfo.date.valueOf();\n  //     const filteredEvents = events.filter(\n  //       (event) => event.start.valueOf() !== selectedDateValue\n  //     );\n\n  //     const hasEvent = filteredEvents.some(\n  //       (event) => event.start.valueOf() === selectedDateValue\n  //     );\n\n  //     if (hasEvent) {\n  //       setSelectedEvent(null);\n  //       setSelectedDate(null);\n  //       setEvents(filteredEvents);\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => {\n  //         const updatedCheckboxes = { ...prevSelectedCheckboxes };\n  //         delete updatedCheckboxes[checkboxKey];\n  //         return updatedCheckboxes;\n  //       });\n  //     } else {\n  //       setSelectedDate(dateInfo.date);\n\n  //       const event = {\n  //         title: selectedEvent.title,\n  //         start: dateInfo.date,\n  //       };\n\n  //       setEvents([...filteredEvents, event]);\n\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n  //         ...prevSelectedCheckboxes,\n  //         [checkboxKey]: true,\n  //       }));\n  //     }\n  //   } else {\n  //     setSelectedDate(dateInfo.date);\n  //   }\n  // };\n\n  // const handleDateCellChange = (dateInfo) => {\n  //   console.log(dateInfo, \"iiiiiiiiiii\");\n  //   const checkboxKey = dateInfo.date.toISOString();\n  //   const selectedDateValue = dateInfo.date.valueOf();\n  //   const filteredEvents = events.filter(\n  //     (event) => event.start.valueOf() !== selectedDateValue\n  //   );\n\n  //   const date = new Date(dateInfo.date);\n  //   const formattedDate = date.toLocaleDateString(\"en-GB\", {\n  //     year: \"numeric\",\n  //     month: \"2-digit\",\n  //     day: \"2-digit\",\n  //   });\n\n  //   const [day, month, year] = formattedDate.split(\"/\");\n  //   const desiredFormat = `${year}-${month}-${day}`;\n  //   // console.log(filteredEvents, \"cgvjhjghgk\");\n  //   let hasEvent = false;\n  //   console.log(dateInfo, \"arti\");\n  //   console.log(Object.keys(dateInfo), \"dj\");\n  //   // console.log(example, \"test\");\n  //   // if (dateInfo.event) {\n  //   //   hasEvent = filteredEvents.some((event) =>\n  //   //     console.log(event, \"ttttttttt\")\n  //   //   );\n  //   // }\n  //   console.log(events.id);\n\n  //   if (dateInfo.event && dateInfo.event.id === dateInfo.id) {\n  //     hasEvent = filteredEvents.some((ev) => ev.id === dateInfo.event.id);\n  //   }\n  //   // console.log(hasEvent, \"pppppp\");\n  //   if (hasEvent) {\n  //     setSelectedEvent(null);\n  //     setSelectedDate(null);\n  //     setEvents(filteredEvents);\n  //     setSelectedCheckboxes((prevSelectedCheckboxes) => {\n  //       const updatedCheckboxes = { ...prevSelectedCheckboxes };\n  //       delete updatedCheckboxes[checkboxKey];\n  //       return updatedCheckboxes;\n  //     });\n  //   } else {\n  //     setSelectedDate(dateInfo.date);\n\n  //     if (selectedEvent) {\n  //       // console.log(selectedEvent, \"pppppppp\");\n  //       dateInfo.kkk = selectedEvent;\n  //       // var example = dateInfo.kkk;\n  //       // console.log(dateInfo, \"eeeeeee\");\n  //       const event = {\n  //         title: selectedEvent.title,\n  //         start: dateInfo.date,\n  //       };\n\n  //       setEvents([...filteredEvents, event]);\n\n  //       setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n  //         ...prevSelectedCheckboxes,\n  //         [checkboxKey]: true,\n  //       }));\n  //     }\n  //   }\n  // };\n\n  function handleDateCellChange(dateInfo) {\n    console.log(dateInfo, \"handleDateCellChange top console\");\n    const checkboxKey = dateInfo.date.toISOString();\n    const selectedDateValue = dateInfo.date.valueOf();\n    if (selectedEvent !== null) {\n      let testObj = JSON.parse(JSON.stringify(dateInfo));\n      testObj.event = selectedEvent;\n      dateInfo.kkk = selectedEvent;\n      console.log(dateInfo, testObj, \"dateInfo -> testObj\");\n      console.log(dateInfo.kkk, testObj.event, \"dateInfo -> testObj\");\n\n      const event = {\n        title: selectedEvent.title,\n        start: dateInfo.date,\n      };\n    }\n    const filteredEvents = events.filter(\n      (event) => event.start.valueOf() !== selectedDateValue\n    );\n\n    const date = new Date(dateInfo.date);\n    const formattedDate = date.toLocaleDateString(\"en-GB\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n    });\n\n    const [day, month, year] = formattedDate.split(\"/\");\n    const desiredFormat = `${year}-${month}-${day}`;\n\n    let hasEvent = false;\n    console.log(dateInfo, \"arti\");\n\n    if (dateInfo.event && dateInfo.event.id) {\n      hasEvent = filteredEvents.some((ev) => ev.id === dateInfo.event.id);\n    }\n\n    if (hasEvent) {\n      setSelectedEvent(null);\n      setSelectedDate(null);\n      setEvents(filteredEvents);\n      setSelectedCheckboxes((prevSelectedCheckboxes) => {\n        const updatedCheckboxes = { ...prevSelectedCheckboxes };\n        delete updatedCheckboxes[checkboxKey];\n        return updatedCheckboxes;\n      });\n    } else {\n      setSelectedDate(dateInfo.date);\n\n      if (\n        selectedEvent &&\n        dateInfo.event &&\n        selectedEvent.id === dateInfo.event.id\n      ) {\n        const eventToRemove = events.find(\n          (event) => event.id === selectedEvent.id\n        );\n        const updatedEvents = events.filter(\n          (event) => event.id !== selectedEvent.id\n        );\n        setSelectedEvent(null);\n        setSelectedDate(null);\n        setEvents(updatedEvents);\n        setSelectedCheckboxes((prevSelectedCheckboxes) => {\n          const updatedCheckboxes = { ...prevSelectedCheckboxes };\n          delete updatedCheckboxes[checkboxKey];\n          return updatedCheckboxes;\n        });\n      } else if (selectedEvent) {\n        const event = {\n          id: selectedEvent.id,\n          title: selectedEvent.title,\n          start: dateInfo.date,\n        };\n        setEvents([...filteredEvents, event]);\n\n        setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n          ...prevSelectedCheckboxes,\n          [checkboxKey]: true,\n        }));\n      }\n    }\n  }\n\n  const getDatesBetween = (start, end) => {\n    const dates = [];\n    let currentDate = new Date(start);\n\n    while (currentDate <= end) {\n      dates.push(currentDate.toISOString().split(\"T\")[0]);\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n\n    return dates;\n  };\n\n  const addCheckboxesToDates = (event) => {\n    const allDates = getDatesBetween(event.start, event.end);\n\n    const calendarEl = document.querySelector(\".calendar-container\");\n    allDates.forEach((date) => {\n      const dateCell = calendarEl.querySelector(`[data-date=\"${date}\"]`);\n      dateCell.classList.add(\"selected-date\");\n    });\n  };\n\n  const handleEventClick = (event) => {\n    setSelectedEvent(event);\n    setSelectedDate(null); // Reset selected date\n    addCheckboxesToDates(event);\n  };\n\n  // const events = [\n  //   { id: 1, title: \"Event 1\", start: \"2023-05-01\", end: \"2023-05-02\" },\n  //   { id: 2, title: \"Event 2\", start: \"2023-05-03\", end: \"2023-05-04\" },\n  //   { id: 3, title: \"Event 3\", start: \"2023-05-05\", end: \"2023-05-06\" },\n  //   { id: 4, title: \"Event 4\", start: \"2023-05-07\", end: \"2023-05-08\" },\n  // ];\n  return (\n    <div className=\"containe\">\n      <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\n        <h2>Event List</h2>\n        <ul>\n          {events.map((event) => (\n            <li\n              key={event.id}\n              onClick={() => handleEventClick(event)}\n              style={{\n                cursor: \"pointer\",\n                fontWeight:\n                  selectedEvent && selectedEvent.id === event.id\n                    ? \"bold\"\n                    : \"normal\",\n              }}\n            >\n              {event.title}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\n        <FullCalendar\n          plugins={[dayGridPlugin, interactionPlugin]}\n          initialView=\"dayGridMonth\"\n          selectable={true}\n          events={events}\n          dayCellContent={renderDateCell}\n          eventContent={(info) => {\n            return (\n              <div>\n                <div>{info.event.title}</div>\n              </div>\n            );\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n//*********************************** */\n\n// import React, { useState } from \"react\";\n// import FullCalendar from \"@fullcalendar/react\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n// import interactionPlugin from \"@fullcalendar/interaction\";\n\n// export default function CalendarWithEventList() {\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [events, setEvents] = useState([]);\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n//   const [selectedRadio, setSelectedRadio] = useState({});\n\n//   const handleDateCellChange = (dateInfo) => {\n//     if (selectedEvent) {\n//       const selectedDateValue = dateInfo.date.valueOf();\n//       const filteredEvents = events.filter(\n//         (event) => event.start.valueOf() !== selectedDateValue\n//       );\n\n//       const hasEvent = filteredEvents.some(\n//         (event) => event.start.valueOf() === selectedDateValue\n//       );\n\n//       if (hasEvent) {\n//         setSelectedEvent(null);\n//         setSelectedDate(null);\n//         setEvents(filteredEvents);\n//         setSelectedRadio({}); // Clear the selected radio state for the date\n//       } else {\n//         setSelectedDate(dateInfo.date);\n\n//         const event = {\n//           title: selectedEvent.title,\n//           start: dateInfo.date,\n//         };\n\n//         setEvents([...filteredEvents, event]);\n//         setSelectedRadio((prevSelectedRadio) => ({\n//           ...prevSelectedRadio,\n//           [dateInfo.date.toISOString()]: true, // Set the selected radio state for the date\n//         }));\n//       }\n//     } else {\n//       setSelectedDate(dateInfo.date);\n//       setSelectedRadio((prevSelectedRadio) => ({\n//         ...prevSelectedRadio,\n//         [dateInfo.date.toISOString()]: true, // Set the selected radio state for the date\n//       }));\n//     }\n//   };\n\n//   const renderDateCell = (dateInfo) => {\n//     const isSelected = selectedDate\n//       ? selectedDate.valueOf() === dateInfo.date.valueOf()\n//       : false;\n//     const isEventSelected = selectedEvent;\n//     const radioKey = dateInfo.date.toISOString();\n\n//     if (isEventSelected) {\n//       const radioButtonName = `radio-${radioKey}`;\n//       const hasEvent = events.some(\n//         (event) => event.start.valueOf() === dateInfo.date.valueOf()\n//       );\n\n//       return (\n//         <div>\n//           <input\n//             name={radioButtonName}\n//             type=\"radio\"\n//             checked={isSelected && selectedRadio[radioKey]}\n//             onChange={() => handleDateCellChange(dateInfo)}\n//           />\n//           {dateInfo.dayNumberText}\n//         </div>\n//       );\n//     }\n\n//     return dateInfo.dayNumberText;\n//   };\n\n//   const getDatesBetween = (start, end) => {\n//     const dates = [];\n//     let currentDate = new Date(start);\n\n//     while (currentDate <= end) {\n//       dates.push(currentDate.toISOString().split(\"T\")[0]);\n//       currentDate.setDate(currentDate.getDate() + 1);\n//     }\n\n//     return dates;\n//   };\n\n//   const addRadioButtonsToDates = (event) => {\n//     const allDates = getDatesBetween(event.start, event.end);\n\n//     const calendarEl = document.querySelector(\".calendar-container\");\n//     allDates.forEach((date) => {\n//       const dateCell = calendarEl.querySelector(`[data-date=\"${date}\"]`);\n//       dateCell.classList.add(\"selected-date\");\n//     });\n//   };\n\n//   const handleEventClick = (event) => {\n//     setSelectedEvent(event);\n//     setSelectedDate(null); // Reset selected date\n//     addRadioButtonsToDates(event);\n//   };\n\n//   const eventsa = [\n//     { id: 1, title: \"Event 1\", start: \"2023-05-01\", end: \"2023-05-02\" },\n//     { id: 2, title: \"Event 2\", start: \"2023-05-03\", end: \"2023-05-04\" },\n//     { id: 3, title: \"Event 3\", start: \"2023-05-05\", end: \"2023-05-06\" },\n//     { id: 4, title: \"Event 4\", start: \"2023-05-07\", end: \"2023-05-08\" },\n//   ];\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\n//         <h2>Event List</h2>\n//         <ul>\n//           {eventsa.map((event) => (\n//             <li\n//               key={event.id}\n//               onClick={() => handleEventClick(event)}\n//               style={{\n//                 cursor: \"pointer\",\n//                 fontWeight:\n//                   selectedEvent && selectedEvent.id === event.id\n//                     ? \"bold\"\n//                     : \"normal\",\n//               }}\n//             >\n//               {event.title}\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//       <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\n//         <FullCalendar\n//           plugins={[dayGridPlugin, interactionPlugin]}\n//           initialView=\"dayGridMonth\"\n//           selectable={true}\n//           events={events}\n//           dayCellContent={renderDateCell}\n//           eventContent={(info) => {\n//             return (\n//               <div>\n//                 <div>{info.event.title}</div>\n//               </div>\n//             );\n//           }}\n//         />\n//       </div>\n//     </div>\n//   );\n// };\n\n// second month\n\n// import React, { useState } from \"react\";\n// import FullCalendar from \"@fullcalendar/react\";\n// import dayGridPlugin from \"@fullcalendar/daygrid\";\n// import interactionPlugin from \"@fullcalendar/interaction\";\n\n// export default function SecondMonth() {\n//     const [selectedDate, setSelectedDate] = useState(null);\n//     const [events, setEvents] = useState([\n//         { id: 1, title: \"Event 1\", start: \"2023-05-01\", end: \"2023-05-02\" },\n//         { id: 2, title: \"Event 2\", start: \"2023-05-03\", end: \"2023-05-04\" },\n//         { id: 3, title: \"Event 3\", start: \"2023-05-05\", end: \"2023-05-06\" },\n//         { id: 4, title: \"Event 4\", start: \"2023-05-07\", end: \"2023-05-08\" },\n//     ]);\n//     const [selectedEvent, setSelectedEvent] = useState(null);\n//     console.log(selectedEvent, \"lllllllloooooo\");\n//     const [selectedCheckboxes, setSelectedCheckboxes] = useState({});\n\n//     function handleDateCellChange(dateInfo) {\n//         console.log(dateInfo, \"oooooo\")\n//         console.log(dateInfo, \"handleDateCellChange top console\");\n//         const checkboxKey = dateInfo.date.toISOString();\n//         const selectedDateValue = dateInfo.date.valueOf();\n//         const isChecked = selectedCheckboxes[checkboxKey];\n\n//         if (isChecked) {\n//             // Unselecting the checkbox\n//             setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//                 const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//                 delete updatedCheckboxes[checkboxKey];\n//                 return updatedCheckboxes;\n//             });\n\n//             const filteredEvents = events.filter(\n//                 (event) => event.start.valueOf() !== selectedDateValue\n//             );\n\n//             setSelectedEvent(null);\n//             setSelectedDate(null);\n//             setEvents(filteredEvents);\n//         } else {\n//             // Selecting the checkbox\n//             setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//                 ...prevSelectedCheckboxes,\n//                 [checkboxKey]: true,\n//             }));\n\n//             const event = {\n//                 id: selectedEvent.id,\n//                 title: selectedEvent.title,\n//                 start: dateInfo.date,\n//             };\n//             setEvents((prevEvents) => [...prevEvents, event]);\n//         }\n//     }\n\n//     // function handleDateCellChange(dateInfo) {\n//     //     console.log(dateInfo, \"handleDateCellChange top console\");\n//     //     const checkboxKey = dateInfo.date.toISOString();\n//     //     const isChecked = selectedCheckboxes[checkboxKey];\n\n//     //     if (isChecked) {\n//     //         // Unselecting the checkbox\n//     //         setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//     //             const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//     //             delete updatedCheckboxes[checkboxKey];\n//     //             return updatedCheckboxes;\n//     //         });\n\n//     //         const eventToRemove = events.find(\n//     //             (event) => event.start.valueOf() === dateInfo.date.valueOf()\n//     //         );\n\n//     //         if (eventToRemove) {\n//     //             const updatedEvents = events.filter(\n//     //                 (event) => event.id !== eventToRemove.id\n//     //             );\n//     //             setEvents(updatedEvents);\n//     //         }\n//     //     } else {\n//     //         // Selecting the checkbox\n//     //         setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//     //             ...prevSelectedCheckboxes,\n//     //             [checkboxKey]: true,\n//     //         }));\n\n//     //         const event = {\n//     //             id: selectedEvent.id,\n//     //             title: selectedEvent.title,\n//     //             start: dateInfo.date,\n//     //         };\n\n//     //         setEvents((prevEvents) => [...prevEvents, event]);\n//     //     }\n//     // }\n\n//     const renderDateCell = (dateInfo) => {\n//         console.log(dateInfo, \"ppppp\")\n//         const selectedDateValue = selectedDate ? selectedDate.valueOf() : null;\n//         const isSelected = selectedDateValue === dateInfo.date.valueOf();\n//         const isEventSelected = selectedEvent;\n\n//         if (isEventSelected) {\n//             const checkboxKey = dateInfo.date.toISOString();\n\n//             return (\n//                 <div>\n//                     <input\n//                         name={`checkbox-${checkboxKey}`}\n//                         type=\"checkbox\"\n//                         checked={isSelected || selectedCheckboxes[checkboxKey]}\n//                         onChange={() => handleDateCellChange(dateInfo)}\n//                     />\n//                     {dateInfo.dayNumberText}\n//                 </div>\n//             );\n//         }\n\n//         return dateInfo.dayNumberText;\n//     };\n\n//     // function handleDateCellChange(dateInfo) {\n//     //     console.log(dateInfo, \"handleDateCellChange top console\");\n//     //     const checkboxKey = dateInfo.date.toISOString();\n//     //     const selectedDateValue = dateInfo.date.valueOf();\n//     //     if (selectedEvent !== null) {\n//     //         let testObj = JSON.parse(JSON.stringify(dateInfo));\n//     //         testObj.event = selectedEvent;\n//     //         dateInfo.kkk = selectedEvent;\n//     //         console.log(dateInfo, testObj, \"dateInfo -> testObj\");\n//     //         console.log(dateInfo.kkk, testObj.event, \"dateInfo -> testObj\");\n\n//     //         const event = {\n//     //             title: selectedEvent.title,\n//     //             start: dateInfo.date,\n//     //         };\n//     //     }\n//     //     const filteredEvents = events.filter(\n//     //         (event) => event.start.valueOf() !== selectedDateValue\n//     //     );\n\n//     //     const date = new Date(dateInfo.date);\n//     //     const formattedDate = date.toLocaleDateString(\"en-GB\", {\n//     //         year: \"numeric\",\n//     //         month: \"2-digit\",\n//     //         day: \"2-digit\",\n//     //     });\n\n//     //     const [day, month, year] = formattedDate.split(\"/\");\n//     //     const desiredFormat = `${year}-${month}-${day}`;\n\n//     //     let hasEvent = false;\n//     //     console.log(dateInfo, \"arti\");\n\n//     //     if (dateInfo.event && dateInfo.event.id) {\n//     //         hasEvent = filteredEvents.some((ev) => ev.id === dateInfo.event.id);\n//     //     }\n\n//     //     if (hasEvent) {\n//     //         setSelectedEvent(null);\n//     //         setSelectedDate(null);\n//     //         setEvents(filteredEvents);\n//     //         setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//     //             const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//     //             delete updatedCheckboxes[checkboxKey];\n//     //             return updatedCheckboxes;\n//     //         });\n//     //     } else {\n//     //         setSelectedDate(dateInfo.date);\n\n//     //         if (\n//     //             selectedEvent &&\n//     //             dateInfo.event &&\n//     //             selectedEvent.id === dateInfo.event.id\n//     //         ) {\n//     //             const eventToRemove = events.find(\n//     //                 (event) => event.id === selectedEvent.id\n//     //             );\n//     //             const updatedEvents = events.filter(\n//     //                 (event) => event.id !== selectedEvent.id\n//     //             );\n//     //             setSelectedEvent(null);\n//     //             setSelectedDate(null);\n//     //             setEvents(updatedEvents);\n//     //             setSelectedCheckboxes((prevSelectedCheckboxes) => {\n//     //                 const updatedCheckboxes = { ...prevSelectedCheckboxes };\n//     //                 delete updatedCheckboxes[checkboxKey];\n//     //                 return updatedCheckboxes;\n//     //             });\n//     //         } else if (selectedEvent) {\n//     //             const event = {\n//     //                 id: selectedEvent.id,\n//     //                 title: selectedEvent.title,\n//     //                 start: dateInfo.date,\n//     //             };\n//     //             setEvents([...filteredEvents, event]);\n\n//     //             setSelectedCheckboxes((prevSelectedCheckboxes) => ({\n//     //                 ...prevSelectedCheckboxes,\n//     //                 [checkboxKey]: true,\n//     //             }));\n//     //         }\n//     //     }\n//     // }\n\n//     // const getDatesBetween = (start, end) => {\n//     //     const dates = [];\n//     //     let currentDate = new Date(start);\n\n//     //     while (currentDate <= end) {\n//     //         dates.push(currentDate.toISOString().split(\"T\")[0]);\n//     //         currentDate.setDate(currentDate.getDate() + 1);\n//     //     }\n\n//     //     return dates;\n//     // };\n\n//     // const addCheckboxesToDates = (event) => {\n//     //     const allDates = getDatesBetween(event.start, event.end);\n\n//     //     const calendarEl = document.querySelector(\".calendar-container\");\n//     //     allDates.forEach((date) => {\n//     //         const dateCell = calendarEl.querySelector(`[data-date=\"${date}\"]`);\n//     //         dateCell.classList.add(\"selected-date\");\n//     //     });\n//     // };\n\n//     const handleEventClick = (event) => {\n//         setSelectedEvent(event);\n//         setSelectedDate(null); // Reset selected date\n//         // addCheckboxesToDates(event);\n//     };\n\n//     return (\n//         <div className=\"containe\">\n//             <div className=\"event-list\" style={{ float: \"left\", width: \"25%\" }}>\n//                 <h2>Event List</h2>\n//                 <ul>\n//                     {events.map((event, i) => (\n//                         <li\n//                             key={i}\n//                             onClick={() => handleEventClick(event)}\n//                             style={{\n//                                 cursor: \"pointer\",\n//                                 fontWeight:\n//                                     selectedEvent && selectedEvent.id === event.id\n//                                         ? \"bold\"\n//                                         : \"normal\",\n//                             }}\n//                         >\n//                             {event.title}\n//                         </li>\n//                     ))}\n//                 </ul>\n//             </div>\n//             <div className=\"calendar\" style={{ float: \"left\", width: \"75%\" }}>\n//                 <FullCalendar\n//                     plugins={[dayGridPlugin, interactionPlugin]}\n//                     initialView=\"dayGridMonth\"\n//                     selectable={true}\n//                     events={events}\n//                     dayCellContent={renderDateCell}\n//                     eventContent={(info) => {\n//                         return (\n//                             <div>\n//                                 <div>{info.event.title}</div>\n//                             </div>\n//                         );\n//                     }}\n//                 />\n//             </div>\n//         </div>\n//     );\n// }\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/details.jsx",["759","760","761","762","763"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/EditComposition.jsx",["764","765"],"import { useLocation } from \"react-router-dom\";\nimport useSWR from 'swr'\nimport CommonComposition from \"./Common\";\nimport { getCompositionById } from \"../../../../utils/api\";\nimport { useEffect, useState } from \"react\";\n\nconst EditComposition = () => {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const id = queryParams.get('id');\n\n  // const { data: composition , mutate , error} = useSWR(id ? `/vendor/layouts/composition?compositionId=${id}` : null, fetcher);\n  const [composition,setComposition] = useState(null)\n  const layout = composition ? composition.layout : {};\n\n\n  // Example useEffect for triggering SWR mutate on route change\n  const getData = async ()=>{\n    const data  =await getCompositionById(`/vendor/layouts/composition?compositionId=${id}`)\n    setComposition(data)\n  }\n  useEffect(() => {\n    if(id){\n      getData()\n      \n    }\n  }, [id]);\n\n  return (<>{composition && <CommonComposition type=\"edit\" layout={layout} composition={composition}/>}</>)\n};\n\nexport default EditComposition;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/CreateComposition.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/reports/reportsList.jsx",["766","767","768","769","770","771"],"import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getReports } from \"../../../utils/api\";\nimport { Button, Table, Dropdown } from \"react-bootstrap\";\nimport GenerateReportModal from \"../../modals/generateReportModal\";\nimport Uptime from './Uptime';\nimport Media from './Media';\nimport Audit from './Audit';\n\nexport default function ReportsList() {\n  const history = useHistory();\n  const [dropValue, setDropValue] = useState(\"Select\");\n  const [showGenerateModal, setShowGenerateModal] = useState(false);\n\n  let params = new URLSearchParams(history.location.search);\n  let startDate = params.get(\"startDate\");\n  let endDate = params.get(\"endDate\");\n  let type = params.get(\"type\");\n  let reportSlug = params.get(\"report\");\n  const [reportData, setReportData] = useState([]);\n  const handleDropDown = (e, data) => {\n    e.preventDefault();\n    setDropValue(data);\n  };\n  useEffect(() => {\n    console.log(startDate, endDate, \"semnd api\");\n    getReports(startDate, endDate, reportSlug).then((res) => {\n      console.log(res, \"res schedule getReports\");\n      if (res.data.statusCode === 200) {\n        setReportData(res.data.data);\n        // history.push(`/reports-list/${res.data.data}`);\n        // <ReportsList data={res.data.data} />;\n      }\n    });\n  }, [startDate, endDate, reportSlug]);\n\n  return (\n    <>\n      {\" \"}\n      <div className=\"custom-content-heading d-flex align-items-center\">\n        <div>\n          <h1 className=\"mb-4\">{reportSlug}</h1>\n        </div>\n        <div className=\" ml-auto d-flex flex-wrap align-items-center\">\n          <Dropdown>\n            <Dropdown.Toggle\n              variant=\"outline-primary\"\n              size=\"sm\"\n              className=\"mt-1 mb-2\"\n            >\n              {dropValue}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                onClick={(e) => {\n                  handleDropDown(e, \"Monthly\");\n                  setShowGenerateModal(true);\n                }}\n              >\n                Monthly\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={(e) => {\n                  handleDropDown(e, \"Daily\");\n                  setShowGenerateModal(true);\n                }}\n              >\n                Daily\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={(e) => {\n                  handleDropDown(e, \"Custom\");\n                  setShowGenerateModal(true);\n                }}\n              >\n                Custom\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      </div>\n      {reportSlug && reportSlug == 'uptime-report' ? <Uptime reportData={reportData}/> : ''}\n      {reportSlug && reportSlug == 'media-report' ? <Media reportData={reportData}/> : ''}\n      {reportSlug && reportSlug == 'audit-logs' ? <Audit reportData={reportData}/> : ''}\n      \n      <GenerateReportModal\n        close={() => setShowGenerateModal(false)}\n        show={showGenerateModal}\n        reportType={reportSlug}\n        type={type}\n      />\n    </>\n  );\n}\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/utils/fetchClient.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/index.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/utils/UtilsService.js",["772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/index.jsx",["874","875","876","877","878"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/media/index.jsx",["879","880","881","882","883","884","885","886"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/index.jsx",["887"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/PublishMediaModal.jsx",["888","889","890","891"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/DeleteConfirmation.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/WindowsModal.jsx",["892","893","894","895"],"import { Button, Modal, Row, Col, Badge, Dropdown } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\n\nimport chrisImg from \"../../img/chris-img.png\";\n\nconst WindowsModal = ({ showWindowsModal, setWindowsModal }) => {\n  return (\n    <Modal\n      className=\"fade bd-example-modal-lg mt-4 custom-modal windows-modal custom-modal-medium\"\n      show={showWindowsModal}\n      size=\"md\"\n    >\n      <Modal.Header>\n        <Modal.Title className=\"mr-auto\">\n        Christan’s Window’s\n        </Modal.Title>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setWindowsModal(false)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n      <Modal.Body>\n<div className=\"chris-imgbox\">\n<img className=\"chris-img img-fluid\" src={chrisImg} alt=\"chris-icon\" />\n\n</div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default WindowsModal;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/UpdateModal.jsx",["896","897"],"import { Button, Modal, Row, Col, Badge, Dropdown } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\n\nimport searchIcon from \"../../img/search-location.png\";\n\nconst UpdateModal = ({ showUpdateModal, setUpdateModal }) => {\n  return (\n    <Modal\n      className=\"fade bd-example-modal-lg mt-4 custom-modal windows-modal custom-modal-medium\"\n      show={showUpdateModal}\n      size=\"md\"\n    >\n      <Modal.Header>\n        <Modal.Title className=\"mr-auto\">\n        Update Screen\n        </Modal.Title>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setUpdateModal(false)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n      <Modal.Body>\n      <Row>\n          <Col lg={12} md={12} sm={12} xs={12}>\n            <div className=\"form-group\">\n              <label className=\"update-textfield-label\">Screen Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control input-default form-field\"\n                placeholder=\"Christan’s Windows\"\n              />\n            </div>\n          </Col>\n          <Col lg={12} md={12} sm={12} xs={12}>\n            <div className=\"form-group\">\n              <label className=\"update-textfield-label\">Complete Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control input-default form-field\"\n                placeholder=\"House No. 38-A Tribune colony, Ambala Cantt, Haryana\"\n              />\n            </div>\n          </Col>\n          <Col lg={12} md={12} sm={12} xs={12}>\n            <div className=\"form-group location-field\">\n              <label className=\"update-textfield-label\">Google Location</label>\n              <input\n                type=\"text\"\n                className=\"form-control input-default form-field\"\n                placeholder=\"Haryana\"\n              />\n              <div className=\"search-location\">\n              <img className=\"search-loc-icon\" src={searchIcon} alt=\"search-icon\" />\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Row className=\"w-100 m-0\">\n          <Col lg={12} md={12} sm={12} xs={12} className=\"pl-0 pr-0\">\n            <Button\n              variant=\"\"\n              type=\"button\"\n              className=\"btn btn-primary btn-block primary-btn w-100\"\n              onClick={() => setUpdateModal(false)}\n            >\n             Update Screen\n            </Button>\n          </Col>\n        </Row>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default UpdateModal;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/SelecteMedia.jsx",["898","899","900","901"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddScreenModal.jsx",["902"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddDeviceProfile.jsx",["903","904","905","906","907","908","909"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport {\n  BASE_URL,\n  addDeviceProfile,\n  updateDeviceProfile,\n} from \"../../utils/api\";\nimport { toast } from \"react-toastify\";\nimport AddMedia from \"../modals/AddMedia\";\nimport DragMove from \"./DragMove\";\nimport Switch from \"react-switch\";\nimport upload from \"../../img/uplaod.svg\";\n\nconst AddDeviceProfile = ({\n  open,\n  setShowProfileModel,\n  setIsRefresh,\n  profileData,\n  setProfileData,\n  type,\n}) => {\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [openMedia, setOpenMedia] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [selectedMedia, setSelectedMedia] = useState(null);\n  const [height, setHeight] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [healthIndicator, setHealthIndicator] = useState(false);\n  const [viewPort, setViewPort] = useState(\"portrait\");\n  useEffect(() => {\n    if (profileData) {\n      setSelectedMedia({\n        title: profileData.logo.title,\n        type: profileData.logo.type,\n      });\n      setWidth(profileData.logo.dimensions.width);\n      setHeight(profileData.logo.dimensions.height);\n      setViewPort(profileData.logo.orientation);\n      setTranslate({\n        x: profileData.logo.coordinates.x,\n        y: profileData.logo.coordinates.y,\n      });\n      setHealthIndicator(profileData.screenHealthIndicator);\n      setName(profileData.name);\n      console.log(\"profileData\", profileData);\n    }\n  }, [profileData]);\n\n  const [translate, setTranslate] = useState({\n    x: 0,\n    y: 0,\n  });\n  const handleChangeDate = (nextChecked) => {\n    console.log(nextChecked, \"yyyy\");\n    setHealthIndicator(nextChecked);\n  };\n  const handleDragMove = (e) => {\n    setTranslate({\n      x: translate.x + e.movementX,\n      y: translate.y + e.movementY,\n    });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let err = \"\";\n    if (name === \"\") {\n      err = \"Name is Required\";\n    }\n    if (err !== \"\") {\n      setError(err);\n      return false;\n    } else {\n      setError(\"\");\n    }\n\n    if (type && type == \"edit\") {\n      const payLoad = {\n        name,\n        screenHealthIndicator: healthIndicator,\n        orientation: viewPort,\n        width,\n        height,\n        x: translate.x,\n        y: translate.y,\n        title: selectedMedia ? selectedMedia.title : \"\",\n        type: selectedMedia ? selectedMedia.type : \"\",\n        profileId: profileData._id,\n      };\n      await updateDeviceProfile(payLoad)\n        .then((response) => {\n          //setError(null);\n          toast.success(\"Device Profile has been Updated successfully !!!\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\",\n          });\n          setIsRefresh(true);\n          setShowProfileModel(false);\n        })\n        .catch(function (error) {\n          setError(error.response.data.message);\n        });\n    } else {\n      const payLoad = {\n        name,\n        screenHealthIndicator: healthIndicator,\n        orientation: viewPort,\n        width,\n        height,\n        x: translate.x,\n        y: translate.y,\n        title: selectedMedia ? selectedMedia.title : \"\",\n        type: selectedMedia ? selectedMedia.type : \"\",\n      };\n      await addDeviceProfile(payLoad)\n        .then((response) => {\n          //setError(null);\n          toast.success(\"Device Profile has been added successfully !!!\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\",\n          });\n          setIsRefresh(true);\n          setShowProfileModel(false);\n        })\n        .catch(function (error) {\n          setError(error.response.data.message);\n        });\n    }\n  };\n  const videoMetaDuration = (media) => {\n    const properties = JSON.parse(media?.properties);\n    if (properties && properties.length) {\n      return (properties.length.toFixed(0) / 60).toFixed(0);\n    }\n    return null;\n  };\n\n  return (\n    <>\n      <AddMedia\n        setOpenMedia={setOpenMedia}\n        openMedia={openMedia}\n        selectedImage={selectedImage}\n        setSelectedImage={setSelectedImage}\n        setSelectedMedia={setSelectedMedia}\n        setHeight={setHeight}\n        setWidth={setWidth}\n      />\n      <Modal className=\"\" show={open} size=\"xl\">\n        <Modal.Header>\n          <Modal.Title>\n            {type && type == \"edit\" ? \"Update \" : \"Add \"} Profile\n          </Modal.Title>\n          <Button\n            variant=\"\"\n            className=\"close\"\n            onClick={() => setShowProfileModel(false)}\n          >\n            <img\n              className=\"cancel-icon\"\n              src={cancelIcon}\n              alt=\"cancel-icon\"\n              height=\"25px\"\n            />\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            {error && error !== \"\" && (\n              <h5 className=\"alert alert-danger\">{error}</h5>\n            )}\n            <Col lg={12} md={12} sm={12} xs={12}>\n              <label className=\"mt-3\">Enter Name</label>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  className=\"form-control input-default form-field\"\n                  placeholder=\"Enter Name\"\n                  onChange={(e) => {\n                    setName(e.target.value);\n                  }}\n                />\n              </div>\n              <div className=\"form-group pt-2\">\n                <Switch\n                  onColor=\"#B3005E\"\n                  onChange={handleChangeDate}\n                  checked={healthIndicator}\n                  className=\"react-switch\"\n                  required={true}\n                />\n              </div>\n              <div className=\"form-group d-flex pt-2\">\n                {/* <button\n                  onClick={(e) => {\n                    setOpenMedia(true);\n                  }}\n                  className=\"btn btn-primary  primary-btn btn\"\n                >\n                  Add Image\n                </button> */}\n                <div className=\"mr-4 add-device-profile-img\">\n                  {selectedMedia && (\n                    <span className=\"td-content d-flex name-td-content mb-3 \">\n                      <span\n                        className={`name-img mr-2  ${\n                          selectedMedia?.type === \"video\" && \"videotableName\"\n                        }`}\n                      >\n                        {selectedMedia?.type === \"image\" && (\n                          <div\n                            onClick={() => {\n                              //showPreview(selectedMedia.title, selectedMedia.type);\n                            }}\n                            className=\"media-list-img-zoom\"\n                          >\n                            <span className=\"media-list-img-zoom-plus\">+</span>\n                            <img\n                              className=\"media-img img-fluid\"\n                              src={`${BASE_URL}${selectedMedia?.title}`}\n                              alt=\"media-img\"\n                            />\n                          </div>\n                        )}\n                        {selectedMedia?.type === \"video\" && (\n                          <button\n                            onClick={() => {\n                              //showPreview(media.title, media.type);\n                            }}\n                          >\n                            {videoMetaDuration(selectedMedia)}\n                          </button>\n                        )}\n                      </span>\n                    </span>\n                  )}\n                </div>\n\n                <img\n                  onClick={(e) => {\n                    setOpenMedia(true);\n                  }}\n                  src={upload}\n                  alt=\"icon\"\n                  height=\"35px\"\n                  width=\"35px\"\n                  style={{ cursor: \"pointer\" }}\n                />\n              </div>\n              <div>\n                {selectedMedia && (\n                  <div>\n                    <div className=\"add-device-potrait \">\n                      <div\n                        onClick={(e) => {\n                          setViewPort(\"portrait\");\n                        }}\n                        className={`${viewPort == \"portrait\" ? \" active\" : \"\"}`}\n                      >\n                        Potrait\n                      </div>\n                      <div\n                        onClick={(e) => {\n                          setViewPort(\"landscape\");\n                        }}\n                        className={`${\n                          viewPort == \"landscape\" ? \" active\" : \"\"\n                        }`}\n                      >\n                        Landscape\n                      </div>\n                    </div>\n                    <div className=\"form-controle\">\n                      <label className=\"mt-3\">X</label>\n                      <div className=\"form-group\">\n                        <input\n                          type=\"text\"\n                          name=\"name\"\n                          value={translate.x}\n                          className=\"form-control input-default form-field\"\n                          placeholder=\"Enter Name\"\n                          onChange={(e) => {\n                            setTranslate({\n                              ...translate,\n                              [\"x\"]: e.target.value,\n                            });\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-controle\">\n                      <label className=\"mt-3\">Y</label>\n                      <div className=\"form-group\">\n                        <input\n                          type=\"text\"\n                          name=\"name\"\n                          value={translate.y}\n                          className=\"form-control input-default form-field\"\n                          placeholder=\"Enter Name\"\n                          onChange={(e) => {\n                            setTranslate({\n                              ...translate,\n                              [\"y\"]: e.target.value,\n                            });\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-controle\">\n                      <label className=\"mt-3\">Width</label>\n                      <div className=\"form-group\">\n                        <input\n                          type=\"text\"\n                          name=\"name\"\n                          value={width}\n                          className=\"form-control input-default form-field\"\n                          placeholder=\"Enter Name\"\n                          onChange={(e) => {\n                            setWidth(e.target.value);\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-controle\">\n                      <label className=\"mt-3\">Height</label>\n                      <div className=\"form-group\">\n                        <input\n                          type=\"text\"\n                          name=\"name\"\n                          value={height}\n                          className=\"form-control input-default form-field\"\n                          placeholder=\"Enter Name\"\n                          onChange={(e) => {\n                            setHeight(e.target.value);\n                          }}\n                        />\n                      </div>\n                    </div>\n                    <div>\n                      <header className=\"App-header\">\n                        <DragMove onDragMove={handleDragMove}>\n                          <div\n                            style={{\n                              transform: `translateX(${translate.x}px) translateY(${translate.y}px)`,\n                            }}\n                            className=\"w-100\"\n                          >\n                            <img\n                              style={{ width:`${width}px`, height:`${height}px`, maxWidth: \"100%\" }}\n                              src={`${BASE_URL}${selectedMedia?.title}`}\n                              className={`App-logo  ${width}`}\n                              alt=\"logo\"\n                            />\n                          </div>\n                        </DragMove>\n                      </header>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </Col>\n          </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          <Row className=\"w-100 m-0\">\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n              <Button\n                className=\"cancel-btn w-100\"\n                variant=\"outline-light\"\n                onClick={() => setShowProfileModel(false)}\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n              <Button\n                variant=\"\"\n                type=\"button\"\n                className=\"btn btn-primary btn-block primary-btn\"\n                onClick={(e) => handleSubmit(e)}\n              >\n                Save\n              </Button>\n            </Col>\n          </Row>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddDeviceProfile;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddGroup.jsx",["910","911","912","913","914","915","916","917"],"import React, {useState, useEffect} from \"react\";\nimport { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\nimport Select from \"react-select\";\nimport {addGroups, updateGroups} from \"../../utils/api\";\nimport { toast } from \"react-toastify\";\n\nconst AddGroup = ({ open, setShowGroupModel , setIsRefresh, group, type}) => {\n    console.log(\"group\",group)\n    const [name, setName] = useState(group ? group.name : \"\");\n    const [description, setDescription] = useState(group ? group.description : \"\");\n    const [error, setError] = useState('');\n    useEffect(() => {\n        if(group){   \n            setName(group.name);\n            setDescription(group.descripiton);\n        }\n    },[group])\n    const options = [\n        { value: \"MANAGER\", label: \"Manager\" },\n        { value: \"EDITOR\", label: \"Editor\" },\n      ];\n    const handleSubmit = async(e, type) => {\n        e.preventDefault();\n        let err = '';\n        if(name == ''){\n            err = 'Name is required';\n        }\n        else if(description == ''){\n            err = 'Description is required';\n        }\n        if(err){\n            setError(err);\n            return false;\n        }\n        console.log(\"error\",err)\n        \n        if(err == ''){\n            if(!type){\n                const postData = {\n                    name,description\n                }\n                await addGroups(postData)\n                  .then(response => {\n                    setError(null);\n                    setShowGroupModel(false);\n                    toast.success(\"Group has been added successfully !!!\", {\n                        position: \"top-right\",\n                        autoClose: 5000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                        theme: \"light\",\n                      });\n                      setIsRefresh(true)\n                  }).catch(function (error) {\n                    setError(error.response.data.message)\n                  });\n            }else{\n                console.log(\"Update\");\n                const postData = {\n                    name,groupId:group._id,description\n                }\n                await updateGroups(postData)\n                  .then(response => {\n                    console.log(response);\n                    setError(null);\n                    setShowGroupModel(false);\n                    toast.success(\"User has been updated successfully !!!\", {\n                        position: \"top-right\",\n                        autoClose: 5000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                        theme: \"light\",\n                      });\n                      setIsRefresh(true)\n                  }).catch(function (error) {\n                    setError(error.response.data.message)\n                  });\n            }\n            console.log(\"Submit\",name, description);\n            \n            \n        }\n        \n    }\n    return (\n        <Modal\n        className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium\"\n        show={open}\n        size=\"md\"\n        >\n        <Modal.Header>\n            <Modal.Title>{type && type=='edit' ?'Update ' : 'Add New '}Group</Modal.Title>\n            <Button\n                variant=\"\"\n                className=\"close\"\n                onClick={() => setShowGroupModel(false)}\n            >\n            <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n            </Button>\n        </Modal.Header>\n        <Modal.Body>\n            <Row>\n                {error && <h5 class=\"alert alert-danger text-center\">{error}</h5>}\n                <Col lg={12} md={12} sm={12} xs={12}>\n                    <label className=\"mt-3\">Enter Name</label>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={name}\n                            className=\"form-control input-default form-field\"\n                            placeholder=\"Enter Name\"\n                            onChange={(e) => {setName(e.target.value)}}\n                        />\n                    </div>\n                </Col>\n                <Col lg={12} md={12} sm={12} xs={12}>\n                    <div className=\"form-group\">\n                        <label className=\"mt-3\">Enter Description</label>\n                        <textarea\n                            name=\"description\"\n                            value={description}\n                            className=\"form-control input-default form-field\"\n                            placeholder=\"Enter Description\"\n                            onChange={(e) => {setDescription(e.target.value)}}>\n                        </textarea>\n                    </div>\n                </Col>\n            \n            </Row>\n        </Modal.Body>\n        <Modal.Footer>\n            <Row className=\"w-100 m-0\">\n                <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n                    <Button \n                        className=\"cancel-btn w-100\"\n                        variant=\"outline-light\"\n                        onClick={() => setShowGroupModel(false)}\n                    >\n                    Cancel\n                    </Button>\n                </Col>\n                <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n                    <Button\n                    variant=\"\"\n                    type=\"button\"\n                    className=\"btn btn-primary btn-block primary-btn\"\n                    onClick={(e) => handleSubmit(e, type)}\n                    >\n                    Add Group\n                    </Button>\n                </Col>\n            </Row>\n        </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default AddGroup;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/roles.jsx",["918","919","920","921","922","923","924","925","926"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  Dropdown,\n  Button,\n  Modal,\n  Row,\n  Col,\n  Badge,\n} from \"react-bootstrap\";\nimport { updateRoles } from \"../../../utils/api\";\nimport { toast } from \"react-toastify\";\nimport { Editor } from \"draft-js\";\n\nconst Roles = ({ roles, setIsRefresh, isRefresh }) => {\n  const [rolesData, setRolesData] = useState(roles.roles);\n  const [rolesType, setRolesType] = useState(\"OPERATOR\");\n  const [makeRefresh, setMakeRefresh] = useState(false);\n\n  useEffect(() => {\n    setMakeRefresh(false);\n    if (roles) {\n      setRolesData(roles.roles);\n    }\n  }, [makeRefresh, rolesData]);\n\n  const handleChange = async (e, set, section, type, val) => {\n    rolesData[set][section][type] = val;\n    await setRolesData(rolesData);\n    setMakeRefresh(true);\n  };\n\n  const handleRoles = async (e) => {\n    e.preventDefault();\n    console.log(rolesData);\n    await updateRoles(rolesData)\n      .then((response) => {\n        //setError(null);\n        toast.success(\"Roles has been updated successfully !\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\",\n        });\n        setIsRefresh(true);\n      })\n      .catch(function (error) {\n        //setError(error.response.data.message)\n      });\n  };\n\n  return (\n    <>\n      <div className=\"d-flex mb-4\">\n        <button\n          className=\"btn  btn-success btn btn-primary  primary-btn setting-page-btn \"\n          onClick={(e) => {\n            handleRoles(e);\n          }}\n        >\n          Update\n        </button>\n      </div>\n      <Row className=\"w-100\" style={{ marginTop: \"10px\" }}>\n        <Col lg={3} md={3} sm={3} xs={3} className=\"pl-0 pr-2 card\">\n          <div>\n            <button\n              className={`btn btn-sm w-100 text-left ${\n                rolesType === \"OPERATOR\" ? \"btn-success role-btn-bg\" : \"\"\n              }`}\n              onClick={(e) => {\n                setRolesType(\"OPERATOR\");\n              }}\n            >\n              Operator\n            </button>\n          </div>\n          <div>\n            <button\n              className={`btn btn-sm w-100 text-left ${\n                rolesType === \"MANAGER\" ? \"btn-success role-btn-bg\" : \"\"\n              }`}\n              onClick={(e) => {\n                setRolesType(\"MANAGER\");\n              }}\n            >\n              Manager\n            </button>\n          </div>\n          <div>\n            <button\n              className={`btn btn-sm w-100 text-left ${\n                rolesType === \"EDITOR\" ? \"btn-success role-btn-bg\" : \"\"\n              }`}\n              onClick={(e) => {\n                setRolesType(\"EDITOR\");\n              }}\n            >\n              Editor\n            </button>\n          </div>\n        </Col>\n        <Col lg={9} md={9} sm={9} xs={9} className=\"pl-2 pr-0\">\n          <Table responsive className=\"custom-table screen-table roles-table\">\n            <thead>\n              <tr>\n                <th>Permission</th>\n                <th>View</th>\n                <th>Add</th>\n                <th>edit</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n\n            {rolesType && rolesType == \"OPERATOR\" && (\n              <tbody>\n                <tr>\n                  <td>APPS</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-apps-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-apps-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"APPS\",\n                          \"view\",\n                          !rolesData.OPERATOR.APPS.view\n                        )\n                      }\n                      checked={rolesData.OPERATOR.APPS.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-apps-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-apps-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"APPS\",\n                          \"add\",\n                          !rolesData.OPERATOR.APPS.add\n                        )\n                      }\n                      checked={rolesData.OPERATOR.APPS.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-apps-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-apps-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"APPS\",\n                          \"edit\",\n                          !rolesData.OPERATOR.APPS.edit\n                        )\n                      }\n                      checked={rolesData.OPERATOR.APPS.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-apps-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-apps-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"APPS\",\n                          \"delete\",\n                          !rolesData.OPERATOR.APPS.delete\n                        )\n                      }\n                      checked={rolesData.OPERATOR.APPS.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>ASSETS</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-ASSETS-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-ASSETS-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"ASSETS\",\n                          \"view\",\n                          !rolesData.OPERATOR.ASSETS.view\n                        )\n                      }\n                      checked={rolesData.OPERATOR.ASSETS.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-ASSETS-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-ASSETS-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"ASSETS\",\n                          \"add\",\n                          !rolesData.OPERATOR.ASSETS.add\n                        )\n                      }\n                      checked={rolesData.OPERATOR.ASSETS.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-ASSETS-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-ASSETS-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"ASSETS\",\n                          \"edit\",\n                          !rolesData.OPERATOR.ASSETS.edit\n                        )\n                      }\n                      checked={rolesData.OPERATOR.ASSETS.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-ASSETS-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-ASSETS-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"ASSETS\",\n                          \"delete\",\n                          !rolesData.OPERATOR.ASSETS.delete\n                        )\n                      }\n                      checked={rolesData.OPERATOR.ASSETS.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>COMPOSITION</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-COMPOSITION-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-COMPOSITION-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"COMPOSITION\",\n                          \"view\",\n                          !rolesData.OPERATOR.COMPOSITION.view\n                        )\n                      }\n                      checked={rolesData.OPERATOR.COMPOSITION.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-COMPOSITION-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-COMPOSITION-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"COMPOSITION\",\n                          \"add\",\n                          !rolesData.OPERATOR.COMPOSITION.add\n                        )\n                      }\n                      checked={rolesData.OPERATOR.COMPOSITION.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-COMPOSITION-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-COMPOSITION-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"COMPOSITION\",\n                          \"edit\",\n                          !rolesData.OPERATOR.COMPOSITION.edit\n                        )\n                      }\n                      checked={rolesData.OPERATOR.COMPOSITION.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-COMPOSITION-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-COMPOSITION-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"COMPOSITION\",\n                          \"delete\",\n                          !rolesData.OPERATOR.COMPOSITION.delete\n                        )\n                      }\n                      checked={rolesData.OPERATOR.COMPOSITION.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>QUICKPLAY</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-QUICKPLAY-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-QUICKPLAY-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"QUICKPLAY\",\n                          \"view\",\n                          !rolesData.OPERATOR.QUICKPLAY.view\n                        )\n                      }\n                      checked={rolesData.OPERATOR.QUICKPLAY.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-QUICKPLAY-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-QUICKPLAY-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"QUICKPLAY\",\n                          \"add\",\n                          !rolesData.OPERATOR.QUICKPLAY.add\n                        )\n                      }\n                      checked={rolesData.OPERATOR.QUICKPLAY.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-QUICKPLAY-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-QUICKPLAY-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"QUICKPLAY\",\n                          \"edit\",\n                          !rolesData.OPERATOR.QUICKPLAY.edit\n                        )\n                      }\n                      checked={rolesData.OPERATOR.QUICKPLAY.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-QUICKPLAY-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-QUICKPLAY-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"QUICKPLAY\",\n                          \"delete\",\n                          !rolesData.OPERATOR.QUICKPLAY.delete\n                        )\n                      }\n                      checked={rolesData.OPERATOR.QUICKPLAY.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>REPORTS</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-REPORTS-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-REPORTS-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"REPORTS\",\n                          \"view\",\n                          !rolesData.OPERATOR.REPORTS.view\n                        )\n                      }\n                      checked={rolesData.OPERATOR.REPORTS.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-REPORTS-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-REPORTS-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"REPORTS\",\n                          \"add\",\n                          !rolesData.OPERATOR.REPORTS.add\n                        )\n                      }\n                      checked={rolesData.OPERATOR.REPORTS.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-REPORTS-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-REPORTS-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"REPORTS\",\n                          \"edit\",\n                          !rolesData.OPERATOR.REPORTS.edit\n                        )\n                      }\n                      checked={rolesData.OPERATOR.REPORTS.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-REPORTS-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-REPORTS-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"REPORTS\",\n                          \"delete\",\n                          !rolesData.OPERATOR.REPORTS.delete\n                        )\n                      }\n                      checked={rolesData.OPERATOR.REPORTS.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>SCHEDULE</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-SCHEDULE-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-SCHEDULE-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"SCHEDULE\",\n                          \"view\",\n                          !rolesData.OPERATOR.SCHEDULE.view\n                        )\n                      }\n                      checked={rolesData.OPERATOR.SCHEDULE.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-SCHEDULE-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-SCHEDULE-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"SCHEDULE\",\n                          \"add\",\n                          !rolesData.OPERATOR.SCHEDULE.add\n                        )\n                      }\n                      checked={rolesData.OPERATOR.SCHEDULE.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-SCHEDULE-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-SCHEDULE-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"SCHEDULE\",\n                          \"edit\",\n                          !rolesData.OPERATOR.SCHEDULE.edit\n                        )\n                      }\n                      checked={rolesData.OPERATOR.SCHEDULE.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-SCHEDULE-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-SCHEDULE-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"SCHEDULE\",\n                          \"delete\",\n                          !rolesData.OPERATOR.SCHEDULE.delete\n                        )\n                      }\n                      checked={rolesData.OPERATOR.SCHEDULE.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>SCREEN</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-SCREEN-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-SCREEN-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"SCREEN\",\n                          \"view\",\n                          !rolesData.OPERATOR.SCREEN.view\n                        )\n                      }\n                      checked={rolesData.OPERATOR.SCREEN.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-SCREEN-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-SCREEN-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"SCREEN\",\n                          \"add\",\n                          !rolesData.OPERATOR.SCREEN.add\n                        )\n                      }\n                      checked={rolesData.OPERATOR.SCREEN.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-SCREEN-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-SCREEN-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"SCREEN\",\n                          \"edit\",\n                          !rolesData.OPERATOR.SCREEN.edit\n                        )\n                      }\n                      checked={rolesData.OPERATOR.SCREEN.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-OPERATOR-SCREEN-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-OPERATOR-SCREEN-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"OPERATOR\",\n                          \"SCREEN\",\n                          \"delete\",\n                          !rolesData.OPERATOR.SCREEN.delete\n                        )\n                      }\n                      checked={rolesData.OPERATOR.SCREEN.delete}\n                    />\n                  </td>\n                </tr>\n              </tbody>\n            )}\n            {rolesType && rolesType == \"MANAGER\" && (\n              <tbody>\n                <tr>\n                  <td>APPS</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-apps-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-apps-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"APPS\",\n                          \"view\",\n                          !rolesData.MANAGER.APPS.view\n                        )\n                      }\n                      checked={rolesData.MANAGER.APPS.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-apps-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-apps-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"APPS\",\n                          \"add\",\n                          !rolesData.MANAGER.APPS.add\n                        )\n                      }\n                      checked={rolesData.MANAGER.APPS.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-apps-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-apps-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"APPS\",\n                          \"edit\",\n                          !rolesData.MANAGER.APPS.edit\n                        )\n                      }\n                      checked={rolesData.MANAGER.APPS.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-apps-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-apps-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"APPS\",\n                          \"delete\",\n                          !rolesData.MANAGER.APPS.delete\n                        )\n                      }\n                      checked={rolesData.MANAGER.APPS.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>ASSETS</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-ASSETS-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-ASSETS-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"ASSETS\",\n                          \"view\",\n                          !rolesData.MANAGER.ASSETS.view\n                        )\n                      }\n                      checked={rolesData.MANAGER.ASSETS.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-ASSETS-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-ASSETS-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"ASSETS\",\n                          \"add\",\n                          !rolesData.MANAGER.ASSETS.add\n                        )\n                      }\n                      checked={rolesData.MANAGER.ASSETS.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-ASSETS-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-ASSETS-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"ASSETS\",\n                          \"edit\",\n                          !rolesData.MANAGER.ASSETS.edit\n                        )\n                      }\n                      checked={rolesData.MANAGER.ASSETS.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-ASSETS-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-ASSETS-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"ASSETS\",\n                          \"delete\",\n                          !rolesData.MANAGER.ASSETS.delete\n                        )\n                      }\n                      checked={rolesData.MANAGER.ASSETS.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>COMPOSITION</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-COMPOSITION-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-COMPOSITION-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"COMPOSITION\",\n                          \"view\",\n                          !rolesData.MANAGER.COMPOSITION.view\n                        )\n                      }\n                      checked={rolesData.MANAGER.COMPOSITION.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-COMPOSITION-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-COMPOSITION-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"COMPOSITION\",\n                          \"add\",\n                          !rolesData.MANAGER.COMPOSITION.add\n                        )\n                      }\n                      checked={rolesData.MANAGER.COMPOSITION.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-COMPOSITION-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-COMPOSITION-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"COMPOSITION\",\n                          \"edit\",\n                          !rolesData.MANAGER.COMPOSITION.edit\n                        )\n                      }\n                      checked={rolesData.MANAGER.COMPOSITION.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-COMPOSITION-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-COMPOSITION-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"COMPOSITION\",\n                          \"delete\",\n                          !rolesData.MANAGER.COMPOSITION.delete\n                        )\n                      }\n                      checked={rolesData.MANAGER.COMPOSITION.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>QUICKPLAY</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-QUICKPLAY-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-QUICKPLAY-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"QUICKPLAY\",\n                          \"view\",\n                          !rolesData.MANAGER.QUICKPLAY.view\n                        )\n                      }\n                      checked={rolesData.MANAGER.QUICKPLAY.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-QUICKPLAY-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-QUICKPLAY-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"QUICKPLAY\",\n                          \"add\",\n                          !rolesData.MANAGER.QUICKPLAY.add\n                        )\n                      }\n                      checked={rolesData.MANAGER.QUICKPLAY.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-QUICKPLAY-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-QUICKPLAY-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"QUICKPLAY\",\n                          \"edit\",\n                          !rolesData.MANAGER.QUICKPLAY.edit\n                        )\n                      }\n                      checked={rolesData.MANAGER.QUICKPLAY.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-QUICKPLAY-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-QUICKPLAY-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"QUICKPLAY\",\n                          \"delete\",\n                          !rolesData.MANAGER.QUICKPLAY.delete\n                        )\n                      }\n                      checked={rolesData.MANAGER.QUICKPLAY.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>REPORTS</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-REPORTS-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-REPORTS-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"REPORTS\",\n                          \"view\",\n                          !rolesData.MANAGER.REPORTS.view\n                        )\n                      }\n                      checked={rolesData.MANAGER.REPORTS.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-REPORTS-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-REPORTS-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"REPORTS\",\n                          \"add\",\n                          !rolesData.MANAGER.REPORTS.add\n                        )\n                      }\n                      checked={rolesData.MANAGER.REPORTS.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-REPORTS-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-REPORTS-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"REPORTS\",\n                          \"edit\",\n                          !rolesData.MANAGER.REPORTS.edit\n                        )\n                      }\n                      checked={rolesData.MANAGER.REPORTS.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-REPORTS-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-REPORTS-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"REPORTS\",\n                          \"delete\",\n                          !rolesData.MANAGER.REPORTS.delete\n                        )\n                      }\n                      checked={rolesData.MANAGER.REPORTS.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>SCHEDULE</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-SCHEDULE-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-SCHEDULE-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"SCHEDULE\",\n                          \"view\",\n                          !rolesData.MANAGER.SCHEDULE.view\n                        )\n                      }\n                      checked={rolesData.MANAGER.SCHEDULE.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-SCHEDULE-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-SCHEDULE-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"SCHEDULE\",\n                          \"add\",\n                          !rolesData.MANAGER.SCHEDULE.add\n                        )\n                      }\n                      checked={rolesData.MANAGER.SCHEDULE.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-SCHEDULE-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-SCHEDULE-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"SCHEDULE\",\n                          \"edit\",\n                          !rolesData.MANAGER.SCHEDULE.edit\n                        )\n                      }\n                      checked={rolesData.MANAGER.SCHEDULE.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-SCHEDULE-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-SCHEDULE-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"SCHEDULE\",\n                          \"delete\",\n                          !rolesData.MANAGER.SCHEDULE.delete\n                        )\n                      }\n                      checked={rolesData.MANAGER.SCHEDULE.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>SCREEN</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-SCREEN-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-SCREEN-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"SCREEN\",\n                          \"view\",\n                          !rolesData.MANAGER.SCREEN.view\n                        )\n                      }\n                      checked={rolesData.MANAGER.SCREEN.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-SCREEN-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-SCREEN-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"SCREEN\",\n                          \"add\",\n                          !rolesData.MANAGER.SCREEN.add\n                        )\n                      }\n                      checked={rolesData.MANAGER.SCREEN.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-SCREEN-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-SCREEN-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"SCREEN\",\n                          \"edit\",\n                          !rolesData.MANAGER.SCREEN.edit\n                        )\n                      }\n                      checked={rolesData.MANAGER.SCREEN.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-MANAGER-SCREEN-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-MANAGER-SCREEN-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"MANAGER\",\n                          \"SCREEN\",\n                          \"delete\",\n                          !rolesData.MANAGER.SCREEN.delete\n                        )\n                      }\n                      checked={rolesData.MANAGER.SCREEN.delete}\n                    />\n                  </td>\n                </tr>\n              </tbody>\n            )}\n            {rolesType && rolesType == \"EDITOR\" && (\n              <tbody>\n                <tr>\n                  <td>APPS</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-apps-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-apps-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"APPS\",\n                          \"view\",\n                          !rolesData.EDITOR.APPS.view\n                        )\n                      }\n                      checked={rolesData.EDITOR.APPS.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-apps-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-apps-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"APPS\",\n                          \"add\",\n                          !rolesData.EDITOR.APPS.add\n                        )\n                      }\n                      checked={rolesData.EDITOR.APPS.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-apps-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-apps-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"APPS\",\n                          \"edit\",\n                          !rolesData.EDITOR.APPS.edit\n                        )\n                      }\n                      checked={rolesData.EDITOR.APPS.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-apps-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-apps-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"APPS\",\n                          \"delete\",\n                          !rolesData.EDITOR.APPS.delete\n                        )\n                      }\n                      checked={rolesData.EDITOR.APPS.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>ASSETS</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-ASSETS-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-ASSETS-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"ASSETS\",\n                          \"view\",\n                          !rolesData.EDITOR.ASSETS.view\n                        )\n                      }\n                      checked={rolesData.EDITOR.ASSETS.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-ASSETS-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-ASSETS-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"ASSETS\",\n                          \"add\",\n                          !rolesData.EDITOR.ASSETS.add\n                        )\n                      }\n                      checked={rolesData.EDITOR.ASSETS.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-ASSETS-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-ASSETS-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"ASSETS\",\n                          \"edit\",\n                          !rolesData.EDITOR.ASSETS.edit\n                        )\n                      }\n                      checked={rolesData.EDITOR.ASSETS.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-ASSETS-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-ASSETS-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"ASSETS\",\n                          \"delete\",\n                          !rolesData.EDITOR.ASSETS.delete\n                        )\n                      }\n                      checked={rolesData.EDITOR.ASSETS.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>COMPOSITION</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-COMPOSITION-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-COMPOSITION-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"COMPOSITION\",\n                          \"view\",\n                          !rolesData.EDITOR.COMPOSITION.view\n                        )\n                      }\n                      checked={rolesData.EDITOR.COMPOSITION.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-COMPOSITION-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-COMPOSITION-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"COMPOSITION\",\n                          \"add\",\n                          !rolesData.EDITOR.COMPOSITION.add\n                        )\n                      }\n                      checked={rolesData.EDITOR.COMPOSITION.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-COMPOSITION-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-COMPOSITION-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"COMPOSITION\",\n                          \"edit\",\n                          !rolesData.EDITOR.COMPOSITION.edit\n                        )\n                      }\n                      checked={rolesData.EDITOR.COMPOSITION.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-COMPOSITION-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-COMPOSITION-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"COMPOSITION\",\n                          \"delete\",\n                          !rolesData.EDITOR.COMPOSITION.delete\n                        )\n                      }\n                      checked={rolesData.EDITOR.COMPOSITION.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>QUICKPLAY</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-QUICKPLAY-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-QUICKPLAY-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"QUICKPLAY\",\n                          \"view\",\n                          !rolesData.EDITOR.QUICKPLAY.view\n                        )\n                      }\n                      checked={rolesData.EDITOR.QUICKPLAY.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-QUICKPLAY-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-QUICKPLAY-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"QUICKPLAY\",\n                          \"add\",\n                          !rolesData.EDITOR.QUICKPLAY.add\n                        )\n                      }\n                      checked={rolesData.EDITOR.QUICKPLAY.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-QUICKPLAY-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-QUICKPLAY-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"QUICKPLAY\",\n                          \"edit\",\n                          !rolesData.EDITOR.QUICKPLAY.edit\n                        )\n                      }\n                      checked={rolesData.EDITOR.QUICKPLAY.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-QUICKPLAY-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-QUICKPLAY-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"QUICKPLAY\",\n                          \"delete\",\n                          !rolesData.EDITOR.QUICKPLAY.delete\n                        )\n                      }\n                      checked={rolesData.EDITOR.QUICKPLAY.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>REPORTS</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-REPORTS-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-REPORTS-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"REPORTS\",\n                          \"view\",\n                          !rolesData.EDITOR.REPORTS.view\n                        )\n                      }\n                      checked={rolesData.EDITOR.REPORTS.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-REPORTS-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-REPORTS-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"REPORTS\",\n                          \"add\",\n                          !rolesData.EDITOR.REPORTS.add\n                        )\n                      }\n                      checked={rolesData.EDITOR.REPORTS.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-REPORTS-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-REPORTS-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"REPORTS\",\n                          \"edit\",\n                          !rolesData.EDITOR.REPORTS.edit\n                        )\n                      }\n                      checked={rolesData.EDITOR.REPORTS.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-REPORTS-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-REPORTS-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"REPORTS\",\n                          \"delete\",\n                          !rolesData.EDITOR.REPORTS.delete\n                        )\n                      }\n                      checked={rolesData.EDITOR.REPORTS.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>SCHEDULE</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-SCHEDULE-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-SCHEDULE-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"SCHEDULE\",\n                          \"view\",\n                          !rolesData.EDITOR.SCHEDULE.view\n                        )\n                      }\n                      checked={rolesData.EDITOR.SCHEDULE.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-SCHEDULE-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-SCHEDULE-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"SCHEDULE\",\n                          \"add\",\n                          !rolesData.EDITOR.SCHEDULE.add\n                        )\n                      }\n                      checked={rolesData.EDITOR.SCHEDULE.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-SCHEDULE-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-SCHEDULE-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"SCHEDULE\",\n                          \"edit\",\n                          !rolesData.EDITOR.SCHEDULE.edit\n                        )\n                      }\n                      checked={rolesData.EDITOR.SCHEDULE.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-SCHEDULE-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-SCHEDULE-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"SCHEDULE\",\n                          \"delete\",\n                          !rolesData.EDITOR.SCHEDULE.delete\n                        )\n                      }\n                      checked={rolesData.EDITOR.SCHEDULE.delete}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>SCREEN</td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-SCREEN-view`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-SCREEN-view`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"SCREEN\",\n                          \"view\",\n                          !rolesData.EDITOR.SCREEN.view\n                        )\n                      }\n                      checked={rolesData.EDITOR.SCREEN.view}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-SCREEN-add`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-SCREEN-add`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"SCREEN\",\n                          \"add\",\n                          !rolesData.EDITOR.SCREEN.add\n                        )\n                      }\n                      checked={rolesData.EDITOR.SCREEN.add}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-SCREEN-edit`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-SCREEN-edit`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"SCREEN\",\n                          \"edit\",\n                          !rolesData.EDITOR.SCREEN.edit\n                        )\n                      }\n                      checked={rolesData.EDITOR.SCREEN.edit}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      className={`day-checkbox`}\n                      name={`checkbox-EDITOR-SCREEN-delete`}\n                      type=\"checkbox\"\n                      id={`checkbox-EDITOR-SCREEN-delete`}\n                      onChange={(e) =>\n                        handleChange(\n                          e,\n                          \"EDITOR\",\n                          \"SCREEN\",\n                          \"delete\",\n                          !rolesData.EDITOR.SCREEN.delete\n                        )\n                      }\n                      checked={rolesData.EDITOR.SCREEN.delete}\n                    />\n                  </td>\n                </tr>\n              </tbody>\n            )}\n          </Table>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Roles;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/profile.jsx",["927","928","929","930","931","932","933"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/group.jsx",["934","935","936","937","938","939","940"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Dropdown } from \"react-bootstrap\";\nimport AddNewTagModal from \"../../modals/AddNewTagModal\";\nimport downArrow from \"../../../img/down-arrow.png\";\nimport menuIcon from \"../../../img/menu-icon.png\";\nimport veiwDetailIcon from \"../../../img/view-detail-icon.png\";\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\nimport assignIcon from \"../../../img/assign-icon.png\";\nimport takeScreenshotIcon from \"../../../img/tack-screenshot-icon.png\";\nimport { deleteGroups, updateGroups } from \"../../../utils/api\";\nimport { toast } from \"react-toastify\";\nimport AddUserModal from '../../modals/AddUserModal';\n\nconst Group = ({groups, setIsRefresh, isRefresh }) => {\n    const [showAddUserModel, setShowAddUserModel] = useState(false);\n    const [user, setUser] = useState(null);\n\n    const deleteuserRecord = async (e, id) => {\n        e.preventDefault();\n        await deleteGroups(id);\n        toast.success(\"Group has been deleted successfully !!!\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\",\n        });\n        setIsRefresh(!isRefresh);\n    }\n\n    return (\n        <>\n        <AddUserModal open={showAddUserModel} setShowAddUserModel={setShowAddUserModel} setIsRefresh={setIsRefresh} user={user} setUser={setUser} type={'edit'}/>\n        <Table responsive className=\"custom-table screen-table\">\n            <thead>\n            <tr>\n                <th>Name</th>\n                <th>Description</th>\n                <th></th>\n            </tr>\n            </thead>\n            <tbody>\n            {groups && groups.groups !== \"\" &&\n                groups.groups.map((item) => {\n                return (\n                    <tr id={item._id}>\n                    <td>\n                        <span className=\"td-content\">\n                        <strong>{item.name}</strong>\n                        </span>\n                    </td>\n                    <td>\n                        <span className=\"d-flex align-items-center\">\n                        <span className=\"td-content\">\n                            <strong>{item.description}</strong>\n                        </span>\n                        </span>\n                    </td>\n                    <td>{item.createdAt}</td>\n                    <td>\n                        <Dropdown className=\"dropdown-toggle-menu\">\n                        <Dropdown.Toggle variant=\"\" className=\"p-0  mb-2\">\n                            <span className=\"table-menu-icon\">\n                            <img\n                                className=\"menu-img img-fluid\"\n                                src={menuIcon}\n                                alt=\"menu-icon\"\n                            />\n                            </span>\n                        </Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            <Dropdown.Item \n                            onClick={(e)=>{deleteuserRecord(e, item._id)}}\n                            className=\"dropdown-list-item\">\n                            <div className=\"d-flex\">\n                                <div className=\"dropdown-list-icon\">\n                                <img\n                                    className=\"dropdown-list-img img-fluid\"\n                                    src={takeScreenshotIcon}\n                                    alt=\"menu-icon\"\n                                />\n                                </div>\n                                <div className=\"dropdown-menu-list\">\n                                <span className=\"menu-heading\">Delete Group</span>\n                                </div>\n                            </div>\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                        </Dropdown>\n                    </td>\n                    </tr>\n                );\n                })}\n            </tbody>\n        </Table>\n        </>\n    );\n};\n\nexport default Group;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddUserModal.jsx",["941","942","943","944","945","946","947"],"import React, {useState, useEffect} from \"react\";\nimport { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\nimport Select from \"react-select\";\nimport {addUsers, updateUsers} from \"../../utils/api\";\nimport { toast } from \"react-toastify\";\n\nconst AddUser = ({ open, setShowAddUserModel , setIsRefresh, user, type}) => {\n    console.log(\"user\",user)\n    const [name, setName] = useState(user ? user.name : \"\");\n    const [email, setEmail] = useState(user ? user.email : \"\");\n    const [password, setPassword] = useState(user ? user.password : \"\");\n    const [role, setRole] = useState(user ? {value:user.role.toUpperCase(),label:user.role} : \"\");\n    const [error, setError] = useState('');\n    useEffect(() => {\n        if(user){   \n            setName(user.name);\n            setEmail(user.email);\n            setPassword(user.password);\n            setRole({value:user.role.toUpperCase(),label:user.role});\n        }\n    },[user])\n    const options = [\n        { value: \"MANAGER\", label: \"Manager\" },\n        { value: \"EDITOR\", label: \"Editor\" },\n        { value: \"OPERATOR\", label: \"Operator\" },\n      ];\n    const handleSubmit = async(e, type) => {\n        e.preventDefault();\n        let err = '';\n        if(name == ''){\n            err = 'Name is required';\n        }\n        else if(password == '' && type == null){\n            err = 'password is required';\n        }\n        else if(email == ''){\n            err = 'Email is required';\n        }\n        else if(role == null){\n            err = 'Role is required';\n        } \n        if(err){\n            setError(err);\n            return false;\n        }\n        console.log(\"error\",err)\n        \n        if(err == ''){\n            if(!type){\n                const postData = {\n                    name, email, password, role:role.value\n                }\n                await addUsers(postData)\n                  .then(response => {\n                    console.log(response);\n                    setError(null);\n                    setShowAddUserModel(false);\n                    toast.success(\"User has been added successfully !!!\", {\n                        position: \"top-right\",\n                        autoClose: 5000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                        theme: \"light\",\n                      });\n                      setIsRefresh(true)\n                  }).catch(function (error) {\n                    setError(error.response.data.message)\n                  });\n            }else{\n                console.log(\"Update\");\n                const postData = {\n                    name,role:role.value,userId:user._id\n                }\n                await updateUsers(postData)\n                  .then(response => {\n                    console.log(response);\n                    setError(null);\n                    setShowAddUserModel(false);\n                    toast.success(\"User has been updated successfully !!!\", {\n                        position: \"top-right\",\n                        autoClose: 5000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                        theme: \"light\",\n                      });\n                      setIsRefresh(true)\n                  }).catch(function (error) {\n                    setError(error.response.data.message)\n                  });\n            }\n            console.log(\"Submit\",name, email, password,role);\n            \n            \n        }\n        \n    }\n  return (\n    <Modal\n      className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium\"\n      show={open}\n      size=\"md\"\n    >\n      <Modal.Header>\n        <Modal.Title>{type && type=='edit' ?'Update ' : 'Add New '}User</Modal.Title>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setShowAddUserModel(false)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n      <Modal.Body>\n        <Row>\n            {error && <h5 class=\"alert alert-danger text-center\">{error}</h5>}\n          <Col lg={12} md={12} sm={12} xs={12}>\n          <label className=\"mt-3\">Enter Name</label>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                className=\"form-control input-default form-field\"\n                placeholder=\"Enter Name\"\n                onChange={(e) => {setName(e.target.value)}}\n              />\n            </div>\n          </Col>\n\n          {!type && <><Col lg={12} md={12} sm={12} xs={12}>\n            <div className=\"form-group\">\n            <label className=\"mt-3\">Enter Email</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                className=\"form-control input-default form-field\"\n                placeholder=\"Enter Email\"\n                onChange={(e) => {setEmail(e.target.value)}}\n              />\n            </div>\n          </Col><Col lg={12} md={12} sm={12} xs={12}>\n            <div className=\"form-group\">\n            <label className=\"mt-3\">Enter Password</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                className=\"form-control input-default form-field\"\n                placeholder=\"Enter Password\"\n                onChange={(e) => {setPassword(e.target.value)}}\n                autoComplete={false}\n              />\n            </div>\n          </Col></>}\n          <Col lg={12} md={12} sm={12} xs={12}>\n            <div className=\"form-group\">\n            <label className=\"mt-3\">Select Role</label>\n              <Select\n              value={role}\n              onChange={setRole}\n              placeholder=\"Select Role\"\n              options={options}\n              className=\"app-option\"\n            />\n            </div>\n          </Col>\n          \n        </Row>\n      </Modal.Body>\n      <Modal.Footer>\n        <Row className=\"w-100 m-0\">\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n            <Button \n                className=\"cancel-btn w-100\"\n                variant=\"outline-light\"\n                onClick={() => setShowAddUserModel(false)}\n            >\n              Cancel\n            </Button>\n          </Col>\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n            <Button\n              variant=\"\"\n              type=\"button\"\n              className=\"btn btn-primary btn-block primary-btn\"\n              onClick={(e) => handleSubmit(e, type)}\n            >\n              {type && type === 'edit' ? 'Update User' : 'Add User'}\n            </Button>\n          </Col>\n        </Row>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default AddUser;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/TableLoader.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/User.jsx",["948","949","950","951","952","953","954"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Dropdown } from \"react-bootstrap\";\nimport AddNewTagModal from \"../../modals/AddNewTagModal\";\nimport downArrow from \"../../../img/down-arrow.png\";\nimport menuIcon from \"../../../img/menu-icon.png\";\nimport veiwDetailIcon from \"../../../img/view-detail-icon.png\";\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\nimport assignIcon from \"../../../img/assign-icon.png\";\nimport takeScreenshotIcon from \"../../../img/tack-screenshot-icon.png\";\nimport { deleteUsers, updateUsers } from \"../../../utils/api\";\nimport { toast } from \"react-toastify\";\nimport AddUserModal from '../../modals/AddUserModal';\n\nconst User = ({ users, setIsRefresh, isRefresh }) => {\n//   const [showNewTagModal, setNewTagModal] = useState(false);\n//   const [selectedScreen, setSelectedScreen] = useState(\"\");\n//   const [showPublishPopUp, setShowPublishPopUp] = useState(false);\nconst [showAddUserModel, setShowAddUserModel] = useState(false);\nconst [user, setUser] = useState(null);\n\nconst deleteuserRecord = async (e, id) => {\n  e.preventDefault();\n  await deleteUsers(id);\n  toast.success(\"User has been deleted successfully !!!\", {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: \"light\",\n  });\n  setIsRefresh(!isRefresh);\n}\n\nconst handleEditiUser = (e, item) => {\n  e.preventDefault();\n  setShowAddUserModel(true);\n  setUser(item)\n  console.log(\"Add User\")\n}\n\n  return (\n    <>\n    <AddUserModal open={showAddUserModel} setShowAddUserModel={setShowAddUserModel} setIsRefresh={setIsRefresh} user={user} setUser={setUser} type={'edit'}/>\n      <Table responsive className=\"custom-table screen-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Created Date</th>\n            <th>Role</th>\n            <th>status</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {users !== \"\" &&\n            users.map((item) => {\n              return (\n                <tr id={item._id}>\n                  <td>\n                    <span className=\"td-content\">\n                      <strong>{item.name}</strong>\n                    </span>\n                  </td>\n                  <td>\n                    <span className=\"d-flex align-items-center\">\n                      <span className=\"status status-green\"></span>\n                      <span className=\"td-content\">\n                        <strong>{item.email}</strong>\n                      </span>\n                    </span>\n                  </td>\n                  <td>{item.createdAt}</td>\n                  <td>{item.role}</td>\n                  <td>{item.isVerified == true ? 'Active' : \"Deactive\"}</td>\n                  <td>\n                    <Dropdown className=\"dropdown-toggle-menu\">\n                      <Dropdown.Toggle variant=\"\" className=\"p-0  mb-2\">\n                        <span className=\"table-menu-icon\">\n                          <img\n                            className=\"menu-img img-fluid\"\n                            src={menuIcon}\n                            alt=\"menu-icon\"\n                          />\n                        </span>\n                      </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                        {/* <Dropdown.Item \n                          // onClick={() => {\n                          //   setShowPublishPopUp(true);\n                          //   setSelectedScreen(screen._id)\n                          // }}\n                          className=\"dropdown-list-item\"\n                        >\n                          <div className=\"d-flex\">\n                            <div className=\"dropdown-list-icon\">\n                              <img\n                                className=\"dropdown-list-img img-fluid\"\n                                src={defaultComparisonIcon}\n                                alt=\"menu-icon\"\n                              />\n                            </div>\n                            <div className=\"dropdown-menu-list\">\n                              <span className=\"menu-heading\">Disable User</span>\n                            </div>\n                          </div>\n                        </Dropdown.Item> */}\n                        <Dropdown.Item \n                          onClick={(e) => {handleEditiUser(e, item)}}\n                           className=\"dropdown-list-item\">\n                          <div className=\"d-flex\">\n                            <div className=\"dropdown-list-icon\">\n                              <img\n                                className=\"dropdown-list-img img-fluid\"\n                                src={assignIcon}\n                                alt=\"menu-icon\"\n                              />\n                            </div>\n                            <div className=\"dropdown-menu-list\">\n                              <span className=\"menu-heading\">Edit User</span>\n                            </div>\n                          </div>\n                        </Dropdown.Item>\n                        {/* <Dropdown.Item href=\"#\" className=\"dropdown-list-item\">\n                          <div className=\"d-flex\">\n                            <div className=\"dropdown-list-icon\">\n                              <img\n                                className=\"dropdown-list-img img-fluid\"\n                                src={takeScreenshotIcon}\n                                alt=\"menu-icon\"\n                              />\n                            </div>\n                            <div className=\"dropdown-menu-list\">\n                              <span className=\"menu-heading\">Change Password</span>\n                            </div>\n                          </div>\n                        </Dropdown.Item> */}\n                        <Dropdown.Item \n                           onClick={(e)=>{deleteuserRecord(e, item._id)}}\n                           className=\"dropdown-list-item\">\n                          <div className=\"d-flex\">\n                            <div className=\"dropdown-list-icon\">\n                              <img\n                                className=\"dropdown-list-img img-fluid\"\n                                src={takeScreenshotIcon}\n                                alt=\"menu-icon\"\n                              />\n                            </div>\n                            <div className=\"dropdown-menu-list\">\n                              <span className=\"menu-heading\">Delete User</span>\n                            </div>\n                          </div>\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default User;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/settings/defaultComposition.jsx",["955"],"import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport VideoThumbnail from \"react-video-thumbnail\";\nimport emptyMediaImg from \"../../../images/card/1.png\";\nimport { BASE_URL, getAllComposition, vendorProfile } from \"../../../utils/api\";\nimport DefaultCompositionModal from \"../../modals/DefaultCompositionModal\";\n\nconst DefaultComposition = () => {\n  const defaultMediaUrl = `${BASE_URL}/default/file_1681896290177.png`;\n  const [defaultCompositionShow, setDefaultCompositionShow] = useState(false);\n  const [compositionList, setCompositionList] = useState();\n  const [showDefaultComposition, setShowDefaultComposition] = useState(\"\");\n  console.log(showDefaultComposition, \"lloooooo\");\n  async function getComPosition() {\n    await getAllComposition().then((res) => {\n      console.log(res, \"res push screen, DefaultComposition\");\n      setCompositionList(res);\n    });\n  }\n  async function getVendorProfile() {\n    await vendorProfile().then((res) => {\n      console.log(res, \"res push screen, vendorProfile\");\n      setShowDefaultComposition(res.data.data.defaultComposition);\n    });\n  }\n  const content = showDefaultComposition?.media?.zones[0].content[0];\n  useEffect(() => {\n    getComPosition();\n    getVendorProfile();\n  }, []);\n  return (\n    <>\n      <div className=\"row settings-default\">\n        <Col xl=\"6\">\n          <div className=\"default-composition-preview\">\n            <div className=\"thumbnail\">\n              {content?.type === \"image\" && (\n                <img\n                  className=\" imgContent\"\n                  src={`${BASE_URL}${content.url}`}\n                  alt=\"media-img\"\n                />\n              )}\n              {content?.type !== \"image\" && content?.type !== \"video\" && (\n                <img\n                  className=\"imgContent\"\n                  src={defaultMediaUrl}\n                  alt=\"Card cap\"\n                />\n              )}\n              {content?.type === \"video\" && (\n                <VideoThumbnail\n                  videoUrl={`${BASE_URL}/vendor/display/mediaFile?path=${content.url}`}\n                  thumbnailHandler={(thumbnail) =>\n                    console.log(thumbnail, \"pppppp\")\n                  }\n                  width={426}\n                  height={240}\n                />\n              )}\n            </div>\n          </div>\n        </Col>\n        <Col xl=\"6\">\n          <div className=\"mb-4\">\n            <h4 className=\"card-title card-intro-title\">\n              Organisation default composition\n            </h4>\n            <p>\n              The composition will be applied to all newly added displays in the\n              organization\n            </p>\n            <p className=\"font-weight-bold\">\n              Default Composition: {showDefaultComposition?.media?.name}\n              <span\n                className=\"btn-icon-right text-info\"\n                onClick={() => {\n                  setDefaultCompositionShow(true);\n                }}\n              >\n                <i className=\"fa fa-pencil\" />\n              </span>\n            </p>\n            {showDefaultComposition?.duration && (\n              <p className=\"font-weight-bold\">\n                Duration: {showDefaultComposition?.duration} seconds\n              </p>\n            )}\n          </div>\n        </Col>\n      </div>\n      <DefaultCompositionModal\n        close={() => setDefaultCompositionShow(false)}\n        show={defaultCompositionShow}\n        compositionList={compositionList}\n        getVendorProfile={() => getVendorProfile()}\n      />\n    </>\n  );\n};\n\nexport default DefaultComposition;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/UploadMediaFileModal.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/FilterModal.jsx",["956","957","958","959","960","961","962","963","964","965","966","967","968","969","970"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/QuickSearchToolbar.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/CustomNoRowsOverlay.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/tagInputField.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/DefaultCompositionModal.jsx",["971","972","973","974","975","976"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport icon from \"../../img/link-alt 1.svg\";\nimport { Table } from \"react-bootstrap\";\nimport downArrow from \"../../img/down-arrow.png\";\n\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { useState } from \"react\";\nimport { assignDefaultComposition, BASE_URL } from \"../../utils/api\";\nimport {\n  getDatetimeIn12Hours,\n  humanReadableFormattedDateString,\n} from \"../../utils/UtilsService\";\nimport AddNewTagModal from \"./AddNewTagModal\";\nconst DefaultCompositionModal = ({\n  close,\n  show,\n  compositionList,\n  getVendorProfile,\n}) => {\n  const [showNewTagModal, setNewTagModal] = useState(false);\n  const [selected, setSelected] = useState(\"\");\n  const [compositionId, setCompositionId] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n\n  const handleSubmit = async () => {\n    console.log(compositionId, duration, \"iiiiiii\");\n    await assignDefaultComposition({\n      compositionId: compositionId,\n\n      duration: duration,\n    }).then((res) => {\n      console.log(res, \"assignDefaultComposition\");\n      if (res.data.statusCode === 200) {\n        getVendorProfile();\n        close();\n      }\n    });\n\n    // setShowPublishPopUp(false);\n  };\n  return (\n    <>\n      <Modal\n        className=\"fade bd-example-modal-lg mt-4 app-modal\"\n        show={show}\n        size=\"xl\"\n      >\n        <Modal.Header className=\"border-0 d-flex justify-content-between align-items-center\">\n          <div>\n            <Button variant=\"\" className=\"\" onClick={() => close(false)}>\n              <img\n                className=\"cancel-icon\"\n                src={cancelIcon}\n                alt=\"cancel-icon\"\n                height=\"25px\"\n                width=\"25px\"\n              />\n            </Button>\n          </div>\n\n          <Button\n            variant=\"\"\n            type=\"button\"\n            className=\"btn btn-primary btn-block primary-btn\"\n            style={{ width: \"fit-content\" }}\n            //   onClick={() => setNewTagModal(false)}\n            disabled={compositionId.length === 0}\n            onClick={handleSubmit}\n          >\n            Assign\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <Table\n            responsive\n            className=\"custom-table screen-table\"\n            style={{ marginBottom: \"36px\" }}\n          >\n            <thead>\n              <tr>\n                <th>Composition</th>\n                <th>Date Added</th>\n                <th>Duration</th>\n                <th>Associated Schedule</th>\n                <th>Tags</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {compositionList &&\n                compositionList.map((composition) => {\n                  const content = composition.zones[0].content[0];\n                  return (\n                    <tr\n                      key={composition._id}\n                      id={composition._id}\n                      onClick={() => {\n                        setCompositionId(composition._id);\n                        setDuration(composition.duration);\n                      }}\n                      style={{\n                        cursor: \"pointer\",\n                        background:\n                          composition._id === compositionId ? \"#f5f5f5\" : \"\",\n                      }}\n                    >\n                      <td>\n                        <span className=\"td-content d-flex name-td-content\">\n                          <span\n                            className={`name-img mr-2  ${\n                              content.type === \"video\" && \"videotableName\"\n                            }`}\n                          >\n                            {content.type === \"image\" && (\n                              <img\n                                className=\"media-img img-fluid\"\n                                src={`${BASE_URL}${content.url}`}\n                                alt=\"media-img\"\n                              />\n                            )}\n                            {content.type === \"video\" &&\n                              content.duration.toFixed(0) / 60}\n                          </span>\n                          <span className=\"name-content d-flex flex-column flex-grow-1\">\n                            <strong>{composition.name}</strong>\n                            <span>{composition.createdBy}</span>\n                          </span>\n                        </span>\n                      </td>\n                      <td>\n                        <span className=\"td-content\">\n                          <strong>\n                            {humanReadableFormattedDateString(\n                              composition.createdAt\n                            )}\n                          </strong>\n                          <span>\n                            {getDatetimeIn12Hours(composition.createdAt)}\n                          </span>\n                        </span>\n                      </td>\n                      <td> {composition.duration} Sec</td>\n                      <td>No Schedule</td>\n                      <td style={{ width: \"180px\" }}>\n                        <span className=\"tag-container\">\n                          {composition.tags &&\n                            composition.tags.map((tag) => {\n                              return (\n                                <span className=\"my-phone-tag text-truncate ml-1 mr-1 mb-1\">\n                                  {tag}\n                                </span>\n                              );\n                            })}\n                        </span>\n\n                        <span\n                          className=\"down-arrow\"\n                          onClick={() => {\n                            setSelected(composition);\n                            setNewTagModal(true);\n                          }}\n                        >\n                          <img\n                            className=\"down-arrow-img img-fluid\"\n                            src={downArrow}\n                            alt=\"arrow\"\n                          />\n                        </span>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n        </Modal.Body>\n      </Modal>\n      {showNewTagModal && (\n        <AddNewTagModal\n          setNewTagModal={setNewTagModal}\n          allScreens={compositionList}\n          selected={selected}\n        />\n      )}\n    </>\n  );\n};\n\nexport default DefaultCompositionModal;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/media/fileUploadWithPreview.jsx",["977","978","979"],"import React, { useState } from \"react\";\nimport uploadImg from \"../../../img/cloud-computing-icon.png\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport deleteIcon from \"../../../img/delete-icon.png\";\nfunction FileUploadWithPreview({\n  setShowError,\n  setFile,\n  setFileMeta,\n  setPreviewList,\n  previewList,\n  isLoading,\n}) {\n  const [preview, setPreview] = useState(null);\n  const [fileList, setFileList] = useState([]);\n\n  const handleFileChange = (event) => {\n    const selectedFile = event.target.files[0];\n    console.log(event);\n    if (!selectedFile) {\n      //setFile(null);\n      //setPreview(null);\n      return;\n    }\n    setShowError(null);\n    setFileList((fileList) => [...fileList, selectedFile]);\n    setFile((file) => [...file, selectedFile]);\n\n    const reader = new FileReader();\n    reader.readAsDataURL(selectedFile);\n\n    reader.onload = function (e) {\n      const newP = {\n        file: e.target.result,\n        isLoading: false,\n      };\n      setPreviewList((previewList) => [...previewList, newP]);\n    };\n\n    console.log(\"selectedFile\", previewList);\n  };\n  function handleLoadedMetadata(event) {\n    console.log(\"event\", event);\n    const fMeta = {\n      height: event.target.height,\n      width: event.target.width,\n      length: event.target.duration,\n      fileLoading: false,\n    };\n    setFileMeta((fileMeta) => [...fileMeta, fMeta]);\n  }\n\n  const handleDelete = (e, item) => {\n    e.preventDefault();\n    const newPreview = previewList;\n    const newFileList = fileList;\n    delete newPreview[item];\n    delete newFileList[item];\n    setPreviewList(newPreview);\n    setFile(newFileList);\n  };\n\n  return (\n    <>\n      <div className=\" d-flex flex-column\">\n        {previewList &&\n          previewList.length > 0 &&\n          previewList.map((item, index) => {\n            return (\n              <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                {item?.file?.includes(\"image\") ? (\n                  <img\n                    onLoad={handleLoadedMetadata}\n                    src={item.file}\n                    style={{ width: \"50px\", height: \"50px\", objectFit: \"fill\" }}\n                    alt=\"File Preview\"\n                  />\n                ) : item?.file?.includes(\"video\") ? (\n                  <video\n                    onLoadedMetadata={handleLoadedMetadata}\n                    style={{ width: \"50px\", height: \"50px\", objectFit: \"fill\" }}\n                    src={item.file}\n                    controls\n                  />\n                ) : (\n                  \"\"\n                )}\n                <img\n                  onClick={(e) => handleDelete(e, index)}\n                  src={deleteIcon}\n                  style={{ width: \"30px\", height: \"30px\" }}\n                />\n              </div>\n            );\n          })}\n        <div className=\"text-center\">{isLoading && <CircularProgress />}</div>\n      </div>\n      {/* {previewList.length === 0 && ( */}\n      <div\n        className=\"upload-file-container relative d-flex align-items-center justify-content-center flex-column\"\n        style={{ position: \"relative\" }}\n      >\n        {previewList.length === 0 && (\n          <div className=\" d-flex align-items-center justify-content-center flex-column\">\n            <div className=\"upload-flie-img\">\n              <img className=\"upload-file\" src={uploadImg} alt=\"upload-img\" />\n            </div>\n            <h6>Click here to upload files</h6>\n          </div>\n        )}\n\n        {previewList.length > 0 && (\n          <button\n            className={`btn btn-primary btn-block primary-btn add-file-media`}\n          >\n            + Add More\n          </button>\n        )}\n\n        <input\n          type=\"file\"\n          accept=\"image/*,video/*\"\n          className=\"upload-file-textfield\"\n          onChange={handleFileChange}\n        />\n      </div>\n      {/* )} */}\n      {/* \n      {previewList.length > 0 && (\n        <div>\n          <button>+ Add More</button>\n\n          <input\n            type=\"file\"\n            accept=\"image/*,video/*\"\n            className=\"upload-file-textfield\"\n            onChange={handleFileChange}\n          />\n        </div>\n      )} */}\n    </>\n  );\n}\n\nexport default FileUploadWithPreview;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddNewTagModal.jsx",["980","981","982","983","984","985","986","987"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/SelectScreenModal.jsx",["988","989","990","991","992"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/DragMove.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AddMedia.jsx",["993"],"import { Button, Modal, Row, Col, Badge, Table } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport { useEffect, useState } from \"react\";\nimport {getAllMedia, BASE_URL } from \"../../utils/api\";\nimport TableLoader from \"../components/TableLoader\";\nimport downArrow from \"../../img/down-arrow.png\";\nimport '../components/Table.css';\nimport {\n  getDatetimeIn12Hours,\n  humanReadableFormattedDateString,\n} from \"../../utils/UtilsService\";\n// import tagCloseIcon from \"../../img/tag-close-icon.png\";\n\nconst PublishMediaModal = ({openMedia, setOpenMedia, selectedImage, setSelectedImage, setSelectedMedia, setHeight, setWidth}) => {\n  const [allMedia, setAllMedia] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [sMedia, setSMedia] = useState(null);\n  // use effect\n  useEffect(() => {\n    getAllMediaList();\n  }, []);\n\n  const getAllMediaList = async () => {\n    setLoading(true);\n    const list = await getAllMedia();\n    console.log(\"list\",list)\n    setLoading(false);\n    setAllMedia(list);\n  };\n\n  const handleCheckboxChange = (event, media) => {\n    setSelectedImage(event.target.name);\n    setSMedia(media);\n\n  };\n\n\n  const handleSubmit = async () => {\n    console.log(sMedia)\n    setSelectedMedia(sMedia)\n    const prp = JSON.parse(sMedia.properties)\n    setOpenMedia(false);\n    setHeight(prp.height);\n    setWidth(prp.width);\n  };\n\n    const parseMeta = (media) => {\n        const meta = JSON.parse(media.properties);\n        return (\n        <span className=\"td-content\">\n            {media?.type === \"image\" && (\n            <strong>\n                {meta.height} x {meta.width}\n            </strong>\n            )}\n            {media?.type === \"video\" && meta?.length && (\n            <strong>{parseInt((meta.length / 60) * 100) / 100} Min.</strong>\n            )}\n            {meta?.size && <span>{meta.size} MB</span>}\n        </span>\n        );\n    };\n\n    const videoMetaDuration = (media) => {\n    const properties = JSON.parse(media?.properties);\n    if (properties && properties.length) {\n        return (properties.length.toFixed(0) / 60).toFixed(0);\n    }\n    return null;\n    };\n\n  return (\n      <>\n      <Modal\n        className={`fade bd-example-modal-lg mt-4 custom-modal custom-modal-large`}\n        show={openMedia}\n        size=\"lg\"\n      >\n        <Modal.Header>\n          <Modal.Title>Add Media</Modal.Title>\n          <Button\n            variant=\"\"\n            className=\"close\"\n            onClick={() => setOpenMedia(false)}\n          >\n            <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n          </Button>\n        </Modal.Header>\n\n        <Modal.Body>\n            <Table responsive>\n              <thead>\n                <tr>\n                  <th className=\"width50\">\n                    <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\n                      <input\n                        type=\"checkbox\"\n                        className=\"custom-control-input\"\n                        id=\"checkbox1_exam_all\"\n                        disabled\n                        required=\"\"\n                      />\n                      <label\n                        className=\"custom-control-label\"\n                        htmlFor=\"checkbox1_exam_all\"\n                      ></label>\n                    </div>\n                  </th>\n                  <th>Name</th>\n                  <th>Type</th>\n                  <th>Uploaded Date</th>\n                  <th>Properties</th>\n                  <th>Tags</th>\n                </tr>\n              </thead>\n              {loading  ? (\n            <TableLoader colSpan={5}/>\n          ) : (\n              <tbody>\n                {allMedia  && allMedia.length > 0 && \n                  allMedia.map((media) => {\n                    return (media.type === 'image' ?\n                    <tr>\n                        <td>\n                          <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\n                            <input\n                              type=\"checkbox\"\n                              className=\"custom-control-input\"\n                              id={media._id}\n                              name={media._id}\n                              checked={selectedImage === media._id}\n                              onChange={(e) => {handleCheckboxChange(e, media)}}\n                            />\n                            <label\n                              className=\"custom-control-label\"\n                              htmlFor={media._id}\n                            ></label>\n                          </div>\n                        </td>\n                        <td>\n                         <span className=\"td-content d-flex name-td-content\">\n                            <span\n                                className={`name-img mr-2  ${\n                                media?.type === \"video\" && \"videotableName\"\n                                }`}\n                            >\n                                {media?.type === \"image\" && (\n                                <div\n                                    onClick={() => {\n                                        //showPreview(media.title, media.type);\n                                    }}\n                                    className=\"media-list-img-zoom\"\n                                >\n                                    <span className=\"media-list-img-zoom-plus\">+</span>\n                                    <img\n                                    className=\"media-img img-fluid\"\n                                    src={`${BASE_URL}${media?.title}`}\n                                    alt=\"media-img\"\n                                    />\n                                </div>\n                                )}\n                                {media?.type === \"video\" && (\n                                <button\n                                    onClick={() => {\n                                        //showPreview(media.title, media.type);\n                                    }}\n                                >\n                                    {videoMetaDuration(media)}\n                                </button>\n                                )}\n                            </span>\n                            <span className=\"name-content d-flex flex-column flex-grow-1\">\n                                <strong>\n                                {\n                                    media.title.split(\"/\")[\n                                    media.title.split(\"/\").length - 1\n                                    ]\n                                }\n                                </strong>\n                                <span>{media.createdBy.name}</span>\n                            </span>\n                        </span>\n                        </td>\n                        <td>\n                            {media.type.slice(0, 1).toUpperCase() + media.type.slice(1)}\n                        </td>\n                        <td>\n                            <span className=\"td-content\">\n                            <strong>\n                                {humanReadableFormattedDateString(media.createdAt)}\n                            </strong>\n                            <span>{getDatetimeIn12Hours(media.createdAt)}</span>\n                            </span>\n                        </td>\n                        <td>{parseMeta(media)}</td>\n                        <td>\n                            {media.tags.map((tag) => {\n                            return (\n                                <span className=\"my-phone-tag text-truncate ml-1\">\n                                {tag}\n                                </span>\n                            );\n                            })}\n                            <span\n                            className=\"down-arrow\"\n                            onClick={() => {\n                                //setSelectedMedia(media);\n                                //setNewTagModal(true);\n                            }}\n                            >\n                            <img\n                                className=\"down-arrow-img img-fluid\"\n                                src={downArrow}\n                                alt=\"arrow\"\n                            />\n                            </span>\n                        </td>\n                      </tr>\n                    : ''\n                      \n                    )\n                  })}\n              </tbody>\n              )}\n            </Table>\n          </Modal.Body>\n\n        <Modal.Footer>\n            <Row className=\"w-100 m-0\">\n              <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n                <Button className=\"cancel-btn w-100\"\n                    onClick={(e) => setOpenMedia(false)}\n                 variant=\"outline-light\">\n                  Cancel\n                </Button>\n              </Col>\n              <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n                <Button\n                  disabled={selectedImage === null}\n                  variant=\"\"\n                  type=\"button\"\n                  className=\"btn btn-primary btn-block primary-btn\"\n                  onClick={handleSubmit}\n                >\n                  Publish\n                </Button>\n              </Col>\n            </Row>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default PublishMediaModal;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/Clock.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/screen/listScreens.jsx",["994","995","996","997","998"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/media/listMedia.jsx",["999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/ChatBox.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/Header.js",["1012","1013","1014"],"import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n/// Scroll\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\n/// Image\nimport profile from \"../../../images/profile/pic1.jpg\";\nimport avatar from \"../../../images/avatar/1.jpg\";\nimport { Dropdown } from \"react-bootstrap\";\nimport LogoutPage from './Logout';\n\nconst Header = ({ onNote }) => {\n  const onFullScreen = () => {\n    var elem = document.documentElement;\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.webkitRequestFullscreen) {\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      elem.msRequestFullscreen();\n    }\n  };\n  return (\n    <div className=\"header header-custom\" style={{ zIndex: \"11\" }}>\n      <div className=\"header-content\">\n        <nav className=\"navbar navbar-expand\">\n          <div className=\"collapse navbar-collapse justify-content-between\">\n            <div className=\"header-left\">\n\n            </div>\n            <ul className=\"navbar-nav header-right\">\n\n              <Dropdown as=\"li\" className=\"nav-item dropdown header-profile\">\n                <Dropdown.Toggle\n                  variant=\"\"\n                  as=\"a\"\n                  className=\"i-false c-pointer nav-link\"\n                  to=\"\"\n                  role=\"button\"\n                  data-toggle=\"dropdown\"\n                >\n                  <div className=\"header-info\">\n                    <span>\n                      Hello, <strong>Samuel</strong>\n                    </span>\n                  </div>\n                  <img src={profile} width={20} alt=\"\" />\n                </Dropdown.Toggle>\n                <Dropdown.Menu\n                  align=\"right\"\n                  className=\"dropdown-menu dropdown-menu-right\"\n                >\n                  <Link to=\"/app-profile\" className=\"dropdown-item ai-icon\">\n                    <svg\n                      id=\"icon-user1\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"text-primary\"\n                      width={18}\n                      height={18}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\n                      <circle cx={12} cy={7} r={4} />\n                    </svg>\n                    <span className=\"ml-2\">Profile </span>\n                  </Link>\n                  <Link to=\"/email-inbox\" className=\"dropdown-item ai-icon\">\n                    <svg\n                      id=\"icon-inbox\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"text-success\"\n                      width={18}\n                      height={18}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\" />\n                      <polyline points=\"22,6 12,13 2,6\" />\n                    </svg>\n                    <span className=\"ml-2\">Inbox </span>\n                  </Link>\n                  <LogoutPage />\n                </Dropdown.Menu>\n              </Dropdown>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/NavHader.js",["1015"],"import React, { useState } from \"react\";\n\n/// React router dom\nimport { Link } from \"react-router-dom\";\n\n/// images\nimport logo from \"../../../img/logo.png\";\nimport logo1 from \"../../../img/Logo11.svg\";\n\nconst NavHader = () => {\n  const [toggle, setToggle] = useState(false);\n  return (\n    <div className=\"nav-header navbar-header-custom\" style={{ zIndex: \"12\" }}>\n      <Link to=\"/\" className=\"brand-logo\">\n        <img className=\"sidebar-logo\" src={logo1} alt=\"\" />\n      </Link>\n\n      <div\n        className=\"nav-control nav-hamburger-menu\"\n        onClick={() => setToggle(!toggle)}\n      >\n        <div className={`hamburger ${toggle ? \"is-active\" : \"\"}`}>\n          <span className=\"line\"></span>\n          <span className=\"line\"></span>\n          <span className=\"line\"></span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NavHader;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/SideBar.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/CompolistionListModel.jsx",["1016","1017","1018","1019","1020","1021"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/Logout.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/Chat.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/MsgBox.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/Notes.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/chatBox/Alerts.js",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/reports/Audit.jsx",["1022","1023","1024","1025"],"import React, { useState } from \"react\";\nimport { Button, Table, Dropdown } from \"react-bootstrap\";\nimport {\n    humanReadableFormattedDateString,\n  } from \"../../../utils/UtilsService\";\n  import Datatable from \"react-data-table-component\";\n\nexport default function Audit({reportData, cPage, pCount}) {\n    const columns = [\n        {\n            name : \"Title\",\n            selector : (row) => row?.title,\n            sortable: true,\n        },\n        {\n            name : \"Vendor\",\n            selector : (row) => row?.vendor?.name,\n            sortable: true,\n        },\n        {\n            name : \"Created At\",\n            selector : (row) => humanReadableFormattedDateString(row.createdAt),\n            sortable: true,\n        },\n    ];\n\n  return (\n    <>\n      {/* <Table\n        responsive\n        className=\"custom-table screen-table\"\n        style={{ height: \"100%\" }}\n        id=\"external-events\"\n      >\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Vendor</th>\n            <th>CreatedAt</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {reportData.length > 0 &&\n            reportData.map((data) => {\n\n              return (\n                <tr key={data?._id}>\n                  <td>{data?.title}</td>\n                  <td>{data.vendor.name} </td>\n                  <td>{humanReadableFormattedDateString(data.createdAt)} </td>\n                </tr>\n              );\n            })}\n        </tbody>\n        {reportData?.length === 0 && <h3 className=\"mt-5\">No Report Found</h3>}\n      </Table> */}\n      <Datatable columns={columns} data={reportData} pagination sorting />\n    </>\n  );\n}\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/reports/Media.jsx",["1026","1027","1028","1029","1030"],"import React, { useState } from \"react\";\nimport { Button, Table, Dropdown } from \"react-bootstrap\";\nimport {\n    humanReadableFormattedDateString,\n  } from \"../../../utils/UtilsService\";\nimport Datatable from \"react-data-table-component\";\nexport default function Media({reportData}) {\n\n    const columns = [\n        {\n            name : \"Media\",\n            selector : (row) => row?.mediaObject?._id\n        },\n        {\n            name : \"Loop Count\",\n            selector : (row) => row.loop\n        },\n        {\n            name : \"Duration\",\n            selector : (row) => row.duration\n        },\n    ];\n\n\n  return (\n    <>\n      {/* <Table\n        responsive\n        className=\"custom-table screen-table\"\n        style={{ height: \"100%\" }}\n        id=\"external-events\"\n      >\n        <thead>\n          <tr>\n            <th>Media</th>\n            <th>Loop Count</th>\n            <th>Duration</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {reportData.length > 0 &&\n            reportData.map((data) => {\n              return (\n                <tr key={data?._id}>\n                  <td>{data?.media}</td>\n                  <td>{data.loop} </td>\n                  <td>{data.duration} </td>\n                </tr>\n              );\n            })}\n        </tbody>\n        {reportData?.length === 0 && <h3 className=\"mt-5\">No Report Found</h3>}\n      </Table> */}\n      <Datatable columns={columns} data={reportData} pagination />\n    </>\n  );\n}\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/generateReportModal.jsx",["1031","1032","1033","1034","1035","1036","1037","1038","1039","1040"],"import { Button, Modal } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\n\nimport Select from \"react-select\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst GenerateReportModal = ({\n  close,\n  show,\n  reportType,\n  type,\n  setFilter,\n  filter,\n}) => {\n  const history = useHistory();\n  const monthOptions = [\n    { value: \"01\", label: \"January\" },\n    { value: \"02\", label: \"February\" },\n    { value: \"03\", label: \"March\" },\n    { value: \"04\", label: \"April\" },\n    { value: \"05\", label: \"May\" },\n    { value: \"06\", label: \"June\" },\n    { value: \"07\", label: \"July\" },\n    { value: \"08\", label: \"August\" },\n    { value: \"09\", label: \"September\" },\n    { value: \"10\", label: \"October\" },\n    { value: \"11\", label: \"November\" },\n    { value: \"12\", label: \"December\" },\n  ];\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [selectedYear, setSelectedYear] = useState(null);\n  const [filterType, setFilterType] = useState(\"daily\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n\n  const yearOptions = [];\n  const currentYear = new Date().getFullYear();\n\n  for (let i = currentYear - 5; i <= currentYear; i++) {\n    yearOptions.push({ value: String(i), label: String(i) });\n  }\n\n  // Output the year options\n\n  const colourStyles = {\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n      // const color = chroma(data.color);\n      return {\n        ...styles,\n        backgroundColor: isFocused ? \"#ed9bc7\" : null,\n        color: \"#333333\",\n      };\n    },\n  };\n\n  useEffect(() => {\n    getCurrentDate();\n  }, []);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let sDate = startDate;\n    let eDate = endDate;\n    if (filterType == \"monthly\") {\n      sDate = `${selectedYear.value}-${selectedMonth.value}-01`;\n      eDate = `${selectedYear.value}-${selectedMonth.value}-31`;\n    }\n    setFilter({\n      startDate: sDate,\n      endDate: eDate,\n      filterType,\n      selectedMonth,\n      selectedYear,\n    });\n    close();\n  };\n\n  const getCurrentDate = () => {\n    let cDate = moment();\n    setSelectedMonth({\n      value: cDate.format(\"MM\"),\n      label: cDate.format(\"MMMM\"),\n    });\n    setSelectedYear({\n      value: cDate.format(\"YYYY\"),\n      label: cDate.format(\"YYYY\"),\n    });\n    setStartDate(cDate.format(\"YYYY-MM-DD\"));\n    setEndDate(cDate.format(\"YYYY-MM-DD\"));\n  };\n\n  return (\n    <>\n      <Modal\n        className=\"fade bd-example-modal-lg mt-4 app-modal\"\n        show={show}\n        size=\"md\"\n      >\n        <Modal.Header className=\"border-0 d-flex justify-content-between align-items-center\">\n          <div>\n            <Modal.Title className=\"mr-auto\">Report</Modal.Title>\n\n            <p>How would you like to generate your report?</p>\n          </div>\n\n          <Button variant=\"\" className=\"close\" onClick={() => close(false)}>\n            <img\n              className=\"cancel-icon\"\n              src={cancelIcon}\n              alt=\"cancel-icon\"\n              height=\"25px\"\n              width=\"25px\"\n            />\n          </Button>\n        </Modal.Header>\n        <Modal.Body style={{ paddingBottom: \"15px\" }}>\n          <form onSubmit={handleSubmit} className=\"row\">\n            <div className=\"form-group col-12 mb-0  url-app-form border-0\">\n              <div>\n                <div className=\"d-flex align-items-center mb-2\">\n                  <input\n                    type=\"radio\"\n                    //className=\"form-control \"\n                    checked={filterType == \"daily\"}\n                    onChange={(e) => setFilterType(\"daily\")}\n                  />\n                  <label className=\"mb-0 ml-3\">Daily</label>\n                </div>\n\n                <input\n                  type=\"date\"\n                  className=\"  form-control \"\n                  defaultValue={startDate}\n                  placeholder=\"App Name\"\n                  onChange={(e) => setStartDate(e.target.value)}\n                  required={filterType == \"daily\"}\n                  readOnly={filterType !== \"daily\"}\n                />\n              </div>\n\n              <div>\n                <>\n                  <div className=\"d-flex align-items-center mb-2 mt-3\">\n                    <input\n                      type=\"radio\"\n                      //className=\"form-control \"\n                      checked={filterType == \"monthly\"}\n                      onChange={(e) => setFilterType(\"monthly\")}\n                    />\n                    <label className=\"mb-0 ml-3\">Monthly</label>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-6\">\n                      <Select\n                        value={selectedMonth}\n                        onChange={setSelectedMonth}\n                        options={monthOptions}\n                        styles={colourStyles}\n                        placeholder=\"month\"\n                        className=\"app-option\"\n                        isDisabled={filterType !== \"monthly\"}\n                        required={filterType == \"monthly\"}\n                      />\n                    </div>\n                    <div className=\"col-6\">\n                      <Select\n                        value={selectedYear}\n                        onChange={setSelectedYear}\n                        options={yearOptions}\n                        styles={colourStyles}\n                        placeholder=\"year\"\n                        className=\"app-option\"\n                        isDisabled={filterType !== \"monthly\"}\n                        required={filterType == \"monthly\"}\n                      />\n                    </div>\n                  </div>\n                </>\n              </div>\n              <div>\n                <div className=\"d-flex align-items-center mb-2 mt-3\">\n                  <input\n                    type=\"radio\"\n                    //className=\"form-control \"\n                    checked={filterType == \"custom\"}\n                    onChange={(e) => setFilterType(\"custom\")}\n                  />\n                  <label className=\"mb-0 ml-3\">Custom</label>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-6\">\n                    <input\n                      type=\"date\"\n                      className=\"  form-control \"\n                      onChange={(e) => setStartDate(e.target.value)}\n                      readOnly={filterType !== \"custom\"}\n                      defaultValue={startDate}\n                      required={filterType == \"custom\"}\n                    />\n                  </div>\n                  <div className=\"col-6\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control \"\n                      onChange={(e) => setEndDate(e.target.value)}\n                      readOnly={filterType !== \"custom\"}\n                      required={filterType == \"custom\"}\n                      defaultValue={endDate}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"w-100 mt-3\">\n              <Button\n                variant=\"\"\n                type=\"submit\"\n                className=\"btn btn-primary btn-block primary-btn\"\n                //   onClick={() => setNewTagModal(false)}\n              >\n                Continue\n              </Button>\n            </div>\n          </form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default GenerateReportModal;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/reports/Uptime.jsx",["1041","1042"],"import React, { useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport Datatable from \"react-data-table-component\";\n\nexport default function Uptime({reportData}) {\n\n    const getUptimeData = (data) => {\n        const sumOfTime = data?.uptimeReport?.reduce(\n            (total, obj) => total + obj?.time,\n            0\n          );\n\n          // Convert the sum to hours\n          const sumInHours = sumOfTime;\n          const hours = Math.floor(sumOfTime / 60);\n          const minutes = sumOfTime % 60;\n\n          const formattedSum = `${hours} hr ${\n            minutes < 10 ? \"0\" : \"\"\n          }${Math.floor(minutes)} min`;\n\n          const average = sumInHours / data?.uptimeReport?.length;\n          const aveHours = Math.floor(average / 60);\n          const aveMinutes = average % 60;\n\n          const aveFormattedSum = `${aveHours} hr ${\n            aveMinutes < 10 ? \"0\" : \"\"\n          }${Math.floor(aveMinutes)} min`;\n\n          return [formattedSum, aveFormattedSum];\n    }\n\n    const columns = [\n        {\n            name : \"Screen\",\n            selector : (row) => row?.name\n        },\n        {\n            name : \"Total Uptime\",\n            selector : (row) => getUptimeData(row)[0]\n        },\n        {\n            name : \"Total Avg Time\",\n            selector : (row) => getUptimeData(row)[1]\n        },\n    ];\n\n\n  return (\n    <>\n      {/* <Table\n        responsive\n        className=\"custom-table screen-table\"\n        style={{ height: \"100%\" }}\n        id=\"external-events\"\n      >\n        <thead>\n          <tr>\n            <th>Screen</th>\n            <th>Total Uptime</th>\n            <th>Daily Average Uptime</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {reportData.length > 0 &&\n            reportData.map((data) => {\n              \n              return (\n                <tr key={data?._id}>\n                  <td>{data?.name}</td>\n                  <td>{formattedSum} </td>\n                  <td>{aveFormattedSum} </td>\n                </tr>\n              );\n            })}\n        </tbody>\n        {reportData?.length === 0 && <h3 className=\"mt-5\">No Report Found</h3>}\n      </Table> */}\n      <Datatable columns={columns} data={reportData} pagination />\n    </>\n  );\n}\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/Common.jsx",["1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053"],"import React, { useState } from \"react\";\nimport useSWR from \"swr\";\nimport { Button, Row, Col } from \"react-bootstrap\";\nimport searchIcon from \"../../../../img/search.png\";\nimport listIcon from \"../../../../img/list-icon.png\";\nimport CompositionTable from \"./CompositionTable\";\nimport ZoneInfoTable from \"./ZoneInfoTable\";\n\nimport {\n  getAllMedia,\n  postComposition,\n  putComposition,\n  uploadBlob,\n} from \"../../../../utils/api\";\n\nimport PreviewComposition from \"../../../modals/previewComposition\";\nimport { useHistory } from \"react-router-dom\";\nimport SaveCompositionName from \"../../../modals/saveCompositionName\";\nimport UploadMediaModal from \"../../../modals/UploadMediaFileModal\";\nimport { isBlobUrl } from \"../../../../utils/UtilsService\";\nconst CommonComposition = ({ type, composition, layout }) => {\n  const [showUploadMediaModal, setUploadMediaModal] = useState(false);\n  const [showPreview, setShowPreview] = useState(false);\n  const [name, setName] = useState(composition ? composition.name : \"\");\n  const [namePopUp, setOpenNamePopUp] = useState(false);\n  const [zone, setZone] = useState(\"Zone1\");\n\n  // const [content, setContent] = useState(\n  //   composition ? composition.zones[0].content : []\n  // );\n  const makeArray = (data) => {\n    const newArray = [];\n    data.forEach((item) => {\n      if (item.content.length > 0) {\n        item.content.forEach((item2) => {\n          newArray.push({ ...item2, [\"zone\"]: item.name });\n        });\n      }\n    });\n    return newArray;\n  };\n  const makeArray2 = (data, size) => {\n    const result = data.reduce(function (r, a) {\n      r[a.zone] = r[a.zone] || [];\n      r[a.zone].push(a);\n      return r;\n    }, Object.create(null));\n\n    return result;\n  };\n  const makeArrayReference = (referenceUrl) => {\n    const result = [];\n    const Zone1 = [];\n    const Zone2 = [];\n    const Zone3 = [];\n\n    referenceUrl.forEach((i) => {\n      const item = i.split(\"**\");\n\n      if (item[1] == \"Zone1\") {\n        Zone1.push(item[0]);\n        result[\"Zone1\"] = Zone1;\n      }\n      if (item[1] == \"Zone2\") {\n        Zone2.push(item[0]);\n        result[\"Zone2\"] = Zone2;\n      }\n      if (item[1] == \"Zone3\") {\n        Zone3.push(item[0]);\n        result[\"Zone3\"] = Zone3;\n      }\n    });\n\n    return result;\n  };\n  const [content, setContent] = useState(\n    composition ? makeArray(composition.zones) : []\n  );\n  const [referenceUrl, setReferenceUrl] = useState(\n    composition ? composition.referenceUrl : []\n  );\n  console.log(referenceUrl, \"referenceUrl\");\n  const handleLayout = (data) => {\n    setZone(data);\n  };\n\n  const { data: allMedia, mutate } = useSWR(\n    \"/vendor/display/media\",\n    getAllMedia\n  );\n\n  const history = useHistory();\n  const addComposition = (media) => {\n    let url = media.title;\n    setContent((prev) => {\n      let meta = {};\n\n      if (media.type == \"image\" || media.type == \"video\") {\n        meta = JSON.parse(media.properties);\n      } else {\n        const jsonData = JSON.parse(media.appData);\n        url = jsonData.url;\n        meta = {\n          length: 10,\n          height: 10,\n          duration: 0,\n        };\n      }\n\n      const dt = prev.find((o) => o.name === zone);\n      const createContent = {\n        url,\n        type: media.type,\n        maintainAspectRatio: false,\n        fitToScreen: true,\n        crop: false,\n        duration: meta.length ? meta.length : 10,\n        createdBy: media.createdBy.name,\n        zone,\n        data:media.type !='video' && media.type != 'image' ? media.appData : \"\",\n      };\n      const newdata = [...prev, { ...createContent }];\n      return newdata;\n    });\n    setReferenceUrl((prev) => {\n      return [...prev, url + \"**\" + zone];\n    });\n  };\n  const saveComposition = async () => {\n    console.log(\"referenceUrl\", referenceUrl);\n    const updateFiles = referenceUrl.map(async (url) => {\n      if (isBlobUrl(url)) {\n        const urlItem = url.split(\"**\");\n        const uri = await uploadBlob(urlItem[0]);\n        return uri + \"**\" + urlItem[1];\n      }\n      return url;\n    });\n    const results = await Promise.all(updateFiles);\n\n    let zones = [];\n    let zoneNew = makeArray2(content, layout.zones.length);\n    layout.zones.forEach((zone, index) => {\n      const contentData = zoneNew[zone.name].map(({ zone, ...rest }) => {\n        return rest;\n      });\n      zones.push({\n        name: zone.name,\n        zoneId: zone._id,\n        //content: removeCreatedBy(index),\n        content: removeCreatedBy(contentData),\n      });\n    });\n    const data = {\n      name: name,\n      zones: zones,\n      duration: TotalDuration(),\n      referenceUrl: results,\n    };\n    if (type === \"create\") {\n      data.layoutId = layout._id;\n      console.log(data)\n      await postComposition(data);\n    } else {\n      data.compositionId = composition._id;\n      await putComposition(data);\n    }\n    history.push(\"/layout\");\n  };\n  const TotalDuration = () => {\n    let total = 0;\n    content.forEach((composition) => {\n      total += Number(composition.duration);\n    });\n    return total.toFixed(0);\n  };\n  function removeCreatedBy(data) {\n    return data.map((item) => {\n      delete item[\"createdBy\"];\n      delete item[\"_id\"];\n      delete item[\"zone\"];\n      // if(item['type'] == 'url-apps' || item['type'] == 'youtube-apps'){\n      //   item['type'] = 'app';\n      // }\n      return item;\n    });\n  }\n\n  return (\n    <>\n      <div className=\"custom-content-heading d-flex flex-wrap\">\n        <h1 className=\"mr-auto\">\n          {type === \"edit\" ? \"Edit Compostition\" : \"Create Compostition\"}\n        </h1>\n        <div className=\"preview-composition d-flex flex-wrap\">\n          <Button\n            onClick={() => {\n              if (content.length) {\n                setShowPreview(true);\n              }\n            }}\n            className=\"mr-2 preview-btn\"\n            variant=\"info\"\n            disabled={!content.length}\n          >\n            Preview\n          </Button>\n          <Button\n            onClick={() => {\n              console.log(content, \"conteettttnnnnn\", zone);\n              if (content.length) {\n                setOpenNamePopUp(true);\n              }\n            }}\n            className=\"save-composition-btn\"\n            variant=\"info\"\n          >\n            Save Composition\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"form-head d-flex mb-3 align-items-start\">\n        <Button\n          className=\"mr-2\"\n          variant=\"info add-screen-btn\"\n          onClick={() => {\n            setUploadMediaModal(true);\n          }}\n        >\n          Add Media\n          <span className=\"btn-icon-right\">\n            <div class=\"glyph-icon flaticon-381-add-1\"></div>\n          </span>\n        </Button>\n        {/* <div className=\"search-textfield ml-auto d-flex flex-wrap align-items-center\">\n          <div className=\"form-group mb-0\">\n            <input\n              type=\"text\"\n              className=\"form-control input-default \"\n              placeholder=\"Search...\"\n            />\n            <img className=\"search-icon\" src={searchIcon} alt=\"search\" />\n          </div>\n          <Button className=\"ml-2 icon-btn\" variant=\"primary\">\n            <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\n          </Button>\n        </div> */}\n      </div>\n      <div className=\"custom-comp-table flex-1 editComposition\">\n        <Row className=\"h-100\">\n          <Col lg=\"6\" md=\"6\" sm=\"6\" xs=\"12\" className=\"pr-0 border-col\">\n            <CompositionTable\n              allMedia={allMedia}\n              addComposition={addComposition}\n            />\n          </Col>\n          <Col lg=\"6\" md=\"6\" sm=\"6\" xs=\"12\" className=\"pl-0\">\n            <ZoneInfoTable\n              content={content}\n              setContent={setContent}\n              setReferenceUrl={setReferenceUrl}\n              layout={layout}\n              handleLayout={handleLayout}\n            />\n          </Col>\n        </Row>\n        <UploadMediaModal\n          showUploadMediaModal={showUploadMediaModal}\n          setUploadMediaModal={setUploadMediaModal}\n          callAllMediaApi={mutate}\n        />\n        {showPreview && (\n          <PreviewComposition\n            setShowPreview={setShowPreview}\n            content={content}\n            contentnew={makeArray2(content, 2)}\n            referenceUrl={referenceUrl}\n            referenceUrlArray={makeArrayReference(referenceUrl)}\n            layout={layout}\n          />\n        )}\n        {namePopUp && (\n          <SaveCompositionName\n            setModalState={setOpenNamePopUp}\n            saveComposition={saveComposition}\n            name={name}\n            setName={setName}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CommonComposition;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/QuickPlayModal.jsx",["1054","1055","1056","1057","1058"],"import { Button, Modal, Row, Col, Badge, Dropdown } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\nimport { Link } from \"react-router-dom\";\nimport searchIcon from \"../../img/search.png\";\nimport listIcon from \"../../img/list-icon.png\";\nimport pic1 from \"./../../images/profile/small/pic1.jpg\";\nimport downArrow from \"../../img/down-arrow.png\";\n\nconst QuickPlayModal = ({ showQuickPlayModal, setQuickPlayModal }) => {\n  return (\n    <Modal\n      className=\"fade bd-example-modal-lg mt-4 custom-modal quick-modal custom-modal-medium\"\n      show={showQuickPlayModal}\n      size=\"md\"\n    >\n      <Modal.Header>\n        <Modal.Title className=\"mr-auto\">\n          Choose Composition to assign as Quickplay\n        </Modal.Title>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setQuickPlayModal(false)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"search-textfield quickplay-search d-flex flex-wrap align-items-center\">\n          {/* <div className=\"form-group mb-0\">\n            <input\n              type=\"text\"\n              className=\"form-control input-default \"\n              placeholder=\"Search...\"\n            />\n            <img className=\"search-icon\" src={searchIcon} alt=\"search\" />\n          </div> */}\n          <Button className=\"ml-2 icon-btn\" variant=\"primary\">\n            <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\n          </Button>\n        </div>\n        <div className=\"mb-3 quick-modal-table\">\n          <div className=\"w-100 table-responsive\">\n            <div id=\"example_wrapper\">\n              <table id=\"example\" className=\"display w-100  table custom-table\">\n                <thead>\n                  <tr>\n                    <th>Composition</th>\n                    <th>Date Added</th>\n                    <th>Duration</th>\n                    <th>Associated Schedule</th>\n                    <th>Tags</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>\n                      <span className=\"d-flex align-items-center\">\n                        <img\n                          className=\"rounded mr-2\"\n                          width=\"35\"\n                          src={pic1}\n                          alt=\"\"\n                        />\n                        <span className=\"td-content\">\n                          <strong>My_image_name</strong>\n                          <span>Added by Gauri Batra</span>\n                        </span>\n                      </span>\n                    </td>\n                    <td>\n                      <span className=\"d-flex align-items-center\">\n                        <span className=\"td-content\">\n                          <strong>3 Apr,2023</strong>\n                          <span>05 :30 PM</span>\n                        </span>\n                      </span>\n                    </td>\n                    <td>10 Sec</td>\n                    <td>0</td>\n                    <td style={{ width: \"180px\" }}>\n                      <span className=\"tag-container\">\n                        <span className=\"my-phone-tag text-truncate ml-1 mr-1 mb-1\">\n                          My Phone\n                        </span>\n                      </span>\n\n                      <span className=\"down-arrow\">\n                        <img\n                          className=\"down-arrow-img img-fluid\"\n                          src={downArrow}\n                          alt=\"arrow\"\n                        />\n                      </span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <span className=\"d-flex align-items-center\">\n                        <img\n                          className=\"rounded mr-2\"\n                          width=\"35\"\n                          src={pic1}\n                          alt=\"\"\n                        />\n                        <span className=\"td-content\">\n                          <strong>My_image_name</strong>\n                          <span>Added by Gauri Batra</span>\n                        </span>\n                      </span>\n                    </td>\n                    <td>\n                      <span className=\"d-flex align-items-center\">\n                        <span className=\"td-content\">\n                          <strong>3 Apr,2023</strong>\n                          <span>05 :30 PM</span>\n                        </span>\n                      </span>\n                    </td>\n                    <td>10 Sec</td>\n                    <td>0</td>\n                    <td style={{ width: \"180px\" }}>\n                      <span className=\"tag-container\">\n                        <span className=\"my-phone-tag text-truncate ml-1 mr-1 mb-1\">\n                          My Phone\n                        </span>\n                      </span>\n\n                      <span className=\"down-arrow\">\n                        <img\n                          className=\"down-arrow-img img-fluid\"\n                          src={downArrow}\n                          alt=\"arrow\"\n                        />\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <Row className=\"w-100 m-0\">\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n            <Button\n              className=\"cancel-btn w-100\"\n              variant=\"outline-light\"\n              onClick={() => setQuickPlayModal(false)}\n            >\n              Cancel\n            </Button>\n          </Col>\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n            <Button\n              variant=\"\"\n              type=\"button\"\n              className=\"btn btn-primary btn-block primary-btn\"\n              onClick={() => setQuickPlayModal(false)}\n            >\n              Assign\n            </Button>\n          </Col>\n        </Row>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default QuickPlayModal;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/main.jsx",["1059","1060","1061","1062","1063"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/saveCompositionName.jsx",["1064","1065"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\n\nconst SaveCompositionName = ({\n  setModalState,\n  saveComposition,\n  name,\n  setName,\n}) => {\n  return (\n    <Modal\n      className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium\"\n      show={true}\n      size=\"md\"\n    >\n      <Modal.Header>\n        <Modal.Title>Save Composition</Modal.Title>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setModalState(false)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"add-screen-paragraph\">\n          <p>Give your composition a name.</p>\n        </div>\n\n        <Row>\n          <Col lg={12} md={12} sm={12} xs={12}>\n            <div className=\"form-group\">\n              <input\n                value={name}\n                onChange={(event) => {\n                  setName(event.target.value);\n                }}\n                type=\"text\"\n                className=\"form-control input-default form-field\"\n                placeholder=\"Enter Name\"\n              />\n            </div>\n          </Col>\n        </Row>\n      </Modal.Body>\n      <Modal.Footer>\n        <Row className=\"w-100 m-0\">\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n            <Button\n              className=\"cancel-btn w-100\"\n              variant=\"outline-light\"\n              onClick={() => setModalState(false)}\n            >\n              Cancel\n            </Button>\n          </Col>\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n            <Button\n              variant=\"\"\n              type=\"button\"\n              className=\"btn btn-primary btn-block primary-btn\"\n              onClick={() =>{\n                if(name.length){\n                  saveComposition()\n                }\n              }}\n            >\n              Save\n            </Button>\n          </Col>\n        </Row>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default SaveCompositionName;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/previewComposition.jsx",["1066","1067","1068","1069","1070","1071","1072"],"import { Button, Modal } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport { useEffect, useRef, useState } from \"react\";\nimport WebVideoPlayer from \"../components/web-player/WebVideoPlayer\";\nimport { BASE_URL } from \"../../utils/api\";\nimport { isBlobUrl } from \"../../utils/UtilsService\";\nconst PreviewComposition = ({\n  setShowPreview,\n  content,\n  contentnew,\n  layout,\n  referenceUrl,\n  referenceUrlArray,\n}) => {\n  console.log(layout, \"layout\");\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [current1Index, setCurrent1Index] = useState(0);\n  const [current2Index, setCurrent2Index] = useState(0);\n  const timeoutRef = useRef(\"\");\n  const timeout1Ref = useRef(\"\");\n  const divRef = useRef(null);\n  useEffect(() => {\n    if (layout && layout.zones.length == 1) {\n      if (contentnew.Zone1[currentIndex]) {\n        const timeoutDuration = contentnew.Zone1[currentIndex].duration * 1000;\n        timeoutRef.current = setTimeout(() => {\n          if (currentIndex === contentnew.Zone1.length - 1) {\n            setCurrentIndex(0);\n          } else {\n            setCurrentIndex((currentIndex) => currentIndex + 1);\n          }\n        }, timeoutDuration);\n      }\n    } else if (layout && layout.zones.length == 2) {\n      if (contentnew.Zone1[currentIndex]) {\n        const timeoutDuration = contentnew.Zone1[currentIndex].duration * 1000;\n        timeoutRef.current = setTimeout(() => {\n          if (currentIndex === contentnew.Zone1.length - 1) {\n            setCurrentIndex(0);\n          } else {\n            setCurrentIndex((currentIndex) => currentIndex + 1);\n          }\n        }, timeoutDuration);\n      }\n      if (contentnew.Zone2 && contentnew.Zone2[current1Index]) {\n        const timeout1Duration =\n          contentnew.Zone2[current1Index].duration * 1000;\n        timeout1Ref.current = setTimeout(() => {\n          if (current1Index === contentnew.Zone2.length - 1) {\n            setCurrent1Index(0);\n          } else {\n            setCurrent1Index((current1Index) => current1Index + 1);\n          }\n        }, timeout1Duration);\n      }\n    } else if (layout && layout.zones.length == 3) {\n      if (contentnew.Zone1[currentIndex]) {\n        const timeoutDuration = contentnew.Zone1[currentIndex].duration * 1000;\n        timeoutRef.current = setTimeout(() => {\n          if (currentIndex === contentnew.Zone1.length - 1) {\n            setCurrentIndex(0);\n          } else {\n            setCurrentIndex((currentIndex) => currentIndex + 1);\n          }\n        }, timeoutDuration);\n      }\n      if (contentnew.Zone2 && contentnew.Zone2[current1Index]) {\n        const timeout1Duration =\n          contentnew.Zone2[current1Index].duration * 1000;\n        timeout1Ref.current = setTimeout(() => {\n          if (current1Index === contentnew.Zone2.length - 1) {\n            setCurrent1Index(0);\n          } else {\n            setCurrent1Index((current1Index) => current1Index + 1);\n          }\n        }, timeout1Duration);\n      }\n      if (contentnew.Zone3 && contentnew.Zone3[current2Index]) {\n        const timeout1Duration =\n          contentnew.Zone3[current2Index]?.duration * 1000;\n        timeout1Ref.current = setTimeout(() => {\n          if (current2Index === contentnew.Zone3.length - 1) {\n            setCurrent2Index(0);\n          } else {\n            setCurrent2Index((current2Index) => current2Index + 1);\n          }\n        }, timeout1Duration);\n      }\n    }\n\n    return () => clearTimeout(timeoutRef.current);\n  }, [currentIndex, current1Index]);\n\n  const onFullScreen = () => {\n    const element = document.getElementsByClassName(\n      \"modal-priview-composition\"\n    )[0];\n    // if (element.classList.contains(\"fullscreen-mode\")) {\n    //   element.classList.remove(\"fullscreen-mode\");\n    // }\n\n    if (element) {\n      // divRef.current.requestFullscreen();\n      if (element.requestFullscreen) {\n        element.requestFullscreen();\n      } else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n      } else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n      }\n      element.classList.add(\"fullscreen-mode\");\n    }\n  };\n\n  const viewImage = content[currentIndex].fitToScreen\n    ? \"fitScreen\"\n    : content[currentIndex].crop\n    ? \"crop\"\n    : \"aspectRation\";\n\n  // const url = isBlobUrl(referenceUrl[currentIndex])\n  //   ? referenceUrl[currentIndex]\n  //   : `${BASE_URL}${referenceUrl[currentIndex]}`;\n\n  const url =\n    referenceUrlArray.Zone1 && referenceUrlArray.Zone1[currentIndex]\n      ? isBlobUrl(referenceUrlArray.Zone1[currentIndex])\n        ? referenceUrlArray.Zone1[currentIndex]\n        : `${BASE_URL}${referenceUrlArray.Zone1[currentIndex]}`\n      : \"\";\n\n  const url1 =\n    referenceUrlArray.Zone2 && referenceUrlArray.Zone2[current1Index]\n      ? isBlobUrl(referenceUrlArray.Zone2[current1Index])\n        ? referenceUrlArray.Zone2[current1Index]\n        : `${BASE_URL}${referenceUrlArray.Zone2[current1Index]}`\n      : \"\";\n\n  const url2 =\n    referenceUrlArray.Zone3 && referenceUrlArray.Zone3[current2Index]\n      ? isBlobUrl(referenceUrlArray.Zone3[current2Index])\n        ? referenceUrlArray.Zone3[current2Index]\n        : `${BASE_URL}${referenceUrlArray.Zone3[current2Index]}`\n      : \"\";\n\n  return (\n    <Modal\n      className={`fade bd-example-modal-lg mt-4 custom-modal custom-modal-large custom-modal-preview ${layout.screenType}-view`}\n      show={true}\n      size=\"xl\"\n    >\n      <Modal.Header style={{ paddingBottom: \"0px\" }}>\n        <Modal.Title className=\"mr-auto\">Preview</Modal.Title>\n\n        <Button variant=\"\" className=\"close \" onClick={() => onFullScreen()}>\n          <i class=\"fa fa-expand fullscreenbtn\"></i>\n        </Button>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setShowPreview(false)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n      <Modal.Body ref={divRef} style={{ padding: \"15px\" }}>\n        {layout && layout.zones.length == 1 ? (\n          <>\n            {content[currentIndex] &&\n              content[currentIndex].type === \"image\" && (\n                <div\n                  className=\"basic-list-group image-preview-container media-content modal-priview-composition\"\n                  style={{ height: \"560px\" }}\n                >\n                  <img\n                    className=\"webplayer-preview-img\"\n                    style={{\n                      objectFit: `${\n                        viewImage === \"fitScreen\" ? \"fill\" : \"contain\"\n                      }`,\n                    }}\n                    src={url}\n                    alt=\"media-img\"\n                  />\n                </div>\n              )}\n            {content[currentIndex] &&\n              content[currentIndex].type === \"video\" && (\n                <div\n                  className={`basic-list-group video-container media-content ${viewImage} ${\n                    viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\n                  }`}\n                >\n                  <WebVideoPlayer src={url}></WebVideoPlayer>\n                </div>\n              )}\n          </>\n        ) : layout.zones.length == 2 ? (\n          <div className=\"modal-priview-composition\" style={{ height: \"80vh\" }}>\n            <div className=\"top-div\">\n              {contentnew.Zone1[currentIndex] &&\n                contentnew.Zone1[currentIndex].type === \"image\" && (\n                  <div className=\"basic-list-group image-preview-container media-content\">\n                    <img\n                      className=\"webplayer-preview-img\"\n                      style={{\n                        objectFit: `${\n                          viewImage === \"fitScreen\" ? \"fill\" : \"contain\"\n                        }`,\n                      }}\n                      //src={`https://ssapi.trendysignage.com/${contentnew.Zone1[currentIndex].url}`}\n                      src={url}\n                      alt=\"media-img\"\n                    />\n                  </div>\n                )}\n              {contentnew.Zone2 &&\n                contentnew.Zone1[currentIndex] &&\n                contentnew.Zone1[currentIndex].type === \"video\" && (\n                  <div\n                    className={`basic-list-group video-container media-content ${viewImage} ${\n                      viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\n                    }`}\n                    style={{ height: \"100%\" }}\n                  >\n                    <WebVideoPlayer\n                      //src={`https://ssapi.trendysignage.com/${contentnew.Zone1[currentIndex].url}`}\n                      src={url}\n                    ></WebVideoPlayer>\n                  </div>\n                )}\n            </div>\n            <div className=\"bottom-div\">\n              {contentnew.Zone2 &&\n                contentnew.Zone2[current1Index] &&\n                contentnew.Zone2[current1Index].type === \"image\" && (\n                  <div\n                    className=\"basic-list-group image-preview-container media-content\"\n                    style={{ height: \"100%\" }}\n                  >\n                    <img\n                      className=\"webplayer-preview-img\"\n                      style={{\n                        objectFit: `${\n                          viewImage === \"fitScreen\" ? \"fill\" : \"contain\"\n                        }`,\n                      }}\n                      //src={`https://ssapi.trendysignage.com/${contentnew.Zone2[current1Index].url}`}\n                      src={url1}\n                      alt=\"media-img\"\n                    />\n                  </div>\n                )}\n              {contentnew.Zone2 &&\n                contentnew.Zone2[current1Index] &&\n                contentnew.Zone2[current1Index].type === \"video\" && (\n                  <div\n                    className={`basic-list-group video-container media-content ${viewImage} ${\n                      viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\n                    }`}\n                    style={{ height: \"100%\" }}\n                  >\n                    <WebVideoPlayer\n                      //src={`https://ssapi.trendysignage.com/${contentnew.Zone2[current1Index].url}`}\n                      src={url1}\n                    ></WebVideoPlayer>\n                  </div>\n                )}\n            </div>\n          </div>\n        ) : layout.zones.length == 3 ? (\n          <div\n            className=\"modal-priview-composition\"\n            style={{ height: \"560px\" }}\n          >\n            <div className=\"third-compoition-container\">\n              <div className=\"third-composition-top-div\">\n                {contentnew.Zone1[currentIndex] &&\n                  contentnew.Zone1[currentIndex].type === \"image\" && (\n                    <div className=\"basic-list-group image-preview-container media-content\">\n                      <img\n                        className=\"webplayer-preview-img\"\n                        style={{\n                          objectFit: `${\n                            viewImage === \"fitScreen\" ? \"fill\" : \"contain\"\n                          }`,\n                        }}\n                        // src={`https://ssapi.trendysignage.com/${contentnew.Zone1[currentIndex].url}`}\n                        src={url}\n                        alt=\"media-img\"\n                      />\n                    </div>\n                  )}\n                {contentnew.Zone1[currentIndex] &&\n                  contentnew.Zone1[currentIndex].type === \"video\" && (\n                    <div\n                      className={`basic-list-group video-container media-content ${viewImage} ${\n                        viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\n                      }`}\n                    >\n                      <WebVideoPlayer\n                        //src={`https://ssapi.trendysignage.com/${contentnew.Zone1[currentIndex].url}`}\n                        src={url}\n                      ></WebVideoPlayer>\n                    </div>\n                  )}\n              </div>\n              <div className=\"third-composition-second-div\">\n                {contentnew.Zone2[current1Index] &&\n                  contentnew.Zone2[current1Index].type === \"image\" && (\n                    <div className=\"basic-list-group image-preview-container media-content\">\n                      <img\n                        className=\"webplayer-preview-img\"\n                        style={{\n                          objectFit: `${\n                            viewImage === \"fitScreen\" ? \"fill\" : \"contain\"\n                          }`,\n                        }}\n                        //src={`https://ssapi.trendysignage.com/${contentnew.Zone2[current1Index].url}`}\n                        src={url1}\n                        alt=\"media-img\"\n                      />\n                    </div>\n                  )}\n                {contentnew.Zone2[current1Index] &&\n                  contentnew.Zone2[current1Index].type === \"video\" && (\n                    <div\n                      className={`basic-list-group video-container media-content ${viewImage} ${\n                        viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\n                      }`}\n                    >\n                      <WebVideoPlayer\n                        //src={`https://ssapi.trendysignage.com/${contentnew.Zone2[current1Index].url}`}\n                        src={url1}\n                      ></WebVideoPlayer>\n                    </div>\n                  )}\n              </div>\n            </div>\n\n            <div className=\"third-composition-third-div\">\n              {contentnew.Zone3[current2Index] &&\n                contentnew.Zone3[current2Index].type === \"image\" && (\n                  <div className=\"basic-list-group image-preview-container media-content\">\n                    <img\n                      className=\"webplayer-preview-img\"\n                      style={{\n                        objectFit: `${\n                          viewImage === \"fitScreen\" ? \"fill\" : \"contain\"\n                        }`,\n                      }}\n                      //src={`https://ssapi.trendysignage.com/${contentnew.Zone3[current2Index].url}`}\n                      src={url2}\n                      alt=\"media-img\"\n                    />\n                  </div>\n                )}\n              {contentnew.Zone3[current2Index] &&\n                contentnew.Zone3[current2Index].type === \"video\" && (\n                  <div\n                    className={`basic-list-group video-container media-content ${viewImage} ${\n                      viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\n                    }`}\n                  >\n                    <WebVideoPlayer\n                      //src={`https://ssapi.trendysignage.com/${contentnew.Zone3[current2Index].url}`}\n                      src={url}\n                    ></WebVideoPlayer>\n                  </div>\n                )}\n            </div>\n          </div>\n        ) : (\n          <></>\n        )}\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default PreviewComposition;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/CompositionTable.jsx",["1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099","1100","1101"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/ZoneInfoTable.jsx",["1102","1103","1104","1105","1106","1107","1108","1109","1110","1111"],"import React, { useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nimport editBtnImg from \"../../../../img/edit-btn.png\";\nimport deleteBtnImg from \"../../../../img/delete-btn.png\";\nimport { BASE_URL } from \"../../../../utils/api\";\nimport EditSelectedComposition from \"../../../modals/editSelectedComposition\";\n\nconst ZoneInfoTable = ({\n  content,\n  setContent,\n  setReferenceUrl,\n  layout,\n  handleLayout,\n}) => {\n  console.log(\"Content\", content)\n  const [editSelected, setEditSelected] = useState(null);\n  const [selectedZone, setSelectedZone] = useState(\"Zone1\");\n  const [activeClass, setActiveClass] = useState(false);\n  const [selectedButtonIndex, setSelectedButtonIndex] = useState(0);\n\n  const handleChange = (event, index) => {\n    const newValue = event.target.value.replace(/[^\\d]/g, \"\");\n    setContent((prev) => {\n      const updateMedia = prev.map((val, key) => {\n        if (key === index) {\n          val.duration = newValue;\n        }\n        return val;\n      });\n      return [...updateMedia];\n    });\n  };\n  const makeZoneColor = (zones) => {\n    const data = {};\n    zones.forEach((item, index) => {\n      data[item.name] = index == 0 ? true : false;\n    });\n    return data;\n  };\n  const [zoneColor, setZoneColor] = useState(makeZoneColor(layout.zones));\n\n  const handleZoneButton = (zone1) => {\n    setZoneColor({ ...zoneColor, [selectedZone]: false, [zone1]: true });\n    setSelectedZone(zone1);\n    handleLayout(zone1);\n  };\n\n  const Duration = (composition, index) => {\n    return (\n      <div className=\"tag-container mediaDUrationTag\">\n        {\" \"}\n        <input\n          onChange={(event) => {\n            handleChange(event, index);\n          }}\n          value={Number(composition.duration).toFixed(0)}\n          disabled={composition.type === \"video\"}\n        />\n        <span>sec</span>\n      </div>\n    );\n  };\n  const TotalDuration = () => {\n    let total = 0;\n    content.forEach((composition) => {\n      total += Number(composition.duration);\n    });\n    return total.toFixed(0);\n  };\n\n  const removeComposition = (index) => {\n    setContent((prev) => {\n      const updateMedia = prev.filter((val, key) => key !== index);\n      return [...updateMedia];\n    });\n\n    setReferenceUrl((prev) => {\n      const updateUrl = prev.filter((val, key) => key !== index);\n      return [...updateUrl];\n    });\n  };\n\n  const editComposition = (index) => {\n    setEditSelected(index);\n  };\n\n  const updateViewType = (data, viewImage, ImgUrl) => {\n    setContent((prev) => {\n      const updateMedia = prev.map((val, key) => {\n        if (key === editSelected) {\n          val.fitToScreen = viewImage === \"fitScreen\";\n          val.maintainAspectRatio = viewImage === \"aspectRation\";\n          val.crop = viewImage === \"crop\" ? true : false;\n        }\n        return val;\n      });\n      return [...updateMedia];\n    });\n\n    setReferenceUrl((prev) => {\n      const updateMedia = prev.map((val, key) => {\n        if (key === editSelected) {\n          return ImgUrl+\"**\"+selectedZone;\n        } else {\n          return val;\n        }\n      });\n      return [...updateMedia];\n    });\n  };\n\n  const handleButtonClick = (index) => {\n    setSelectedButtonIndex(index);\n    // Perform any other logic specific to the clicked button\n  };\n\n  return (\n    <>\n      <Table\n        responsive\n        className=\"custom-table screen-table layout-table h-100\"\n      >\n        <thead>\n          <tr>\n            <th colSpan={4}>\n              <span className=\"d-flex flex-wrap\">\n                {layout && (layout.title === 'Single Zone Potrait' || layout.title === 'Two Zone Potrait') ?\n                    <span\n                      className={`yellow-box-portrait ${layout.title}`}\n                      style={{\n                        backgroundColor:\n                          layout &&\n                          (layout.zones.length == 2\n                            ? \"#fff\"\n                            : \"#ffc12b\"),\n                      }}\n                    >\n                      {layout && layout.zones.length == 2 ? (\n                        <>\n                          <div\n                            className=\"zone-layout2\"\n                            style={{\n                              backgroundColor: zoneColor[\"Zone1\"] ? \"#ffc12b\" : \"\",\n                            }}\n                          ></div>\n                          <div\n                            className=\"zone-layout22\"\n                            style={{\n                              backgroundColor: zoneColor[\"Zone2\"] ? \"#ffc12b\" : \"\",\n                            }}\n                          ></div>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n                    </span> : \n                    <span\n                      className={`yellow-box ${layout.title}`}\n                      style={{\n                        backgroundColor:\n                          layout &&\n                          (layout.zones.length == 2 || layout.zones.length == 3\n                            ? \"#fff\"\n                            : \"#ffc12b\"),\n                      }}\n                    >\n                      {layout && layout.zones.length == 2 ? (\n                        <>\n                          <div\n                            className=\"zone-layout2\"\n                            style={{\n                              backgroundColor: zoneColor[\"Zone1\"] ? \"#ffc12b\" : \"\",\n                            }}\n                          ></div>\n                          <div\n                            className=\"zone-layout22\"\n                            style={{\n                              backgroundColor: zoneColor[\"Zone2\"] ? \"#ffc12b\" : \"\",\n                            }}\n                          ></div>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n                      {layout && layout.zones.length == 3 ? (\n                        <>\n                          <div\n                            className=\"zone-layout31\"\n                            style={{\n                              backgroundColor: zoneColor[\"Zone1\"] ? \"#ffc12b\" : \"\",\n                            }}\n                          ></div>\n                          <div\n                            className=\"zone-layout32\"\n                            style={{\n                              backgroundColor: zoneColor[\"Zone2\"] ? \"#ffc12b\" : \"\",\n                            }}\n                          ></div>\n                          <div\n                            className=\"zone-layout33\"\n                            style={{\n                              backgroundColor: zoneColor[\"Zone3\"] ? \"#ffc12b\" : \"\",\n                            }}\n                          ></div>\n                        </>\n                      ) : (\n                        <></>\n                      )}\n                    </span>\n                    }\n                \n                {layout &&\n                  layout.zones.map((item, i) => {\n                    return (\n                      <button\n                        key={i}\n                        onClick={() => {\n                          handleZoneButton(item.name);\n                          handleButtonClick(i);\n                          // setActiveClass(true);\n                        }}\n                        // className=\"zone\"\n                        // className={activeClass ? \"zone zone-active \" : \"zone\"}\n                        className={\n                          selectedButtonIndex === i\n                            ? \"zone zone-active \"\n                            : \"zone\"\n                        }\n                      >\n                        {item.name}\n                      </button>\n                    );\n                  })}\n                <span className=\"duration\">\n                  Duration : {TotalDuration()} sec\n                </span>\n              </span>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {content.map((composition, index) => {\n            return composition.zone == selectedZone ? (\n              <tr key={composition.id}>\n                <td>{index + 1}.</td>\n                <td>\n                  <span className=\"td-content d-flex name-td-content\">\n                    <span\n                      className={`name-img mr-2  ${\n                        composition.type === \"video\" && \"videotableName\"\n                      }`}\n                    >\n                      {composition.type === \"image\" && (\n                        <img\n                          className=\"media-img img-fluid\"\n                          src={`${BASE_URL}${composition.url}`}\n                          alt=\"media-img\"\n                        />\n                      )}\n                      {composition.type === \"video\" &&\n                        composition.duration.toFixed(0) / 60}\n                    </span>\n                    <span className=\"name-content d-flex flex-column flex-grow-1\">\n                      <strong>\n                        {\n                          composition.url.split(\"/\")[\n                            composition.url.split(\"/\").length - 1\n                          ]\n                        }\n                      </strong>\n                      <span>{composition.createdBy}</span>\n                    </span>\n                  </span>\n                </td>\n                <td style={{ width: \"180px\" }}>\n                  {Duration(composition, index)}\n                </td>\n                <td>\n                  <span className=\"layout-edit-btn mr-2 \">\n                    <img\n                      className=\"edit-icon cursorPointer\"\n                      src={editBtnImg}\n                      alt=\"search\"\n                      onClick={() => {\n                        // if(composition.type === \"image\"){\n                        editComposition(index);\n                        // }\n                      }}\n                    />\n                  </span>\n                  <span\n                    className=\"layout-edit-btn\"\n                    onClick={() => {\n                      removeComposition(index);\n                    }}\n                  >\n                    <img\n                      className=\"edit-icon cursorPointer\"\n                      src={deleteBtnImg}\n                      alt=\"search\"\n                    />\n                  </span>\n                </td>\n              </tr>\n            ) : (\n              <></>\n            );\n          })}\n        </tbody>\n      </Table>\n\n      {editSelected !== null && (\n        <EditSelectedComposition\n          composition={content[editSelected]}\n          setEditSelected={setEditSelected}\n          updateViewType={updateViewType}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ZoneInfoTable;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/compositionPlayer.jsx",["1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124"],"import React, { useEffect, useState, useRef } from \"react\";\n\nimport WebVideoPlayer from \"./WebVideoPlayer\";\nimport { BASE_URL } from \"../../../utils/api\";\nimport ReactPlayer from \"react-player\";\nimport Iframe from \"react-iframe\";\nimport { fontSize } from \"@material-ui/system\";\nimport Zone1 from \"./Zone1\";\nimport Zone2 from \"./Zone2\";\nimport Zone3 from \"./Zone3\";\nimport { getWeather } from \"../../../utils/api\";\nconst CompositionPlayer = ({ contents, content, referenceUrl }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [current1Index, setCurrent1Index] = useState(0);\n  const [current2Index, setCurrent2Index] = useState(0);\n  const timeout1Ref = useRef(\"\");\n  const timeout2Ref = useRef(\"\");\n  const timeoutRef = useRef(\"\");\n\n  useEffect(() => {\n    if (contents && contents.zones.length == 1) {\n      if (contents.zones[0].content[currentIndex]) {\n        const timeoutDuration =\n          contents.zones[0].content[currentIndex].duration * 1000;\n        timeoutRef.current = setTimeout(() => {\n          if (currentIndex === contents.zones[0].content.length - 1) {\n            setCurrentIndex(0);\n          } else {\n            setCurrentIndex((currentIndex) => currentIndex + 1);\n          }\n        }, timeoutDuration);\n      }\n    } else if (contents && contents.zones.length == 2) {\n      if (contents.zones[0].content[currentIndex]) {\n        const timeoutDuration =\n          contents.zones[0].content[currentIndex].duration * 1000;\n        timeoutRef.current = setTimeout(() => {\n          if (currentIndex === contents.zones[0].content.length - 1) {\n            setCurrentIndex(0);\n          } else {\n            setCurrentIndex((currentIndex) => currentIndex + 1);\n          }\n        }, timeoutDuration);\n      }\n      if (contents.zones[1].content[current1Index]) {\n        const timeout1Duration =\n          contents.zones[1].content[current1Index].duration * 1000;\n        timeout1Ref.current = setTimeout(() => {\n          if (current1Index === contents.zones[1].content.length - 1) {\n            setCurrent1Index(0);\n          } else {\n            setCurrent1Index((current1Index) => current1Index + 1);\n          }\n        }, timeout1Duration);\n      }\n    } else if (contents && contents.zones.length == 3) {\n      if (contents.zones[0].content[currentIndex]) {\n        const timeoutDuration = contents.zones[0].content[currentIndex].duration * 1000;\n        timeout1Ref.current = setTimeout(() => {\n          console.log(currentIndex, contents.zones[0].content)\n          if (currentIndex === contents.zones[0].content.length - 1) {\n            setCurrentIndex(0);\n          } else {\n            setCurrentIndex(currentIndex + 1);\n          }\n        }, timeoutDuration);\n      }\n      if (contents.zones[1].content[current1Index]) {\n        const timeout1Duration =\n          contents.zones[1].content[current1Index].duration * 1000;\n        timeout1Ref.current = setTimeout(() => {\n          if (current1Index === contents.zones[1].content.length - 1) {\n            setCurrent1Index(0);\n          } else {\n            setCurrent1Index(current1Index + 1);\n          }\n        }, timeout1Duration);\n      }\n      if (contents.zones[2].content[current2Index]) {\n        const timeout1Duration =\n          contents.zones[2].content[current2Index].duration * 1000;\n        timeout2Ref.current = setTimeout(() => {\n          if (current2Index === contents.zones[2].content.length - 1) {\n            setCurrent2Index(0);\n          } else {\n            setCurrent2Index(current2Index + 1);\n          }\n        }, timeout1Duration);\n      }\n    }\n    console.log(`%c${currentIndex}`, \"font-size:20px;color:red\");\n    return () => {clearTimeout(timeoutRef.current);clearTimeout(timeout1Ref.current);clearTimeout(timeout2Ref.current)};\n  }, [currentIndex, current1Index, current2Index]);\n  const viewImage = content[currentIndex]?.fitToScreen\n    ? \"fitScreen\"\n    : content[currentIndex]?.crop\n    ? \"crop\"\n    : \"aspectRation\";\n\n  return (\n    <>\n      {\" \"}\n      {contents && contents.zones.length == 1 ? (\n        <Zone1\n          contents={contents}\n          currentIndex={currentIndex}\n          current1Index={current1Index}\n          current2Index={current2Index}\n          viewImage={viewImage}\n        />\n      ) : contents.zones.length == 2 ? (\n        <Zone2\n          contents={contents}\n          currentIndex={currentIndex}\n          current1Index={current1Index}\n          current2Index={current2Index}\n          viewImage={viewImage}\n        />\n      ) : contents.zones.length == 3 ? (\n        <Zone3\n          contents={contents}\n          currentIndex={currentIndex}\n          current1Index={current1Index}\n          current2Index={current2Index}\n          viewImage={viewImage}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default CompositionPlayer;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/WebVideoPlayer.jsx",["1125","1126"],"import React, { useEffect, useRef } from 'react';\nimport videojs from 'video.js';\n\nimport 'video.js/dist/video-js.css';\nconst WebVideoPlayer = (props) => {\n  console.log(props, \"WebVideoPlayer.jsx props\")\n  const videoRef = useRef(null);\n  const playerRef = useRef(null);\n\n  useEffect(() => {\n    videoRef.current?.load();\n    // playerRef.current = videojs(videoRef.current, {\n    //   autoplay: true,\n    //   controls: false,\n    //   muted:true,\n    //   loop:true,\n    //   src: props.src\n    // });\n    // console.log(\"test\",playerRef.current, videoRef.current)\n    return () => {\n      videoRef.current?.load();\n      if (playerRef.current) {\n        playerRef.current.dispose();\n        playerRef.current = null;\n      }\n    };\n  }, [props.src]);\n\n  useEffect(() => {\n    if (playerRef.current) {\n      playerRef.current.src({ src: props.src });\n    }\n  }, [props.src]);\n\n  // useEffect(() => {\n  //   if (playerRef.current && playerRef.current.tech()) {\n  //     playerRef.current.tech().src({ src: props.src });\n  //     playerRef.current.load();\n  //   }\n  // }, [props.src]);\n\n\n\n\n  // const videoRef = useRef(null);\n  // const playerRef = useRef(null);\n\n  // useEffect(() => {\n  //   // Create the Video.js player instance\n  //   playerRef.current = videojs(videoRef.current, {\n  //     autoplay: true,\n  //     controls: false,\n  //     loop: true,\n  //     muted: true,\n  //     sources: [{\n  //       src: props.src,\n        \n  //     }],\n  //   });\n\n  //   // Cleanup when component unmounts\n  //   return () => {\n  //     if (playerRef.current) {\n  //       playerRef.current.dispose();\n  //       playerRef.current = null;\n  //     }\n  //   };\n  // }, []);\n\n  // const videoRef = useRef(null);\n  // useEffect(() => {\n  //   const video = videoRef.current;\n\n  //   const handleEnded = () => {\n  //     video.currentTime = 0; // Restart the video from the beginning\n  //     video.play(); // Start playing the video again\n  //   };\n\n  //   video.addEventListener('ended', handleEnded);\n\n  //   return () => {\n  //     video.removeEventListener('ended', handleEnded);\n  //   };\n  // }, []);\n  return (\n  //<> <video ref={videoRef} className=\"video-js\" /></>\n  // <> <video ref={videoRef}   className=\"video-js\" </video></>\n\n    <video ref={videoRef} className=\"video-js\" autoPlay muted loop>\n      <source src={props.src} type=\"video/mp4\" />\n    </video>\n  );\n};\n\nexport default WebVideoPlayer;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/listComposition.jsx",["1127","1128","1129","1130"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/viewSchedule.jsx",["1131","1132","1133","1134","1135","1136","1137","1138","1139"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/UrlAppModal.jsx",["1140","1141","1142","1143","1144","1145","1146"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/ScrollerTextAppModal.jsx",["1147","1148","1149","1150","1151","1152","1153","1154"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/YoutubeAppModal.jsx",["1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/ClockApp.jsx",["1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/WeatherAppModal.jsx",["1179","1180","1181","1182","1183","1184","1185","1186","1187","1188"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/QrCodeModal.jsx",["1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/RssFeedAppModal.jsx",["1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/TextAppModal.jsx",["1222","1223","1224","1225","1226","1227","1228","1229","1230"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/StocksAppModal.jsx",["1231","1232","1233","1234","1235","1236","1237","1238","1239","1240"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/BulletinBoardAppModal.jsx",["1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AirQualityAppModal.jsx",["1252","1253","1254","1255","1256","1257","1258","1259","1260","1261"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/editSelectedComposition.jsx",["1262","1263","1264","1265","1266"],"import { useCallback, useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport WebVideoPlayer from \"../components/web-player/WebVideoPlayer\";\nimport { BASE_URL } from \"../../utils/api\";\nimport ImageCroper from \"../components/cropImage\";\nimport getCroppedImg from \"../components/cropImage/cropImage\";\nimport VideoThumbnail from \"react-video-thumbnail\";\nconst EditSelectedComposition = ({\n  composition,\n  setEditSelected,\n  updateViewType,\n}) => {\n  const getDefault = composition.fitToScreen\n    ? \"fitScreen\"\n    : composition.crop\n    ? \"crop\"\n    : \"aspectRation\";\n  const [viewImage, setViewImage] = useState(getDefault);\n  const [isLoading, setIsLoading] = useState(false);\n  const [zoom, setZoom] = useState(\n    composition.crop ? composition.crop.zoom : 1\n  );\n\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(\n    composition.crop ? composition.crop : null\n  );\n  const handleUpload = async () => {\n    const data = {\n      ...croppedAreaPixels,\n      zoom: zoom,\n    };\n    let ImgUrl = \"\";\n    if (viewImage === \"crop\") {\n      const getData = await getCroppedImg(\n        `${BASE_URL}/vendor/display/mediaFile?path=${composition.url}`,\n        croppedAreaPixels\n      );\n      ImgUrl = getData;\n    } else {\n      ImgUrl = composition.url;\n    }\n\n    updateViewType(data, viewImage, ImgUrl);\n    setEditSelected(null);\n  };\n\n  const handleOptionChange = (e) => {\n    setViewImage(e.target.value);\n  };\n\n  return (\n    <Modal\n      className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-large custom-modal-preview\"\n      show={true}\n      size=\"xl\"\n    >\n      <Modal.Header>\n        <Modal.Title className=\"mr-auto\">Preview</Modal.Title>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setEditSelected(null)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n      <Modal.Body>\n        <div className=\"custom-container\">\n          <div className=\"form-check\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"viewImage\"\n              value=\"fitScreen\"\n              id=\"fitScreen\"\n              onChange={handleOptionChange}\n              defaultChecked={viewImage === \"fitScreen\"}\n            />\n            <label className=\"form-check-label\" htmlFor=\"fitScreen\">\n              Fit to Screen\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"viewImage\"\n              value=\"aspectRation\"\n              id=\"aspectRation\"\n              onChange={handleOptionChange}\n              defaultChecked={viewImage === \"aspectRation\"}\n            />\n            <label className=\"form-check-label\" htmlFor=\"aspectRation\">\n              Maintain Aspect Ratio\n            </label>\n          </div>\n          {composition.type !== \"video\" && (\n            <div className=\"form-check\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"viewImage\"\n                value=\"crop\"\n                id=\"crop\"\n                onChange={handleOptionChange}\n                defaultChecked={viewImage === \"crop\"}\n              />\n              <label className=\"form-check-label\" htmlFor=\"crop\">\n                Crop\n              </label>\n            </div>\n          )}\n        </div>\n        {composition && composition.type === \"image\" && (\n          <>\n            <div\n              className=\"basic-list-group image-preview-container media-content image-preview-editable\"\n              style={{\n                border: \"1px solid\",\n                marginTop: viewImage == \"crop\" ? \"0%\" : \"4%\",\n                height: viewImage == \"crop\" ? \"560px\" : \"560px\",\n              }}\n            >\n              {viewImage === \"crop\" && (\n                <ImageCroper\n                  imgSrc={`${composition.url}`}\n                  zoom={zoom}\n                  setZoom={setZoom}\n                  croppedAreaPixels={croppedAreaPixels}\n                  setCroppedAreaPixels={setCroppedAreaPixels}\n                />\n              )}\n              {viewImage !== \"crop\" && (\n                <img\n                  className=\"webplayer-preview-img\"\n                  style={{\n                    objectFit: `${\n                      viewImage === \"fitScreen\" ? \"fill\" : \"contain\"\n                    }`,\n                  }}\n                  src={`${BASE_URL}${composition.url}`}\n                  alt=\"media-img\"\n                />\n              )}\n            </div>{\" \"}\n            {viewImage === \"crop\" && (\n              <div className=\"controls\">\n                <input\n                  type=\"range\"\n                  value={zoom}\n                  min={1}\n                  max={3}\n                  step={0.1}\n                  aria-labelledby=\"Zoom\"\n                  onChange={(e) => {\n                    setZoom(e.target.value);\n                  }}\n                  className=\"zoom-range\"\n                />\n              </div>\n            )}\n          </>\n        )}\n        {composition && composition.type === \"video\" && (\n          <div\n            className={`basic-list-group image-preview-container media-content image-preview-editable ${\n              viewImage === \"fitScreen\" ? \"fitImage\" : \"containImage\"\n            }`}\n            style={{ border: \"1px solid\", marginTop: \"15px\" }}\n          >\n            <VideoThumbnail\n              videoUrl={`${BASE_URL}/vendor/display/mediaFile?path=${composition.url}`}\n              thumbnailHandler={(thumbnail) => console.log(thumbnail)}\n              width={1280}\n              height={720}\n            />\n          </div>\n        )}\n      </Modal.Body>\n      <Modal.Footer>\n        <div className=\"loader-button-container\">\n          <Button\n            variant=\"\"\n            type=\"button\"\n            disabled={isLoading}\n            className={`btn btn-primary btn-block primary-btn`}\n            onClick={() => handleUpload()}\n          >\n            {isLoading ? <div className=\"loader\"></div> : \"Apply\"}\n          </Button>\n        </div>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default EditSelectedComposition;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/Zone1.jsx",["1267","1268","1269"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/Zone2.jsx",["1270","1271","1272"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/web-player/Zone3.jsx",["1273","1274","1275","1276"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/reports/index.jsx",["1277","1278","1279","1280","1281","1282","1283","1284"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Dropdown } from \"react-bootstrap\";\nimport scheduleIcon from \"../../../img/Vector.png\";\nimport computer from \"../../../img/computer.png\";\nimport logs from \"../../../img/logs.png\";\nimport GenerateReportModal from \"../../modals/generateReportModal\";\nimport { useHistory } from \"react-router-dom\";\nimport { getReports } from \"../../../utils/api\";\nimport Uptime from \"./Uptime\";\nimport Media from \"./Media\";\nimport Audit from \"./Audit\";\nimport backicon from \"../../../img/backicon.png\";\nimport LockScreen from \"../../pages/LockScreen\";\n\nconst Reports = ({permission}) => {\n  const history = useHistory();\n  const [showGenerateModal, setShowGenerateModal] = useState(false);\n  const [reportType, setReportType] = useState(\"\");\n  const [filter, setFilter] = useState({});\n  const [reportData, setReportData] = useState([]);\n  const [dropValue, setDropValue] = useState(\"Filter\");\n  let params = new URLSearchParams(history.location.search);\n  let reportSlug = params.get(\"report\");\n\n  const handleClick = (e, type) => {\n    e.preventDefault();\n    if(permission && permission.permission.REPORTS.view){\n      history.push(`/reports?report=${type}`);\n    }\n  };\n\n  const handleDropDown = (e, data) => {\n    e.preventDefault();\n    setDropValue(data);\n  };\n\n  useEffect(() => {\n    if (reportSlug && reportSlug !== \"\" && Object.keys(filter).length == 0) {\n      setShowGenerateModal(true);\n    }\n    if (Object.keys(filter).length > 0 && reportSlug !== \"\") {\n      getReports(filter.startDate, filter.endDate, reportSlug).then((res) => {\n        if (res.data.statusCode === 200) {\n          setReportData(res.data.data);\n        }\n      });\n    }\n  }, [reportSlug, filter]);\n\n  useEffect(() => {\n    if(permission && permission.permission.REPORTS.view){\n      if (reportSlug && reportSlug == \"media-report\") {\n        setReportType(\"Media Report\");\n      }\n      if (reportSlug && reportSlug == \"uptime-report\") {\n        setReportType(\"Uptime Report\");\n      }\n      if (reportSlug && reportSlug == \"audit-logs\") {\n        setReportType(\"Audit Logs\");\n      }\n    }\n  }, [reportData]);\n\n  const redirectBack = (e) => {\n    e.preventDefault();\n    setReportData([]);\n    setFilter({});\n    setReportType(\"\");\n    history.push(\"/reports\");\n  };\n\n  return (\n    <>\n      {reportSlug && reportSlug !== \"\" ? (\n        \"\"\n      ) : (\n        <>\n          <div className=\"custom-content-heading d-flex flex-wrap \">\n            <div>\n              <h1 className=\"mb-1\">Reports</h1>\n              <p className=\"three-layout-paragrapgh\">\n                Which report would you like to generate?\n              </p>\n            </div>\n          </div>\n          <Row>\n            <Col\n              lg=\"4\"\n              md=\"4\"\n              sm=\"12\"\n              xs=\"12\"\n              onClick={(e) => {\n                handleClick(e, \"media-report\");\n              }}\n            >\n              <div className=\"push-column text-center\">\n                <div className=\"push-column-icon d-flex align-items-center justify-content-center\">\n                  <img\n                    className=\"layout-select-img\"\n                    src={scheduleIcon}\n                    alt=\"menu-icon\"\n                  />\n                </div>\n                <h6> Media Report</h6>\n                <p>Shows for how much time Media file is played</p>\n              </div>\n            </Col>\n            <Col\n              lg=\"4\"\n              md=\"4\"\n              sm=\"12\"\n              xs=\"12\"\n              onClick={(e) => {\n                handleClick(e, \"uptime-report\");\n              }}\n            >\n              <div className=\"push-column text-center\">\n                <div className=\"push-column-icon d-flex align-items-center justify-content-center\">\n                  <img\n                    className=\"layout-select-img\"\n                    src={computer}\n                    alt=\"menu-icon\"\n                  />\n                </div>\n                <h6>Uptime Report</h6>\n                <p>Shows for how much time screen was displaying content</p>\n              </div>\n            </Col>\n            <Col\n              lg=\"4\"\n              md=\"4\"\n              sm=\"12\"\n              xs=\"12\"\n              onClick={(e) => {\n                handleClick(e, \"audit-logs\");\n              }}\n            >\n              <div className=\"push-column text-center\">\n                <div className=\"push-column-icon d-flex align-items-center justify-content-center\">\n                  <img\n                    className=\"layout-select-img\"\n                    src={logs}\n                    alt=\"menu-icon\"\n                  />\n                </div>\n                <h6>Audit Logs</h6>\n                <p>Shows data about users and their activity</p>\n              </div>\n            </Col>\n          </Row>\n        </>\n      )}\n      {reportData && reportSlug ? (\n        <>\n          <div className=\"custom-content-heading d-flex align-items-center\">\n            <div>\n              <button\n                onClick={(e) => {\n                  redirectBack(e);\n                }}\n                className=\"back-button\"\n              >\n                <img src={backicon} alt=\"icon\" />\n              </button>\n            </div>\n            <div className=\" ml-auto d-flex flex-wrap align-items-center\">\n              <Dropdown>\n                <Dropdown.Toggle\n                  variant=\"outline-primary\"\n                  size=\"sm\"\n                  className=\"mt-1 mb-2\"\n                >\n                  {dropValue}\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item\n                    onClick={(e) => {\n                      handleDropDown(e, \"Monthly\");\n                      setShowGenerateModal(true);\n                    }}\n                  >\n                    Monthly\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    onClick={(e) => {\n                      handleDropDown(e, \"Daily\");\n                      setShowGenerateModal(true);\n                    }}\n                  >\n                    Daily\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    onClick={(e) => {\n                      handleDropDown(e, \"Custom\");\n                      setShowGenerateModal(true);\n                    }}\n                  >\n                    Custom\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          </div>\n          <div className=\"custom-content-heading\">\n            <h1 className=\"mb-4\">{reportType}</h1>\n          </div>\n\n          {reportSlug && reportSlug == \"uptime-report\" ? (\n            permission && permission.permission.REPORTS.view ? <Uptime reportData={reportData} /> : <LockScreen message={\"You don't have permssion to access this !!!\"} />\n          ) : (\n            \"\"\n          )}\n          {reportSlug && reportSlug == \"media-report\" ? (\n            permission && permission.permission.REPORTS.view ? <Media reportData={reportData} /> : <LockScreen message={\"You don't have permssion to access this !!!\"} />\n          ) : (\n            \"\"\n          )}\n          {reportSlug && reportSlug == \"audit-logs\" ? (\n            permission && permission.permission.REPORTS.view ? <Audit reportData={reportData} /> : <LockScreen message={\"You don't have permssion to access this !!!\"} />\n          ) : (\n            \"\"\n          )}\n        </>\n      ) : (\n        \"\"\n      )}\n      <GenerateReportModal\n        close={() => setShowGenerateModal(false)}\n        show={showGenerateModal}\n        setReportType={reportType}\n        setFilter={setFilter}\n        filter={filter}\n      />\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n      auth: state.auth.auth,\n      permission : state.auth.permission\n  };\n};\nexport default connect(mapStateToProps)(Reports);\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/integrations/index.jsx",["1285","1286","1287","1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309","1310","1311","1312"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/layout/Composition/CompositionActions.jsx",["1313"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/cropImage/cropImage.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/duplicateComposition.jsx",["1314","1315"],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/cropImage/index.jsx",["1316","1317","1318"],"import React, { useState, useCallback } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Cropper from 'react-easy-crop'\n\nimport getCroppedImg from \"./cropImage\";\nimport { BASE_URL } from \"../../../utils/api\";\n\nconst ImageCroper = ({\n  imgSrc,\n  zoom,\n  setZoom,\n  setCroppedAreaPixels,\n  croppedAreaPixels,\n}) => {\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n\n  return (\n    <Cropper\n      image={`${BASE_URL}${imgSrc}`}\n      crop={crop}\n      zoom={zoom}\n      aspect={16 / 9}\n      onCropChange={setCrop}\n      onCropComplete={onCropComplete}\n      onZoomChange={setZoom}\n    />\n  );\n};\n\nexport default ImageCroper;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/layouts/viewDetails.jsx",["1319"],"import { Button, Modal, Row, Col, Table } from \"react-bootstrap\";\nimport cancelIcon from \"../../../img/cancel-icon.png\";\n\nimport Rectangle from \"../../../img/Rectangle.png\";\n\nimport \"../../components/Table.css\";\nimport layoutSelected from \"../../../img/layout-select-img.png\";\n// import tagCloseIcon from \"../../img/tag-close-icon.png\";\nimport { BASE_URL } from \"../../../utils/api\";\nimport { Link } from \"react-router-dom\";\nconst ViewDetails = ({ setViewDetailsModal, composition }) => {\n\n  return (\n    <>\n      <Modal\n        className={`fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium`}\n        show={true}\n        size=\"md\"\n      >\n        <Modal.Header>\n          <Modal.Title>Composition Details</Modal.Title>\n          <Button\n            variant=\"\"\n            className=\"close\"\n            onClick={() => setViewDetailsModal(false)}\n          >\n            <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n          </Button>\n        </Modal.Header>\n\n        <Modal.Body>\n          <div>\n            <div className=\" d-flex align-items-center justify-content-center flex-column mx-auto\">\n              <img className=\"\" src={Rectangle} alt=\"upload-img\" />\n            </div>\n            <div className=\"d-flex align-items-center justify-content-center flex-column mx-auto\">\n              Duration : {composition.duration} sec\n            </div>\n            <div className=\"d-flex align-items-center justify-content-center flex-column mx-auto\">\n              {composition.layout.zones.map((zone) => {\n                return (\n                  <span variant=\"\" type=\"button\" className=\" zoneName\">\n                    {zone.name}\n                  </span>\n                );\n              })}\n            </div>\n            <hr className=\"new1\" />\n            <Table responsive className=\"custom-table mt-3\">\n              <tbody>\n              {composition.zones[0].content.map((content, index) => {\n                return (\n                    <tr>\n                    <td>{index + 1}.</td>\n                    <td>\n                    <span className=\"td-content d-flex name-td-content\">\n                      <span className={`name-img mr-2  ${content.type === \"video\" && \"videotableName\"}`}>\n                      {content.type === \"image\" && <img\n                          className=\"media-img img-fluid\"\n                          src={`${BASE_URL}${content.url}`}\n                          alt=\"media-img\"\n                        />}\n                         {content.type === \"video\" && content?.duration.toFixed(0)/60}\n                      </span>\n                      <span className=\"name-content d-flex flex-column flex-grow-1\">\n                        <strong>{content.url.split(\"/\")[content.url.split(\"/\").length -1]}</strong>\n                        {/* <span>{content.createdBy}</span> */}\n                      </span>\n                    </span>\n                  </td>\n\n                  <td>\n                    <span className=\"my-phone-tag  ml-1\">{(content?.duration).toFixed(0)} Sec</span>\n                  </td>\n                </tr>\n                )\n              })}\n\n              </tbody>\n            </Table>\n          </div>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Row className=\"w-100 m-0\">\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n              <Button\n                className=\"cancel-btn w-100\"\n                variant=\"outline-light\"\n                onClick={() => {\n                  setViewDetailsModal(false);\n                }}\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n            <Link to={`/composition/edit?id=${composition._id}`}>\n            <Button\n                variant=\"\"\n                type=\"button\"\n                className=\"btn btn-primary btn-block primary-btn\"\n              >\n                Edit Details\n              </Button>\n            </Link>\n              \n            </Col>\n          </Row>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default ViewDetails;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/ResetPassword.jsx",["1320"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\nimport { connect, useDispatch } from \"react-redux\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport { resetPassword } from \"../../store/actions/AuthActions\"\nimport React, { useState, useEffect } from \"react\";\n\nconst ResetPassword = ({errorMessage, successMessage, show, setShowResetPassword, history }) => {\n  const [email, setEmail] = useState('');\n  const [errMsg, setErrMsg] = useState(null)\n  const dispatch = useDispatch();  \n  useEffect(() => {\n\n  },[])\n  \n\n  const handleCreateApp = async(e) => {\n    e.preventDefault();\n    setErrMsg(\"\");\n    if(email === ''){\n        setErrMsg('Email is Required');\n        return \n    }\n    dispatch(resetPassword(email, history));\n    \n  }\n  return (\n    <>\n    <Modal\n      className=\"fade bd-example-modal-lg mt-4 app-modal\"\n      show={show}\n      size=\"xl\"\n      centered\n    >\n      <Modal.Header className=\"border-0\">\n        <Modal.Title className=\"mr-auto app-modal-heading\">\n          Reset Password\n        </Modal.Title>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setShowResetPassword(false)}\n        >\n          <img\n            className=\"cancel-icon\"\n            src={cancelIcon}\n            alt=\"cancel-icon\"\n            height=\"25px\"\n            width=\"25px\"\n          />\n        </Button>\n      </Modal.Header>\n      <Modal.Body>\n          {errorMessage && (\n            <h5 className=\"alert alert-danger\">{errorMessage}</h5>\n          )}\n          {successMessage && (\n            <h5 className=\"alert alert-success\">{successMessage}</h5>\n          )}\n          {errMsg && (\n            <h5 className=\"alert alert-danger\">{errMsg}</h5>\n          )}\n        <form\n          className=\"row\"\n        >\n          <div className=\"form-group col-12 mb-0  url-app-form\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              className=\"  form-control \"\n              placeholder=\"Enter Your Email...\"\n              required\n              name=\"email\"\n              id=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n            />\n\n            \n          </div>\n        </form>\n      </Modal.Body>\n      <Modal.Footer className=\"border-0 mb-2\">\n        <Row className=\"w-100 m-0\">\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n            <Button className=\"cancel-btn w-100\" variant=\"outline-light\"\n                onClick={() => setShowResetPassword(false)}\n            >\n              Cancel\n            </Button>\n          </Col>\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n            <Button\n              variant=\"\"\n              type=\"button\"\n              className=\"btn btn-primary btn-block primary-btn\"\n              onClick={(e) => handleCreateApp(e)}\n            >\n              Reset Password\n            </Button>\n          </Col>\n        </Row>\n      </Modal.Footer>\n    </Modal>\n      </>\n  );\n};\nconst mapStateToProps = (state) => {\n    return {\n      errorMessage: state.auth.errorMessage,\n      successMessage: state.auth.successMessage,\n      showLoading: state.auth.showLoading,\n    };\n  };\nexport default connect(mapStateToProps)(ResetPassword);\n\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/ChangePassword.jsx",["1321","1322"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\n\nconst ChangePassword = ({ setShowModel, show }) => {\n  return (\n    <Modal\n      className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium\"\n      show={show}\n      size=\"md\"\n    >\n      <Modal.Header>\n        <Modal.Title>Change Password</Modal.Title>\n        <Button\n          variant=\"\"\n          className=\"close\"\n          onClick={() => setShowModel(false)}\n        >\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n        </Button>\n      </Modal.Header>\n      <Modal.Body>\n        <form>\n          <div className=\"mb-3\">\n            <strong>\n              <label className=\"mb-3\"> Old Password</label>\n            </strong>\n            <input\n              type=\"text\"\n              className=\"form-control input-default form-field\"\n              placeholder=\"Old Password\"\n            />\n          </div>\n\n          <div className=\"mb-4\">\n            <strong>\n              <label className=\"mb-3\"> New Password</label>\n            </strong>\n            <input\n              type=\"text\"\n              className=\"form-control input-default form-field\"\n              placeholder=\"New Password\"\n            />\n          </div>\n        </form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Row className=\"w-100 m-0\">\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n            <Button className=\"cancel-btn w-100\" variant=\"outline-light\">\n              Cancel\n            </Button>\n          </Col>\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n            <Button\n              variant=\"\"\n              type=\"button\"\n              className=\"btn btn-primary btn-block primary-btn\"\n              onClick={() => setShowModel(false)}\n            >\n              Save\n            </Button>\n          </Col>\n        </Row>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ChangePassword;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/Verification.jsx",["1323","1324"],"import React, { useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n verification,\n resendOtp,\n clearErrors,\n logout\n} from \"../../store/actions/AuthActions\";\nimport { Button } from \"react-bootstrap\";\n//\nimport logo from \"../../img/logo.png\";\nimport googleIcon from \"../../img/google-icon.png\";\n\nfunction Verification(props) {\n  const [otp, setOtp] = useState(\"\");\n  let errorsObj = { email: \"\", password: \"\" };\n  const [errors, setErrors] = useState(errorsObj);\n  const dispatch = useDispatch();\n\n  function onLogin(e) {\n    e.preventDefault();\n    let error = false;\n    const errorObj = { ...errorsObj };\n    if (otp === \"\") {\n      errorObj.otp = \"OTP is Required\";\n      error = true;\n    }\n    setErrors(errorObj);\n    if (error) {\n      return;\n    }\n    // dispatch(loadingToggleAction(true));\n    dispatch(verification(otp, props.history));\n  }\n\n  const sendOtpAgain = (e) => {\n    e.preventDefault();\n    dispatch(resendOtp(props.history));\n  }\n\n  const handleLoginAgain = (e) => {\n    e.preventDefault();\n    dispatch(logout(props.history));\n  }\n\n \n  return (\n    <div className=\"login-form-bx auth-page\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-8 col-md-7 d-flex box-skew1 relative login-leftpanel\">\n            <div className=\"inner-content align-self-center\">\n              <Link to=\"/dashboard\" className=\"login-logo\">\n                <img src={logo} alt=\"\" className=\"logo-icon mr-2\" />\n              </Link>\n              <h2 className=\"m-b10 text-white\">\n                Sign In to <br /> Trendy Website\n              </h2>\n              <p className=\"m-b40 text-white\">\n                Boost your engagement & productivity, streamline processes, and\n                make faster communications.\n              </p>\n            </div>\n            <div className=\"login-center-img\"></div>\n          </div>\n          <div className=\"col-lg-4 col-md-5 box-skew d-flex pl-0 pr-0 login-rightpanel\">\n            <div className=\"authincation-content\">\n            <div>\n          <div className=\"mb-4\">\n            <h3 className=\"mb-1 font-w600\">Verification</h3>\n            <p className=\"welcome-content-paragraph\">\n              Enter OTP to verify your Account\n            </p>\n          </div>\n            {props.errorMessage && (\n                <div className=\"alert alert-danger \">\n                <h5>{props.errorMessage}</h5>\n                </div>\n            )}\n            {props.successMessage && (\n                <div className=\"alert alert-success\">\n                <h5>{props.successMessage}</h5>\n                </div>\n            )}\n            <form onSubmit={onLogin}>\n                <div className=\"form-group\">\n                <input\n                    type=\"numer\"\n                    autoComplete=\"off\"\n                    className=\"form-control\"\n                    value={otp}\n                    placeholder=\"OTP...\"\n                    onChange={(e) => setOtp(e.target.value)}\n                />\n                {errors.otp && (\n                    <div className=\"text-danger fs-12\">{errors.otp}</div>\n                )}\n                </div>\n                <div className=\"recover-password d-flex justify-content-end\">\n                    <Button className=\"revover-password\" onClick={(e) => {sendOtpAgain(e)}}>\n                        Resend OTP\n                    </Button>\n                </div>\n                <div className=\"text-center\">\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block btn-pink\"\n                >\n                    Verifiy\n                </button>\n                </div>\n            </form>\n            <div className=\"new-account add-new-account  text-center mt-2\">\n                <p className=\"mb-0\">\n                Change your email?{\" \"}\n                <Button className=\"signup-link\" onClick={(e) => handleLoginAgain(e)}>\n                    Sign up\n                </Button>\n                </p>\n            </div>\n\n            {/* <Button className='btn-google-signin' variant='outline-primary'>\n            <img src={googleIcon} alt=\"\" className=\"logo-icon mr-2\"/> <span>Sign in with Google</span>\n            </Button> */}\n            </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    errorMessage: state.auth.errorMessage,\n    successMessage: state.auth.successMessage,\n    showLoading: state.auth.showLoading,\n    auth: state.auth.auth,\n  };\n};\nexport default connect(mapStateToProps)(Verification);\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/pages/VerificationBkp.jsx",["1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337","1338"],"import React, { useEffect, useState } from \"react\";\nimport speakeasy from \"speakeasy\";\nimport QRCode from \"qrcode\";\nimport { toast } from \"react-toastify\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  verification,\n  verify2fa,\n  resendOtp,\n  clearErrors,\n  logout,\n} from \"../../store/actions/AuthActions\";\nimport { Button } from \"react-bootstrap\";\n//\nimport logo from \"../../img/logo.png\";\nimport googleIcon from \"../../img/google-icon.png\";\nimport { authenticator } from \"otplib\";\nimport crypto from \"crypto\";\nimport base32Decode from \"base32-decode\";\nimport base32Encode from \"base32-encode\";\nimport util from \"util\";\n\nfunction Verification(props) {\n  const [otp, setOtp] = useState(\"\");\n  let errorsObj = { email: \"\", password: \"\" };\n  const [errors, setErrors] = useState(errorsObj);\n  const [image, setImage] = useState(\"\");\n  const [validCode, setValidCode] = useState(\"\");\n  const [isCodeValid, setIsCodeValid] = useState(null);\n  const [secret, setSecret] = useState(\n    speakeasy.generateSecret({ name: \"Trendy\" })\n  );\n  const [mfaSecret, setMfaSecret] = useState(null);\n\n  const dispatch = useDispatch();\n\n  function onLogin(e) {\n    e.preventDefault();\n    let error = false;\n    const errorObj = { ...errorsObj };\n    if (otp === \"\") {\n      errorObj.otp = \"OTP is Required\";\n      error = true;\n    }\n    setErrors(errorObj);\n    if (error) {\n      return;\n    }\n    // dispatch(loadingToggleAction(true));\n    dispatch(verification(otp, props.history));\n  }\n\n  const generateHOTP = (secret, counter) => {\n    const decodedSecret = base32Decode(secret, \"RFC4648\");\n\n    const buffer = Buffer.alloc(8);\n    for (let i = 0; i < 8; i++) {\n      buffer[7 - i] = counter & 0xff;\n      counter = counter >> 8;\n    }\n\n    // Step 1: Generate an HMAC-SHA-1 value\n    const hmac = crypto.createHmac(\"sha1\", Buffer.from(decodedSecret));\n    hmac.update(buffer);\n    const hmacResult = hmac.digest();\n\n    // Step 2: Generate a 4-byte string (Dynamic Truncation)\n    const offset = hmacResult[hmacResult.length - 1] & 0xf;\n    const code =\n      ((hmacResult[offset] & 0x7f) << 24) |\n      ((hmacResult[offset + 1] & 0xff) << 16) |\n      ((hmacResult[offset + 2] & 0xff) << 8) |\n      (hmacResult[offset + 3] & 0xff);\n\n    // Step 3: Compute an HOTP value\n    return `${code % 10 ** 6}`.padStart(6, \"0\");\n  };\n\n  const generateTOTP = (secret, window = 0) => {\n    const counter = Math.floor(Date.now() / 30000);\n    return generateHOTP(secret, counter + window);\n  };\n\n  const sendOtpAgain = (e) => {\n    e.preventDefault();\n    dispatch(resendOtp(props.history));\n  };\n\n  const handleLoginAgain = (e) => {\n    e.preventDefault();\n    dispatch(logout(props.history));\n  };\n\n  const getSecret = async () => {\n    console.log(\"auth\", props.auth.vendor.mfa);\n    const buffer = await util.promisify(crypto.randomBytes)(14);\n    const mfaSecret = props.auth.vendor.mfa\n      ? props.auth.vendor.mfa\n      : base32Encode(buffer, \"RFC4648\", { padding: false });\n    setMfaSecret(mfaSecret);\n    const issuer = \"MfaDemo\";\n    const algorithm = \"SHA1\";\n    const digits = \"6\";\n    const period = \"30\";\n    const otpType = \"totp\";\n    const configUri = `otpauth://${otpType}/${issuer}:${\"Anuj\"}?algorithm=${algorithm}&digits=${digits}&period=${period}&issuer=${issuer}&secret=${mfaSecret}`;\n    console.log(\"configuri\", configUri);\n    //qrcode.toFileStream(res, configUri);\n    QRCode.toDataURL(configUri, (err, image_data) => {\n      setImage(image_data);\n    });\n    // QRCode.toDataURL(secret.otpauth_url, (err, image_data) => {\n    //   setImage(image_data);\n    // });\n  };\n\n  const getCode = async () => {\n    const code = speakeasy.totp({\n      secret: secret.hex,\n      encoding: \"hex\",\n      algorithm: \"sha1\",\n    });\n    setValidCode(code);\n  };\n\n  const verifyCode = (e) => {\n    e.preventDefault();\n    const isVerify = verifyTOTP(otp, mfaSecret);\n    if (isVerify) {\n      dispatch(verify2fa(mfaSecret, props.history));\n    } else {\n      return toast.error(\"Invalid OTP\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n    }\n  };\n\n  const verifyTOTP = (token, secret, window = 1) => {\n    console.log(token, secret);\n    for (let errorWindow = -window; errorWindow <= +window; errorWindow++) {\n      const totp = generateTOTP(secret, errorWindow);\n      console.log(totp, token);\n      if (token === totp) {\n        console.log(\"true\");\n        return true;\n      }\n    }\n    console.log(\"false\");\n    return false;\n  };\n\n  useEffect(() => {\n    getSecret();\n  }, []);\n\n  return (\n    <div className=\"login-form-bx auth-page\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-8 col-md-7 d-flex box-skew1 relative login-leftpanel\">\n            <div className=\"inner-content align-self-center\">\n              <Link to=\"/dashboard\" className=\"login-logo\">\n                <img src={logo} alt=\"\" className=\"logo-icon mr-2\" />\n              </Link>\n              <h2 className=\"m-b10 text-white\">\n                Sign In to <br /> Trendy Website\n              </h2>\n              <p className=\"m-b40 text-white\">\n                Boost your engagement & productivity, streamline processes, and\n                make faster communications.\n              </p>\n            </div>\n            <div className=\"login-center-img\"></div>\n          </div>\n          <div className=\"col-lg-4 col-md-5 box-skew d-flex pl-0 pr-0 login-rightpanel\">\n            <div className=\"authincation-content\">\n              <div>\n                <div className=\"mb-4 text-center\">\n                  <img src={`${image}`} className=\"mb-3\" />\n                  <p\n                    className=\"welcome-content-paragraph text-white\"\n                    style={{ opacity: 1 }}\n                  >\n                    Scan the QR code on your authenticator app\n                  </p>\n                </div>\n                {props.errorMessage && (\n                  <div className=\"alert alert-danger \">\n                    <h5>{props.errorMessage}</h5>\n                  </div>\n                )}\n                {props.successMessage && (\n                  <div className=\"alert alert-success\">\n                    <h5>{props.successMessage}</h5>\n                  </div>\n                )}\n                <form\n                //onSubmit={verifyCode}\n                >\n                  <div className=\"form-group\">\n                    <input\n                      type=\"numer\"\n                      autoComplete=\"off\"\n                      className=\"form-control\"\n                      value={otp}\n                      placeholder=\"OTP...\"\n                      onChange={(e) => setOtp(e.target.value)}\n                    />\n                    {errors.otp && (\n                      <div className=\"text-danger fs-12\">{errors.otp}</div>\n                    )}\n                  </div>\n                  {/* <div className=\"recover-password d-flex justify-content-end\">\n                    <Button className=\"revover-password\" onClick={(e) => {sendOtpAgain(e)}}>\n                        Resend OTP\n                    </Button>\n                </div> */}\n                  <div className=\"text-center\">\n                    {/* <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block btn-pink\"\n                >\n                    Verifiy\n                </button> */}\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary btn-block btn-pink\"\n                      onClick={(e) => {\n                        verifyCode(e);\n                      }}\n                    >\n                      Verifiy\n                    </button>\n                  </div>\n                </form>\n                {/* <div className=\"new-account add-new-account  text-center mt-2\">\n                <p className=\"mb-0\">\n                Change your email?{\" \"}\n                <Button className=\"signup-link\" onClick={(e) => handleLoginAgain(e)}>\n                    Sign up\n                </Button>\n                </p>\n            </div> */}\n\n                {/* <Button className='btn-google-signin' variant='outline-primary'>\n            <img src={googleIcon} alt=\"\" className=\"logo-icon mr-2\"/> <span>Sign in with Google</span>\n            </Button> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    errorMessage: state.auth.errorMessage,\n    successMessage: state.auth.successMessage,\n    showLoading: state.auth.showLoading,\n    auth: state.auth.auth,\n  };\n};\nexport default connect(mapStateToProps)(Verification);\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/integrations/PeopleSpace.jsx",[],"/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/integrations/Createtemplate.jsx",["1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350","1351","1352","1353","1354","1355","1356","1357","1358"],"import React, { useState, useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport TemplateAddContent from \"../../modals/TemplateAddContent\";\nimport { toast } from \"react-toastify\";\nimport userimg from \"../../../img/Ellipse 151.svg\";\nimport edit from \"../../../img/edit-btn.png\";\nimport deleteicon from \"../../../img/delete-btn.png\";\nimport EditTemplate from \"../../modals/EditTemplate\";\nimport settingicon from \"../../../img/setting-5.svg\";\nimport {\n  updateApps,\n  addApps,\n  BASE_URL,\n  getAllMediaDetail,\n} from \"../../../utils/api\";\nimport SelectMedia from \"../../modals/SelecteMedia\";\nimport { useParams } from \"react-router-dom\";\nimport PeopleSpacePreview from \"./PeopleSpacePreview\";\n\nexport default function Createtemplate({ history, actionType, mediaId }) {\n  let params = new URLSearchParams(history.location.search);\n  const { id } = useParams();\n  console.log(\"params\", id);\n  let tempType = params.get(\"type\");\n  console.log(\"temp\", tempType);\n  const [showAddContent, setShowAddContent] = useState(false);\n  const [showEditTemplate, setShowEditTemplate] = useState(false);\n  const [slides, setSlides] = useState(\n    (tempType && tempType == \"temp1\") || tempType == \"temp4\"\n      ? [\n          {\n            name: \"Jennifer Winget1\",\n            message:\n              \"We are proud to have someone like you We are proud to have someone like you.\",\n          },\n          {\n            name: \"Jennifer Winget2\",\n            message:\n              \"We are proud to have someone like you We are proud to have someone like you.\",\n          },\n          {\n            name: \"Jennifer Winget3\",\n            message:\n              \"We are proud to have someone like you We are proud to have someone like you.\",\n          },\n        ]\n      : (tempType && tempType == \"temp2\") ||\n        tempType == \"temp3\" ||\n        tempType == \"temp5\" ||\n        tempType == \"temp6\"\n      ? [\n          {\n            name: \"Jennifer Winget3\",\n            message:\n              \"We are proud to have someone like you We are proud to have someone like you.\",\n          },\n        ]\n      : []\n  );\n  const [editItem, setEditItem] = useState(null);\n  const [editImage, setEditImage] = useState(null);\n  const [appName, setAppName] = useState(null);\n  const [appTitle, setAppTitle] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imageModalShow, setImageModalShow] = useState(false);\n  const [slideIndex, setSlideIndex] = useState(0);\n  const [isRefresh, setIsRefresh] = useState(false);\n  const [showPreview, setShowPreview] = useState(false);\n  const [settingData, setSettingData] = useState(\n    tempType\n      ? tempType == \"temp1\"\n        ? {\n            bgOpacity: 100,\n            bgColor: \"#FAACC5\",\n            duration: \"20\",\n            isTitle: true,\n            messageColor: \"#AA144C\",\n            messageStyle: {\n              value: \"'Fira Sans', sans-serif\",\n              label: \"Fira Sans\",\n            },\n            nameColor: \"#AA144C\",\n            nameStyle: { value: \"'Fira Sans', sans-serif\", label: \"Fira Sans\" },\n            titleColor: \"#AA144C\",\n            titleStyle: {\n              value: \"'Fira Sans', sans-serif\",\n              label: \"Fira Sans\",\n            },\n          }\n        : tempType == \"temp2\"\n        ? {\n            bgOpacity: 100,\n            bgColor: \"#78e176\",\n\n            duration: \"20\",\n            isTitle: true,\n            messageColor: \"#076923\",\n            messageStyle: {\n              value: \"'Fira Sans', sans-serif\",\n              label: \"Fira Sans\",\n            },\n            nameColor: \"#076923\",\n            nameStyle: { value: \"'Fira Sans', sans-serif\", label: \"Fira Sans\" },\n            titleColor: \"#076923\",\n            titleStyle: {\n              value: \"'Fira Sans', sans-serif\",\n              label: \"Fira Sans\",\n            },\n          }\n        : tempType == \"temp3\"\n        ? {\n            bgOpacity: 100,\n            bgColor: \"#78e176b8\",\n            duration: \"20\",\n            isTitle: true,\n            messageColor: \"#2512AD\",\n            messageStyle: {\n              value: \"'Fira Sans', sans-serif\",\n              label: \"Fira Sans\",\n            },\n            nameColor: \"#2512AD\",\n            nameStyle: { value: \"'Fira Sans', sans-serif\", label: \"Fira Sans\" },\n            titleColor: \"#2512AD\",\n            titleStyle: {\n              value: \"'Fira Sans', sans-serif\",\n              label: \"Fira Sans\",\n            },\n          }\n        : tempType == \"temp4\"\n        ? {\n            bgOpacity: 100,\n            bgColor: \"#9443b1b8\",\n            duration: \"20\",\n            isTitle: true,\n            messageColor: \"#2512AD\",\n            messageStyle: {\n              value: \"'Fira Sans', sans-serif\",\n              label: \"Fira Sans\",\n            },\n            nameColor: \"#2512AD\",\n            nameStyle: { value: \"'Fira Sans', sans-serif\", label: \"Fira Sans\" },\n            titleColor: \"#2512AD\",\n            titleStyle: {\n              value: \"'Fira Sans', sans-serif\",\n              label: \"Fira Sans\",\n            },\n          }\n        : tempType == \"temp5\"\n        ? {\n            bgOpacity: 100,\n            bgColor: \"#ce5e1fc2\",\n            duration: \"20\",\n            isTitle: true,\n            messageColor: \"#fff\",\n            messageStyle: {\n              value: \"'Fira Sans', sans-serif\",\n              label: \"Fira Sans\",\n            },\n            nameColor: \"#fff\",\n            nameStyle: { value: \"'Fira Sans', sans-serif\", label: \"Fira Sans\" },\n            titleColor: \"#fff\",\n            titleStyle: {\n              value: \"'Fira Sans', sans-serif\",\n              label: \"Fira Sans\",\n            },\n          }\n        : tempType == \"temp6\"\n        ? {\n            bgOpacity: 100,\n            bgColor: \"#bd2dbac2\",\n            duration: \"20\",\n            isTitle: true,\n            messageColor: \"#AA144C\",\n            messageStyle: {\n              value: \"'Fira Sans', sans-serif\",\n              label: \"Fira Sans\",\n            },\n            nameColor: \"#AA144C\",\n            nameStyle: { value: \"'Fira Sans', sans-serif\", label: \"Fira Sans\" },\n            titleColor: \"#AA144C\",\n            titleStyle: {\n              value: \"'Fira Sans', sans-serif\",\n              label: \"Fira Sans\",\n            },\n          }\n        : \"\"\n      : {\n          bgOpacity: 100,\n          bgStyle: { value: \"bree-sarif\", label: \"Bree Sarif\" },\n          duration: \"20\",\n          isTitle: true,\n          messageColor: \"#000000\",\n          messageStyle: { value: \"bree-sarif\", label: \"Bree Sarif\" },\n          nameColor: \"#000000\",\n          nameStyle: { value: \"bree-sarif\", label: \"Bree Sarif\" },\n          titleColor: \"#f20d0d\",\n          titleStyle: { value: \"permanent\", label: \"Permanent Maker\" },\n        }\n  );\n  const callMediaDetailApi = async (id) => {\n    const list = await getAllMediaDetail(id);\n    arrangMediaDetail(list);\n  };\n\n  const arrangMediaDetail = (list) => {\n    if (list) {\n      const prp = JSON.parse(list.appData);\n      console.log(prp, list);\n      setAppName(prp.url);\n      setAppTitle(prp.appTitle);\n      setSlides(prp.slides);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"slide\", slides);\n    if (id) {\n      //callMediaDetailApi(id)\n    }\n    setIsRefresh(false);\n  }, [editItem, slides, isRefresh]);\n\n  useEffect(() => {\n    if (id) {\n      callMediaDetailApi(id);\n    }\n  }, [id]);\n\n  const handleEdit = (e, item, index) => {\n    e.preventDefault();\n    item.id = index;\n    setEditItem(item);\n    setShowAddContent(true);\n  };\n\n  const handleCreateApp = async (e) => {\n    e.preventDefault();\n    console.log(\"slide\", slides);\n    if (appName == \"\" || appName == null) {\n      return toast.error(\"App Name is Required\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n    } else if (appTitle == \"\" || appTitle == null) {\n      return toast.error(\"App Title is Required\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n    } else if (slides.length == 0) {\n      return toast.error(\"Please add some content...\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      });\n    } else {\n      const dataString = {\n        url: appName,\n        appTitle,\n        slides,\n        tempType,\n        settingData,\n      };\n      console.log(dataString);\n\n      if (id) {\n        await updateApps({\n          name: appName,\n          appId: id,\n          data: JSON.stringify(dataString),\n        }).then((res) => {\n          console.log(\"response\", res);\n          if (res && res.data.message === \"Success\");\n          {\n            toast.success(\"App has been updated successfully !!!\", {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n              theme: \"light\",\n            });\n            history.push(`/create-template/` + id + `?type=` + tempType);\n            return;\n          }\n        });\n      } else {\n        await addApps({\n          name: appName,\n          type: \"people-apps\",\n          data: JSON.stringify(dataString),\n        }).then((res) => {\n          console.log(\"response\", res);\n          if (res && res.data.message === \"Success\");\n          {\n            toast.success(\"App has been created successfully !!!\", {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n              theme: \"light\",\n            });\n            history.push(\n              `/create-template/` + res.data.data._id + `?type=` + tempType\n            );\n          }\n        });\n      }\n    }\n  };\n\n  const addSlide = (e, i) => {\n    e.preventDefault();\n    setEditItem(null);\n    setSlideIndex(i);\n    setShowAddContent(true);\n  };\n\n  const handleImage = (e, item, index) => {\n    e.preventDefault();\n    item.id = index;\n    setEditImage(item);\n    setImageModalShow(true);\n  };\n\n  const handleDelete = (e, i) => {\n    e.preventDefault();\n    console.log(\"index\", i);\n    const newArra = slides.filter((item, index) => {\n      return index !== i;\n    });\n    setSlides(newArra);\n    setIsRefresh(true);\n  };\n\n  //save reference for dragItem and dragOverItem\n  const dragItem = React.useRef(null);\n  const dragOverItem = React.useRef(null);\n\n  //const handle drag sorting\n  const handleSort = () => {\n    //duplicate items\n    let _fruitItems = [...slides];\n\n    //remove and save the dragged item content\n    const draggedItemContent = _fruitItems.splice(dragItem.current, 1)[0];\n\n    //switch the position\n    _fruitItems.splice(dragOverItem.current, 0, draggedItemContent);\n\n    //reset the position ref\n    dragItem.current = null;\n    dragOverItem.current = null;\n\n    //update the actual array\n    setSlides(_fruitItems);\n  };\n  return (\n    <>\n      <TemplateAddContent\n        setShowUrlApp={() => setShowAddContent(false)}\n        show={showAddContent}\n        setSlides={setSlides}\n        slides={slides}\n        action=\"add\"\n        editItem={editItem}\n        setEditItem={setEditItem}\n        slideIndex={slideIndex}\n      />\n      <SelectMedia\n        imageModalShow={imageModalShow}\n        setImageModalShow={setImageModalShow}\n        selectedImage={selectedImage}\n        setSelectedImage={setSelectedImage}\n        setSlides={setSlides}\n        slides={slides}\n        action=\"edit\"\n        editImage={editImage}\n        setEditImage={setEditImage}\n      />\n      <EditTemplate\n        setShowUrlApp={() => setShowEditTemplate(false)}\n        show={showEditTemplate}\n        settingData={settingData}\n        setSettingData={setSettingData}\n      />\n      {showPreview && (\n        <PeopleSpacePreview\n          showPreview={showPreview}\n          setShowPreview={setShowPreview}\n          data={JSON.stringify({\n            slides,\n            appTitle,\n            appName,\n            tempType,\n            settingData,\n          })}\n        />\n      )}\n\n      <div className=\"custom-content-heading d-flex flex-wrap flex-row align-items-center justify-content-between mb-5\">\n        <h1 className=\"mb-0\">Template</h1>\n        <div className=\"d-flex align-items-center\">\n          {/* <Button\n            className=\"mr-2\"\n            variant=\"info add-screen-btn\"\n            onClick={(e) => {\n              e.preventDefault();\n              setShowEditTemplate(true);\n            }}\n            type=\"button\"\n          >\n            Setting\n          </Button> */}\n          <div className=\"people-setting mr-3\">\n            <img\n              src={settingicon}\n              // className=\"mr-2\"\n              onClick={(e) => {\n                e.preventDefault();\n                setShowEditTemplate(true);\n              }}\n              style={{ height: \"23px\", cursor: \"pointer\" }}\n              alt=\"icon\"\n            />\n          </div>\n\n          <Button\n            className=\"mr-2\"\n            variant=\"info add-screen-btn\"\n            onClick={(e) => {\n              e.preventDefault();\n              setShowPreview(true);\n            }}\n            type=\"button\"\n          >\n            Preview\n          </Button>\n          <Button\n            className=\"\"\n            variant=\"info add-screen-btn\"\n            type=\"button\"\n            onClick={(e) => handleCreateApp(e)}\n          >\n            {id ? \"Update\" : \"Save\"}\n          </Button>\n        </div>\n      </div>\n      <div className=\"d-flex align-items-center gap-2 template-app-name\">\n        <div className=\"d-flex align-items-center\">\n          <label className=\"mb-0 mr-3\">App Name</label>\n          <div>\n            <input\n              name=\"appName\"\n              id=\"appName\"\n              onChange={(e) => setAppName(e.target.value)}\n              value={appName}\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"App Name\"\n            />\n          </div>\n        </div>\n        <div className=\"d-flex align-items-center\">\n          <label className=\"mb-0 mr-3\">Title</label>\n          <input\n            name=\"appTitle\"\n            id=\"appTitle\"\n            onChange={(e) => setAppTitle(e.target.value)}\n            value={appTitle}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Title\"\n          />\n        </div>\n      </div>\n      {slides &&\n        slides.length > 0 &&\n        slides.map((item, i) => {\n          return (\n            <div\n              className=\"d-flex align-items-center mt-5 template-card\"\n              key={i}\n              draggable\n              onDragStart={(e) => (dragItem.current = i)}\n              onDragEnter={(e) => (dragOverItem.current = i)}\n              onDragEnd={handleSort}\n              onDragOver={(e) => e.preventDefault()}\n            >\n              <img\n                src={item.image ? BASE_URL + item.image : userimg}\n                alt=\"user-image\"\n                className=\"mr-3 template-person-image\"\n                onClick={(e) => handleImage(e, item, i)}\n                style={{ width: \"100px\" }}\n              />\n              <div className=\"w-100\">\n                <h3>{item.name}</h3>\n                <div className=\"d-flex align-items-center justify-content-between\">\n                  <p className=\"mb-0 pr-5\">{item.message}</p>\n                  <div className=\"d-flex align-items-center add-template\">\n                    <div\n                      className=\"mr-2\"\n                      //onClick={() => setShowEditTemplate(true)}\n                      onClick={(e) => handleEdit(e, item, i)}\n                    >\n                      <img src={edit} alt=\"edit\" height=\"15px\" />\n                    </div>\n                    <div className=\"mr-2\">\n                      <img\n                        src={deleteicon}\n                        alt=\"img\"\n                        height=\"15px\"\n                        onClick={(e) => handleDelete(e, i)}\n                      />\n                    </div>\n\n                    <div\n                      className=\"add-btn-template\"\n                      style={{ fontSize: \"20px\" }}\n                      onClick={(e) => addSlide(e, i)}\n                    >\n                      +\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      <div className=\"d-flex justify-content-center align-items-center h-100 template-add-content text-center\">\n        <div>\n          <p className=\"mb-1\">Click on the below button to get started</p>\n          <Button\n            className=\"btn-block\"\n            variant=\"info add-screen-btn\"\n            type=\"button\"\n            onClick={(e) => addSlide(e, slides.length)}\n          >\n            + Add Content\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/integrations/PeopleSpacePreview.jsx",["1359","1360","1361","1362","1363","1364"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Modal, Row, Col, Badge, Table } from \"react-bootstrap\";\nimport person from \"../../../img/Ellipse 154.png\";\nimport cancelIcon from \"../../../img/cancel-icon.png\";\nimport { useHistory } from \"react-router-dom\";\nimport { handlePeopleSpace } from \"../../../utils/UtilsService\";\n\nexport default function PeopleSpacePreview({\n  setShowPreview,\n  showPreview,\n  data,\n}) {\n  console.log(\"sdsdada\", showPreview, data);\n  const history = useHistory();\n  const [previewData, setPreviewData] = useState(null);\n  useEffect(() => {\n    setPreviewData(handlePeopleSpace(data));\n  }, [data]);\n  return (\n    <>\n      <Modal\n        className={`fade bd-example-modal-lg mt-4 custom-modal custom-modal-large`}\n        show={showPreview}\n        size=\"md\"\n      >\n        <Modal.Header>\n          <Modal.Title>Preview</Modal.Title>\n          <Button\n            variant=\"\"\n            className=\"close\"\n            onClick={() => setShowPreview(false)}\n          >\n            <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\n          </Button>\n        </Modal.Header>\n        <Modal.Body className=\"pb-4\">\n          {previewData ? previewData : \"No Data Found\"}\n          {/* <div className=\"row people-space text-center\">\n                    <div className=\"col-12 col-md-4\">\n                        <h2>Work Anniversery</h2>\n                        <div className=\"d-flex\">\n                            <div className=\"text-center\">\n                                <img src={person} alt=\"person\" />\n                                <h3>Jennifer Winget</h3>\n                                <p>\n                                We are proud to have someone like you We are proud to have\n                                someone like you.\n                                </p>\n                            </div>\n                            <div className=\"text-center\">\n                                <img src={person} alt=\"person\" />\n                                <h3>Jennifer Winget</h3>\n                                <p>\n                                We are proud to have someone like you We are proud to have\n                                someone like you.\n                                </p>\n                            </div>\n                            <div className=\"text-center\">\n                                <img src={person} alt=\"person\" />\n                                <h3>Jennifer Winget</h3>\n                                <p>\n                                We are proud to have someone like you We are proud to have\n                                someone like you.\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div> */}\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/EditTemplate.jsx",["1365","1366","1367","1368","1369"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport Switch from \"react-switch\";\nimport Select from \"react-select\";\nimport { useState } from \"react\";\nimport Slider from \"@mui/material/Slider\";\n\nconst EditTemplate = ({ setShowUrlApp, show, setSettingData, settingData }) => {\n  const fontOptions = [\n    { value: \"'Fira Sans', sans-serif\", label: \"Fira Sans\" },\n    { value: \"'Montserrat', sans-serif\", label: \"Montserrat\" },\n    { value: \"'Manrope', sans-serif\", label: \"Manrope\" },\n  ];\n\n  const [isTitle, setIsTitle] = useState(true);\n  const [titleColor, setTitleColor] = useState(settingData.titleColor);\n  const [nameColor, setNameColor] = useState(settingData.nameColor);\n  const [messageColor, setMessageColor] = useState(settingData.messageColor);\n  const [bgColor, setBgColor] = useState(settingData.bgColor);\n\n  const [titleStyle, setTitleStyle] = useState(settingData.titleStyle);\n  const [nameStyle, setNameStyle] = useState(settingData.nameStyle);\n  const [messageStyle, setMessageStyle] = useState(settingData.messageStyle);\n  const [bgStyle, setBgStyle] = useState(settingData.bgStyle);\n  const [duration, setDuration] = useState(settingData.duration);\n  const [bgOpacity, setBgOpacity] = useState(settingData.bgOpacity);\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    const setting = {\n      isTitle,\n      titleColor,\n      nameColor,\n      messageColor,\n      titleStyle,\n      nameStyle,\n      messageStyle,\n      bgColor,\n      duration,\n      bgOpacity,\n    };\n    console.log(\"Setting\", setting);\n    setSettingData(setting);\n    setShowUrlApp(false);\n  };\n\n  return (\n    <>\n      <Modal\n        className=\"fade bd-example-modal-lg mt-4 app-modal\"\n        show={show}\n        size=\"lg\"\n        centered\n      >\n        <Modal.Header className=\"border-0\">\n          <Modal.Title className=\"mr-auto app-modal-heading\">\n            Update Content\n          </Modal.Title>\n          <Button\n            variant=\"\"\n            className=\"close\"\n            onClick={() => setShowUrlApp(false)}\n          >\n            <img\n              className=\"cancel-icon\"\n              src={cancelIcon}\n              alt=\"cancel-icon\"\n              height=\"25px\"\n              width=\"25px\"\n            />\n          </Button>\n        </Modal.Header>\n        <Modal.Body className=\"pt-0\">\n          <form\n          // onSubmit={handleSubmit}\n          >\n            <div>\n              <div className=\" d-flex align-items-center justify-content-between mt-3\">\n                <div className=\"d-flex align-items-center justify-content-between\">\n                  <strong>\n                    <label className=\"mb-0 mr-3\">Title</label>\n                  </strong>\n                  <Switch\n                    onColor=\"#B3005E\"\n                    onChange={setIsTitle}\n                    checked={isTitle}\n                    name=\"isTitle\"\n                    id=\"isTitle\"\n                    className=\"react-switch\"\n                    required={true}\n                  />\n                </div>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <div>\n                    <strong>\n                      <label className=\"mb-0 mr-3\">Slide Duration</label>\n                    </strong>\n                  </div>\n                  <div>\n                    <input\n                      type=\"number\"\n                      className=\"  form-control \"\n                      placeholder=\" Name\"\n                      required\n                      name=\"duration\"\n                      id=\"duration\"\n                      value={duration}\n                      onChange={(e) => setDuration(e.target.value)}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex align-items-center justify-content-between mt-3\">\n                <div>\n                  <label className=\"mb-0\">Title Font</label>\n                </div>\n                <div className=\"d-flex align-items-center \">\n                  <div\n                    style={{\n                      marginLeft: \"10px\",\n                      marginRight: \"10px\",\n                      width: \"120px\",\n                    }}\n                  >\n                    <input\n                      type=\"color\"\n                      name=\"titleColor\"\n                      onChange={(e) => setTitleColor(e.target.value)}\n                      id=\"titleColor\"\n                      value={titleColor}\n                      className=\"  form-control \"\n                      required\n                    />\n                  </div>\n                  <div style={{ width: \"150px\" }}>\n                    <Select\n                      value={titleStyle}\n                      onChange={setTitleStyle}\n                      placeholder=\"English\"\n                      options={fontOptions}\n                      className=\"app-option\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <strong>\n                <label className=\"mt-4\">Body</label>\n              </strong>\n\n              <div className=\"d-flex align-items-center justify-content-between mt-3\">\n                <div>\n                  <label className=\"mb-0\">Name</label>\n                </div>\n                <div className=\"d-flex align-items-center \">\n                  <div\n                    style={{\n                      marginLeft: \"10px\",\n                      marginRight: \"10px\",\n                      width: \"120px\",\n                    }}\n                  >\n                    <input\n                      type=\"color\"\n                      name=\"nameColor\"\n                      id=\"nameColor\"\n                      onChange={(e) => setNameColor(e.target.value)}\n                      value={nameColor}\n                      className=\"  form-control \"\n                      required\n                    />\n                  </div>\n                  <div style={{ width: \"150px\" }}>\n                    <Select\n                      value={nameStyle}\n                      onChange={setNameStyle}\n                      placeholder=\"English\"\n                      options={fontOptions}\n                      className=\"app-option\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex align-items-center justify-content-between mt-3\">\n                <div>\n                  <label className=\"mb-0\">Message</label>\n                </div>\n                <div className=\"d-flex align-items-center \">\n                  <div\n                    style={{\n                      marginLeft: \"10px\",\n                      marginRight: \"10px\",\n                      width: \"120px\",\n                    }}\n                  >\n                    <input\n                      type=\"color\"\n                      name=\"messageColor\"\n                      id=\"messageColor\"\n                      onChange={(e) => setMessageColor(e.target.value)}\n                      value={messageColor}\n                      className=\"  form-control \"\n                      required\n                    />\n                  </div>\n                  <div style={{ width: \"150px\" }}>\n                    <Select\n                      value={messageStyle}\n                      onChange={setMessageStyle}\n                      placeholder=\"English\"\n                      options={fontOptions}\n                      className=\"app-option\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"d-flex align-items-center justify-content-between mt-3\">\n                <div>\n                  <label className=\"mb-0\">Background</label>\n                </div>\n                <div className=\"d-flex align-items-center \">\n                  <div style={{ width: \"120px\" }}>\n                    <input\n                      type=\"color\"\n                      name=\"bgColor\"\n                      id=\"bgColor\"\n                      onChange={(e) => setBgColor(e.target.value)}\n                      value={bgColor}\n                      className=\"  form-control \"\n                      required\n                    />\n                  </div>\n                  {/* <div\n                    style={{\n                      marginLeft: \"10px\",\n                      width: \"150px\",\n                    }}\n                  >\n                    <Select\n                      value={bgStyle}\n                      onChange={setBgStyle}\n                      placeholder=\"English\"\n                      options={fontOptions}\n                      className=\"app-option\"\n                    />\n                  </div> */}\n                </div>\n              </div>\n              <div className=\"d-flex align-items-center  justify-content-between mt-3\">\n                <div>\n                  <label className=\"mb-0\">Background Opacity</label>\n                </div>\n                <div\n                  style={{\n                    marginLeft: \"10px\",\n                    marginRight: \"10px\",\n                    width: \"150px\",\n                  }}\n                  className=\"d-flex align-items-center\"\n                >\n                  <Slider\n                    size=\"small\"\n                    value={bgOpacity}\n                    onChange={(e) => setBgOpacity(e.target.value)}\n                    aria-label=\"Small\"\n                    valueLabelDisplay=\"auto\"\n                  />\n                  <p className=\"mb-0 ml-3\">{bgOpacity}</p>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Modal.Body>\n        <Modal.Footer className=\"border-0 mb-2\">\n          <Button\n            variant=\"\"\n            type=\"button\"\n            className=\"btn btn-primary btn-block primary-btn\"\n            onClick={(e) => handleUpdate(e)}\n          >\n            Update\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default EditTemplate;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/QuoteModel.jsx",["1370","1371","1372","1373","1374","1375","1376","1377"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport icon from \"../../img/link-alt 1.svg\";\nimport { addApps, updateApps, getQuotes } from \"../../utils/api\";\nimport { handleQuoteApps } from \"../../utils/UtilsService\";\n\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { useState, useEffect } from \"react\";\nconst QuoteModel = ({ setShowUrlApp, show, mediaData, actionType }) => {\n  const [quoteData, setQuoteData] = useState(null);\n  const [quotePreviewData, setQuotePreviewData] = useState(null);\n  const colorSchemeOptions = [\n    { value: \"lightYellow\", label: \"Light Yellow\" },\n    { value: \"orange\", label: \"Orange\" },\n    { value: \"skyBlue\", label: \"Sky Blue\" },\n  ];\n  const fontOptions = [\n    { value: \"regular\", label: \"Regular\" },\n    { value: \"italic\", label: \"Italic\" },\n    { value: \"bold\", label: \"Bold\" },\n  ];\n  const [color, setColor] = useState({\n    value: \"lightYellow\",\n    label: \"Light Yellow\",\n  });\n  const [selectedFontOption, setSelectedFontOption] = useState({\n    value: \"regular\",\n    label: \"Regular\",\n  });\n  const [showRedirectApp, setShowUrlRedirectApp] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [duration, setDuration] = useState(10);\n  const [mediaId, setMediaId] = useState(null);\n  const [err, setErr] = useState(false);\n  const [errMessage, setErrorMessage] = useState(\"\");\n  const [preview, setPreview] = useState(false);\n  const [isRefresh, setIsRefresh] = useState(false);\n  const [orientationMode, setOrientation] = useState(\"landscape\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (mediaData) {\n      console.log(\"media\", mediaData, actionType);\n      const jsonString = JSON.parse(mediaData.appData);\n      setName(mediaData.title);\n      setMediaId(mediaData._id);\n      setSelectedFontOption(jsonString.fontStyle);\n      setColor(jsonString.color);\n      setOrientation(\n        jsonString.orientationMode ? jsonString.orientationMode : \"landscape\"\n      );\n    }\n  }, [mediaData]);\n\n  const handleCreateApp = async (e) => {\n    e.preventDefault();\n    setIsLoading(true)\n    setErr(false);\n    setErrorMessage(\"\");\n    if (name.trim() == \"\") {\n      setErr(true);\n      setErrorMessage(\"App Name is required\");\n      setIsLoading(false);\n      return\n    }\n      const dataString = {\n        url: name.trim(),\n        fontStyle: selectedFontOption,\n        color,\n        duration,\n        orientationMode,\n      };\n\n      if (actionType && actionType == \"edit\") {\n        await updateApps({\n          name:name.trim(),\n          appId: mediaId,\n          data: JSON.stringify(dataString),\n        });\n        setShowUrlApp(false);\n        setIsLoading(false);\n      } else {\n        await addApps({\n          name:name.trim(),\n          type: \"quote-apps\",\n          data: JSON.stringify(dataString),\n        });\n        handleClose(false);\n        setIsLoading(false);\n        setShowUrlRedirectApp(true);\n      }\n  };\n\n  const getQuoteData = async (data) => {\n    const quoteResult = await getQuotes(data);\n    setQuoteData(quoteResult);\n  };\n\n  const getQuoteDataZone1 = (data) => {\n    const prp = JSON.parse(data);\n\n    if (!quoteData) {\n      const prms = {\n        cat: \"famous\",\n        count: \"10\",\n      };\n      console.log(\"Hello Quote Calling\");\n      getQuoteData(prms);\n    }\n    return handleQuoteApps(data, quoteData);\n  };\n\n  const handlePreview = () => {\n    console.log(preview);\n    if (name) {\n      setQuotePreviewData(\n        getQuoteDataZone1(\n          JSON.stringify({\n            url: name,\n            fontStyle: selectedFontOption,\n            color,\n            orientationMode,\n            duration\n          })\n        )\n      );\n      setIsRefresh(true);\n      setPreview(true);\n    } else {\n      setPreview(false);\n    }\n  };\n\n  const handleClose = (val) => {\n    setQuoteData(null);\n    setQuotePreviewData(null);\n\n    setColor({\n      value: \"lightYellow\",\n      label: \"Light Yellow\",\n    });\n    setSelectedFontOption({\n      value: \"regular\",\n      label: \"Regular\",\n    });\n    setShowUrlRedirectApp(false);\n    setName(\"\");\n    setDuration(10);\n    setErr(false);\n    setErrorMessage(\"\");\n    setOrientation(\"landscape\");\n    setShowUrlApp(val)\n  }\n  return (\n    <>\n      <Modal\n        className=\"fade bd-example-modal-lg mt-4 app-modal\"\n        show={show}\n        size=\"xl\"\n        centered\n      >\n        <Modal.Header className=\"border-0\">\n          <Modal.Title className=\"mr-auto app-modal-heading\">\n            Quote App\n          </Modal.Title>\n          <Button\n            variant=\"\"\n            className=\"close\"\n            onClick={(e) => {e.preventDefault(); handleClose(false)}}\n          >\n            <img\n              className=\"cancel-icon\"\n              src={cancelIcon}\n              alt=\"cancel-icon\"\n              height=\"25px\"\n              width=\"25px\"\n            />\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          {err && errMessage !== \"\" ? (\n            <h6 className=\"alert alert-danger\">{errMessage}</h6>\n          ) : (\n            \"\"\n          )}\n          <form\n            // onSubmit={handleSubmit}\n            className=\"row\"\n          >\n            <div className=\"form-group col-6 mb-0  url-app-form\">\n              <label>Name</label>\n              <input\n                name=\"name\"\n                id=\"name\"\n                onChange={(e) => setName(e.target.value)}\n                type=\"text\"\n                className=\"form-control \"\n                placeholder=\"App Name\"\n                value={name}\n                required\n              />\n              <label className=\"mt-3\"> Slide Duration (in seconds)</label>\n              <input\n                id=\"duration\"\n                name=\"duration\"\n                onChange={(e) => setDuration(e.target.value)}\n                type=\"number\"\n                value={duration}\n                className=\"  form-control \"\n                placeholder=\"10\"\n                required\n              />\n              <label className=\"mt-3\">Color Scheme </label>\n              <Select\n                value={color}\n                onChange={setColor}\n                options={colorSchemeOptions}\n                className=\"app-option\"\n              />\n              <label className=\"mt-3\">Font </label>\n              <Select\n                value={selectedFontOption}\n                onChange={setSelectedFontOption}\n                options={fontOptions}\n                className=\"app-option\"\n              />\n              <Button onClick={handlePreview} className=\"mt-3\">\n                Preview\n              </Button>\n            </div>\n            <div className=\"col-6 \">\n              <div className=\"d-flex \">\n                {\" \"}\n                <div className=\"form-check mr-4\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"orientation\"\n                    value=\"landscape\"\n                    id=\"landscape\"\n                    checked={orientationMode === \"landscape\"}\n                    onChange={(e) => {\n                      setOrientation(e.target.value);\n                    }}\n                  />\n                  <label\n                    className=\"form-check-label mt-0\"\n                    htmlFor=\"aspectRation\"\n                  >\n                    Landscape\n                  </label>\n                </div>\n                <div className=\"form-check mr-4\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"orientation\"\n                    value=\"potrait\"\n                    id=\"potrait\"\n                    checked={orientationMode === \"potrait\"}\n                    onChange={(e) => {\n                      setOrientation(e.target.value);\n                    }}\n                    disabled\n                    style={{ cursor: \"not-allowed\" }}\n                    placeholder=\"Preview Not Available\"\n                  />\n                  <label\n                    className=\"form-check-label mt-0\"\n                    htmlFor=\"aspectRation\"\n                  >\n                    Portrait\n                  </label>\n                </div>\n                <div className=\"form-check\">\n                  <input\n                    placeholder=\"Preview Not Available\"\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"orientation\"\n                    value=\"footer\"\n                    id=\"footer\"\n                    checked={orientationMode === \"footer\"}\n                    onChange={(e) => {\n                      setOrientation(e.target.value);\n                    }}\n                    disabled\n                    style={{ cursor: \"not-allowed\" }}\n                  />\n                  <label\n                    className=\"form-check-label mt-0\"\n                    htmlFor=\"aspectRation\"\n                  >\n                    Footer\n                  </label>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-center align-items-center h-100 quote-app-form-icon\">\n                {preview && quotePreviewData ? quotePreviewData : \"Quotes\"}\n              </div>\n            </div>\n          </form>\n        </Modal.Body>\n        <Modal.Footer className=\"border-0 mb-2\">\n          <Row className=\"w-100 m-0\">\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n              <Button\n                className=\"cancel-btn w-100\"\n                variant=\"outline-light\"\n                onClick={(e) => {e.preventDefault(); handleClose(false)}}\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n              <Button\n                variant=\"\"\n                type=\"button\"\n                className=\"btn btn-primary btn-block primary-btn\"\n                onClick={(e) => handleCreateApp(e)}\n                disabled={isLoading}\n              >\n                {actionType && actionType == \"edit\" ? \"Update\" : \"Create\"} App\n              </Button>\n            </Col>\n          </Row>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        className=\"fade bd-example-modal-lg mt-4 app-modal\"\n        show={showRedirectApp}\n        size=\"xl\"\n        centered\n      >\n        <Modal.Header className=\"border-0\">\n          <Button\n            variant=\"\"\n            className=\"close\"\n            onClick={() => setShowUrlRedirectApp(false)}\n          >\n            <img\n              className=\"cancel-icon\"\n              src={cancelIcon}\n              alt=\"cancel-icon\"\n              height=\"25px\"\n              width=\"25px\"\n            />\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row\">\n            <div className=\"col-6 \">\n              <div className=\"d-flex justify-content-center align-items-center h-100 url-app-form-icon\">\n                <div className=\"text-center\">\n                  <img src={icon} width=\"60px\" height=\"60px\" className=\"mb-3\" />\n                  <h4>https://www.</h4>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6 \">\n              <div className=\"d-flex justify-content-center align-items-center\">\n                <div className=\"text-center\">\n                  <p>URL App created successfully</p>\n                  <p>\n                    URL App is saved in <u>Media</u>\n                  </p>\n                  <Link to={\"/layout\"}>Create Composition</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default QuoteModel;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/AllNewsAppModal.jsx",["1378","1379","1380","1381","1382","1383","1384","1385","1386","1387"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport icon from \"../../img/link-alt 1.svg\";\nimport { addApps, updateApps, getNews } from \"../../utils/api\";\nimport { handleNewsApps } from \"../../utils/UtilsService\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { useState, useEffect } from \"react\";\nimport Switch from \"react-switch\";\n\nconst AllNewsAppModal = ({ setShowUrlApp, show, actionType, mediaData }) => {\n  const [newsData, setNewsData] = useState(null);\n  const [newsPreviewData, setNewsPreviewData] = useState(null);\n  const topics = [\n    { value: \"world\", label: \"World\" },\n    { value: \"business\", label: \"Business\" },\n    { value: \"technology\", label: \"Technology\" },\n    { value: \"science\", label: \"Science\" },\n    { value: \"health\", label: \"Health\" },\n    { value: \"most-viewed\", label: \"Most Viewed\" },\n    { value: \"movies\", label: \"Movies\" },\n    { value: \"travel\", label: \"Travel\" },\n    { value: \"automobile\", label: \"Automobile\" },\n    { value: \"asia-pacific\", label: \"Asia Pacific\" },\n    { value: \"education\", label: \"Education\" },\n    { value: \"media\", label: \"Media\" },\n    { value: \"fashion\", label: \"Fashion and style\" },\n  ];\n  const themeOptions = [\n    { value: \"classic\", label: \"Classic View\" },\n    { value: \"white\", label: \"White Background Center\" },\n  ];\n  const [selectedTheame, setSelectedTheame] = useState({\n    value: \"classic\",\n    label: \"Classic View\",\n  });\n  const [topic, setTopic] = useState({ value: \"world\", label: \"World\" });\n  const [showRedirectApp, setShowUrlRedirectApp] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [duration, setDuration] = useState(10);\n  const [mediaId, setMediaId] = useState(null);\n  const [err, setErr] = useState(false);\n  const [errMessage, setErrorMessage] = useState(\"\");\n  const [preview, setPreview] = useState(false);\n  const [isRefresh, setIsRefresh] = useState(false);\n  const [orientationMode, setOrientation] = useState(\"landscape\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (mediaData) {\n      console.log(\"media\", mediaData, actionType);\n      const jsonString = JSON.parse(mediaData.appData);\n      setName(mediaData.title);\n      setMediaId(mediaData._id);\n      setDuration(jsonString.duration);\n      setSelectedTheame(jsonString.theame);\n      setTopic(jsonString.topic);\n      setOrientation(\n        jsonString.orientationMode ? jsonString.orientationMode : \"landscape\"\n      );\n    }\n  }, [mediaData]);\n\n  const handleCreateApp = async (e) => {\n    e.preventDefault();\n    setIsLoading(true)\n    setErr(false);\n    setErrorMessage(\"\");\n    if (name.trim() == \"\") {\n      setErr(true);\n      setErrorMessage(\"App Name is required\");\n      setIsLoading(false)\n      return\n    }\n\n      console.log(\"Hello\", err);\n      const dataString = {\n        url: name.trim(),\n        duration,\n        theame: selectedTheame,\n        topic,\n        orientationMode,\n      };\n\n      if (actionType && actionType == \"edit\") {\n        await updateApps({\n          name:name.trim(),\n          appId: mediaId,\n          data: JSON.stringify(dataString),\n        });\n        setShowUrlApp(false);\n        setIsLoading(false)\n      } else {\n        await addApps({\n          name:name.trim(),\n          type: \"news-apps\",\n          data: JSON.stringify(dataString),\n        });\n        handleClose(false);\n        setIsLoading(false)\n        setShowUrlRedirectApp(true);\n      }\n  };\n\n  const getNewsData = async (data) => {\n    const quoteResult = await getNews(data);\n    console.log(quoteResult);\n    setNewsData(quoteResult);\n  };\n\n  const getNewsDataZone1 = (data) => {\n    const prp = JSON.parse(data);\n\n    if (!newsData) {\n      getNewsData(topic);\n    }\n    console.log(data, newsData);\n    return handleNewsApps(data, newsData);\n  };\n\n  const handlePreview = async () => {\n    console.log(preview);\n    if (name) {\n      setNewsPreviewData(\n        getNewsDataZone1(\n          JSON.stringify({\n            url: name,\n            theame: selectedTheame,\n            topic,\n            orientationMode,\n          }),\n          newsData\n        )\n      );\n      setIsRefresh(true);\n      setPreview(true);\n    } else {\n      setPreview(false);\n    }\n  };\n\n  const handleClose = (val) => {\n    setNewsData(null);\n    setNewsPreviewData(null);\n    setSelectedTheame({\n      value: \"classic\",\n      label: \"Classic View\",\n    });\n    setTopic({ value: \"world\", label: \"World\" });\n    setShowUrlRedirectApp(false);\n    setName(\"\");\n    setDuration(10);\n    setErr(false);\n    setErrorMessage(\"\");\n    setOrientation(\"landscape\");\n    setShowUrlApp(val)\n  }\n\n  return (\n    <>\n      <Modal\n        className=\"fade bd-example-modal-lg mt-4 app-modal\"\n        show={show}\n        size=\"xl\"\n        centered\n      >\n        <Modal.Header className=\"border-0\">\n          <Modal.Title className=\"mr-auto app-modal-heading\">\n            All News App\n          </Modal.Title>\n          <Button\n            variant=\"\"\n            className=\"close\"\n            onClick={(e) => {e.preventDefault(); handleClose(false)}}\n          >\n            <img\n              className=\"cancel-icon\"\n              src={cancelIcon}\n              alt=\"cancel-icon\"\n              height=\"25px\"\n              width=\"25px\"\n            />\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <form\n            // onSubmit={handleSubmit}\n            className=\"row\"\n          >\n            <div className=\"form-group col-6 mb-0  url-app-form\">\n              <label>Name</label>\n              <input\n                name=\"name\"\n                id=\"name\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n                value={name}\n                type=\"text\"\n                className=\"form-control \"\n                placeholder=\"App Name\"\n                required\n              />\n\n              <label className=\"mt-3\">Topic </label>\n              <Select\n                value={topic}\n                onChange={setTopic}\n                options={topics}\n                className=\"app-option\"\n              />\n              <label className=\"mt-3\">Slide Duration (in seconds)</label>\n              <input\n                name=\"duration\"\n                id=\"duration\"\n                onChange={(e) => {\n                  setDuration(e.target.value);\n                }}\n                value={duration}\n                type=\"number\"\n                className=\"form-control \"\n                placeholder=\"10\"\n                required\n              />\n              <label className=\"mt-3\">Theme </label>\n              <Select\n                value={selectedTheame}\n                onChange={setSelectedTheame}\n                options={themeOptions}\n                className=\"app-option\"\n              />\n              {/* <div className=\"d-flex align-items-center mt-3\">\n                <label className=\"mb-0 mr-3\">Enable Animation?</label>\n                <Switch\n                  onColor=\"#B3005E\"\n                  // onChange={setDeviceTime}\n                  checked={true}\n                  name=\"deviceTime\"\n                  id=\"deviceTime\"\n                  className=\"react-switch\"\n                  required={true}\n                />\n              </div> */}\n              <Button onClick={handlePreview} className=\"mt-3\">\n                Preview\n              </Button>\n            </div>\n            <div className=\"col-6 \">\n              <div className=\"d-flex \">\n                {\" \"}\n                <div className=\"form-check mr-4\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"orientation\"\n                    value=\"landscape\"\n                    id=\"landscape\"\n                    checked={orientationMode === \"landscape\"}\n                    onChange={(e) => {\n                      setOrientation(e.target.value);\n                    }}\n                  />\n                  <label\n                    className=\"form-check-label mt-0\"\n                    htmlFor=\"aspectRation\"\n                  >\n                    Landscape\n                  </label>\n                </div>\n                <div className=\"form-check mr-4\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"orientation\"\n                    value=\"potrait\"\n                    id=\"potrait\"\n                    checked={orientationMode === \"potrait\"}\n                    onChange={(e) => {\n                      setOrientation(e.target.value);\n                    }}\n                    \n                    placeholder=\"Preview Not Available\"\n                  />\n                  <label\n                    className=\"form-check-label mt-0\"\n                    htmlFor=\"aspectRation\"\n                  >\n                    Portrait\n                  </label>\n                </div>\n                <div className=\"form-check\">\n                  <input\n                    placeholder=\"Preview Not Available\"\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"orientation\"\n                    value=\"footer\"\n                    id=\"footer\"\n                    checked={orientationMode === \"footer\"}\n                    onChange={(e) => {\n                      setOrientation(e.target.value);\n                    }}\n                    \n                  />\n                  <label\n                    className=\"form-check-label mt-0\"\n                    htmlFor=\"aspectRation\"\n                  >\n                    Footer\n                  </label>\n                </div>\n              </div>\n              <div className=\" h-100 quote-app-form-icon\">\n                <div className=\"text-center h-100 \">\n                  {newsPreviewData ? newsPreviewData : \"News Loading...\"}\n                </div>\n              </div>\n            </div>\n          </form>\n        </Modal.Body>\n        <Modal.Footer className=\"border-0 mb-2\">\n          <Row className=\"w-100 m-0\">\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n              <Button\n                className=\"cancel-btn w-100\"\n                variant=\"outline-light\"\n                onClick={(e) => {e.preventDefault(); handleClose(false)}}\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n              <Button\n                variant=\"\"\n                type=\"button\"\n                className=\"btn btn-primary btn-block primary-btn\"\n                onClick={(e) => handleCreateApp(e)}\n                disabled={isLoading}\n              >\n                {actionType && actionType == \"edit\" ? \"Update\" : \"Create\"} App\n              </Button>\n            </Col>\n          </Row>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        className=\"fade bd-example-modal-lg mt-4 app-modal\"\n        show={showRedirectApp}\n        size=\"xl\"\n        centered\n      >\n        <Modal.Header className=\"border-0\">\n          <Button\n            variant=\"\"\n            className=\"close\"\n            onClick={() => setShowUrlRedirectApp(false)}\n          >\n            <img\n              className=\"cancel-icon\"\n              src={cancelIcon}\n              alt=\"cancel-icon\"\n              height=\"25px\"\n              width=\"25px\"\n            />\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row\">\n            <div className=\"col-6 \">\n              <div className=\"d-flex justify-content-center align-items-center h-100 url-app-form-icon\">\n                <div className=\"text-center\">\n                  <img src={icon} width=\"60px\" height=\"60px\" className=\"mb-3\" />\n                  <h4>https://www.</h4>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6 \">\n              <div className=\"d-flex justify-content-center align-items-center\">\n                <div className=\"text-center\">\n                  <p>URL App created successfully</p>\n                  <p>\n                    URL App is saved in <u>Media</u>\n                  </p>\n                  <Link to={\"/layout\"}>Create Composition</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default AllNewsAppModal;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/GoogleSlideAppModal.jsx",["1388","1389","1390","1391","1392","1393","1394","1395","1396","1397","1398"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\nimport icon from \"../../img/link-alt 1.svg\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { updateApps, addApps } from \"../../utils/api\";\nimport {handleGoogleApps} from '../../utils/UtilsService';\nimport useDrivePicker from 'react-google-drive-picker'\n//import GooglePicker from 'react-google-picker';\nimport moment from 'moment'\n\nconst GoogleSlideAppModal = ({ setShowUrlApp, show, actionType, mediaData }) => {\n  const tokenDetailsString = localStorage.getItem('googleAuth');\n  const [authToken, setAuthToken] = useState(null)\n  const [name, setName] = useState(\"\");\n  const [openPicker, data,authResponse] = useDrivePicker(); \n  const [fileData, setFileData] = useState(null);\n  const [fileURL, setFileURL] = useState(null);\n  const [showRedirectApp, setShowUrlRedirectApp] = useState(false);\n  const [mediaId, setMediaId] = useState(null);\n  const [err, setErr] = useState(false);\n  const [errMessage, setErrorMessage] = useState(\"\");\n  const [preview, setPreview] = useState(false);\n  const [isRefresh, setIsRefresh] = useState(false);\n  const [orientationMode, setOrientation] = useState(\"landscape\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleOpenPicker = () => {\n    openPicker({\n      clientId: \"374562955931-mhli1rlb1kuhip30lhe58u0nht8bd2lg.apps.googleusercontent.com\",\n      developerKey: \"AIzaSyCMJk6QpvPCdibrNzpOQlFrqpDgf4-GHjw\",\n      //viewId: \"SPREADSHEETS\",\n      viewId: \"DOCS\",\n      token:authToken,\n      customScopes:['https://www.googleapis.com/auth/drive.readonly'],\n      showUploadView: true,\n      showUploadFolders: true,\n      supportDrives: true,\n      multiselect: true,\n      // customViews: customViewsArray, // custom view\n      callbackFunction: (data) => {\n\n        if (data.action === 'cancel') {\n          console.log('User clicked cancel/close button')\n        }\n        console.log(\"data\",data)\n        if (data.action === 'picked') {\n          setFileData(data.docs);\n          setFileURL(data.docs[0].embedUrl);\n        }\n      },\n    })\n  }\n\n  useEffect(() => {\n    console.log(\"tokenDetailsString\",tokenDetailsString);\n    if(tokenDetailsString){\n      const tokenDetails = JSON.parse(tokenDetailsString);\n      let expireDate = tokenDetails.expirationTime;\n      let todaysDate = moment().format();\n      console.log(\"todays\",expireDate,todaysDate);\n      if (todaysDate > expireDate) {\n        console.log(\"Hello1\");\n          setAuthToken(null)\n      }else{\n        console.log(\"Hello2\");\n        setAuthToken(tokenDetails.access_token);\n      }\n      \n    }\n    console.log(\"data\",data);\n    if(data && data.access_token){\n      console.log(\"Loging in\");\n      data.expirationTime = moment().add(3599,'seconds').format();\n      localStorage.setItem('googleAuth', JSON.stringify(data));\n    }\n    if (mediaData) {\n      console.log(\"media\", mediaData, actionType);\n      const jsonString = JSON.parse(mediaData.appData);\n      setName(mediaData.title);\n      setMediaId(mediaData._id);\n      setFileData(jsonString.fileData);\n      setFileURL(jsonString.fileURL);\n      setOrientation(\n        jsonString.orientationMode ? jsonString.orientationMode : \"landscape\"\n      );\n    }\n  }, [mediaData,tokenDetailsString]);\n\n  const handleCreateApp = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErr(false);\n    setErrorMessage(\"\");\n    if (name.trim() == \"\") {\n      setErr(true);\n      setErrorMessage(\"App Name is required\");\n      setIsLoading(false);\n      return\n    }\n\n    if(!fileURL){\n      setErr(true);\n      setErrorMessage(\"File URL is required\");\n      setIsLoading(false);\n      return\n    }\n      console.log(\"Hello\", err);\n      const dataString = {\n        url: name.trim(),\n        fileURL,\n        fileData,\n        orientationMode,\n      };\n\n      if (actionType && actionType == \"edit\") {\n        await updateApps({\n          name:name.trim(),\n          appId: mediaId,\n          data: JSON.stringify(dataString),\n        });\n        setShowUrlApp(false);\n        setIsLoading(false);\n      } else {\n        await addApps({\n          name:name.trim(),\n          type: \"google-apps\",\n          data: JSON.stringify(dataString),\n        });\n        handleClose(false);\n        setIsLoading(false);\n        setShowUrlRedirectApp(true);\n      }\n  };\n\n  const handleClose = (val) => {\n    setAuthToken(null)\n    setName(\"\");\n    setFileData(null);\n    setFileURL(null);\n    setErrorMessage(\"\");\n    setOrientation(\"landscape\");\n    setShowUrlApp(val)\n  }\n\n  useEffect(() => {\n    \n  },[data, fileURL, tokenDetailsString])\n\n  return (\n    <>\n      <Modal\n        className=\"fade bd-example-modal-lg mt-4 app-modal custModal\"\n        show={show}\n        size=\"xl\"\n        centered\n      >\n        <Modal.Header className=\"border-0\">\n          <Modal.Title className=\"mr-auto app-modal-heading\">\n            Google Slide\n          </Modal.Title>\n          <Button\n            variant=\"\"\n            className=\"close\"\n            onClick={(e) => {e.preventDefault(); handleClose(false)}}\n          >\n            <img\n              className=\"cancel-icon\"\n              src={cancelIcon}\n              alt=\"cancel-icon\"\n              height=\"25px\"\n              width=\"25px\"\n            />\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          {\n            err && errMessage ? <h6 className=\"alert alert-danger\">{errMessage}</h6> : \"\"\n          }\n          <form\n            // onSubmit={handleSubmit}\n            className=\"row\"\n          >\n            <div className=\"form-group col-6 mb-0  url-app-form google-slide-form\">\n              <label>Name</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                onChange={(e) => {setName(e.target.value)}}\n                className=\"  form-control \"\n                placeholder=\"App Name\"\n                required\n                value={name}\n              />\n\n              <p className=\"mb-0 model-info-h text-black mt-3\">\n                This app let’s you publish Google workspace files on screens.\n              </p>\n              <p>Use either of the options mentioned below.</p>\n\n              <div className=\" my-3\">\n                <p className=\"model-info-h\">Option 1</p>\n                <ul>\n                  <li>Open the Google file you wish to publish.</li>\n                  <li>\n                    Change the access from ‘Restricted’ to ‘Public’. Here’s how\n                  </li>\n                  <li>\n                    Paste the link below and click on “Create App” button.{\" \"}\n                  </li>\n                </ul>\n              </div>\n              <input\n                type=\"text\"\n                name=\"fileURL\"\n                id=\"fileURL\"\n                onChange={(e) => {setFileURL(e.target.value)}}\n                value={fileURL}\n                className=\"  form-control \"\n                placeholder=\"Paste embed link here\"\n                required\n              />\n              <div className=\" my-3\">\n                <p className=\"model-info-h\">Option 2</p>\n                <ul>\n                  <li>Open the Google file you wish to publish.</li>\n                  <li>\n                    Change the access from ‘Restricted’ to ‘Public’. Here’s how\n                  </li>\n                  <li>\n                    Paste the link below and click on “Create App” button.{\" \"}\n                  </li>\n                </ul>\n              </div>\n              <Button onClick={() => handleOpenPicker()}>{authToken ?\"Open Picker\" :\"Login With Google\"}</Button>\n              {/* <GooglePicker \n                clientId=\"374562955931-mhli1rlb1kuhip30lhe58u0nht8bd2lg.apps.googleusercontent.com\"\n                developerKey=\"AIzaSyCMJk6QpvPCdibrNzpOQlFrqpDgf4-GHjw\"\n                //scope={SCOPE}\n                onChange={data => console.log('on change:', data)}\n                onAuthFailed={data => console.log('on auth failed:', data)}\n                multiselect={true}\n                navHidden={true}\n                authImmediate={false}\n                viewId={'FOLDERS'}\n                createPicker={ (google, oauthToken) => {\n                  const googleViewId = google.picker.ViewId.FOLDERS;\n                  const docsView = new google.picker.DocsView(googleViewId)\n                      .setIncludeFolders(true)\n                      .setMimeTypes('application/vnd.google-apps.folder')\n                      .setSelectFolderEnabled(true);\n\n                  const picker = new window.google.picker.PickerBuilder()\n                      .addView(docsView)\n                      .setOAuthToken(oauthToken)\n                      .setDeveloperKey(\"AIzaSyCMJk6QpvPCdibrNzpOQlFrqpDgf4-GHjw\")\n                      .setCallback(()=>{\n                        console.log('Custom picker is ready!');\n                      });\n\n                  picker.build().setVisible(true);\n              }}\n          >\n              <Button>Login With Google</Button>\n              <div className=\"google\"></div>\n              </GooglePicker> */}\n            </div>\n            <div className=\"col-6 \">\n              <div className=\"d-flex \">\n                {\" \"}\n                <div className=\"form-check mr-4\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"orientation\"\n                    value=\"landscape\"\n                    id=\"landscape\"\n                    checked={orientationMode === \"landscape\"}\n                    onChange={(e) => {\n                      setOrientation(e.target.value);\n                    }}\n                  />\n                  <label\n                    className=\"form-check-label mt-0\"\n                    htmlFor=\"aspectRation\"\n                  >\n                    Landscape\n                  </label>\n                </div>\n                <div className=\"form-check mr-4\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"orientation\"\n                    value=\"potrait\"\n                    id=\"potrait\"\n                    checked={orientationMode === \"potrait\"}\n                    onChange={(e) => {\n                      setOrientation(e.target.value);\n                    }}\n                    disabled\n                    style={{ cursor: \"not-allowed\" }}\n                    placeholder=\"Preview Not Available\"\n                  />\n                  <label\n                    className=\"form-check-label mt-0\"\n                    htmlFor=\"aspectRation\"\n                  >\n                    Portrait\n                  </label>\n                </div>\n                <div className=\"form-check\">\n                  <input\n                    placeholder=\"Preview Not Available\"\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"orientation\"\n                    value=\"footer\"\n                    id=\"footer\"\n                    checked={orientationMode === \"footer\"}\n                    onChange={(e) => {\n                      setOrientation(e.target.value);\n                    }}\n                    disabled\n                    style={{ cursor: \"not-allowed\" }}\n                  />\n                  <label\n                    className=\"form-check-label mt-0\"\n                    htmlFor=\"aspectRation\"\n                  >\n                    Footer\n                  </label>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-center align-items-center h-100 google-slide-icon\">\n                {handleGoogleApps(JSON.stringify({\n                  fileURL,\n                  fileData,\n                  name\n                }))}\n              </div>\n            </div>\n          </form>\n        </Modal.Body>\n        <Modal.Footer className=\"border-0 mb-2\">\n          <Row className=\"w-100 m-0\">\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\n              <Button\n                className=\"cancel-btn w-100\"\n                variant=\"outline-light\"\n                onClick={(e) => {e.preventDefault(); handleClose(false)}}\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\n              <Button\n                variant=\"\"\n                type=\"button\"\n                className=\"btn btn-primary btn-block primary-btn\"\n                onClick={(e) => handleCreateApp(e)}\n                disabled={isLoading}\n              >\n                {actionType && actionType == \"edit\" ? \"Update\" : \"Create\"} App\n              </Button>\n            </Col>\n          </Row>\n        </Modal.Footer>\n      </Modal>\n      <Modal\n        className=\"fade bd-example-modal-lg mt-4 app-modal\"\n        show={showRedirectApp}\n        size=\"xl\"\n        centered\n      >\n        <Modal.Header className=\"border-0\">\n          <Button\n            variant=\"\"\n            className=\"close\"\n            onClick={() => setShowUrlRedirectApp(false)}\n          >\n            <img\n              className=\"cancel-icon\"\n              src={cancelIcon}\n              alt=\"cancel-icon\"\n              height=\"25px\"\n              width=\"25px\"\n            />\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row\">\n            <div className=\"col-6 \">\n              <div className=\"d-flex justify-content-center align-items-center h-100 url-app-form-icon\">\n                <div className=\"text-center\">\n                  <img src={icon} width=\"60px\" height=\"60px\" className=\"mb-3\" />\n                  <h4>https://www.</h4>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-6 \">\n              <div className=\"d-flex justify-content-center align-items-center\">\n                <div className=\"text-center\">\n                  <p>URL App created successfully</p>\n                  <p>\n                    URL App is saved in <u>Media</u>\n                  </p>\n                  <Link to={\"/layout\"}>Create Composition</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default GoogleSlideAppModal;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/layouts/nav/MfaPage.jsx",["1399","1400","1401","1402"],"import React, { useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { logout } from \"../../../store/actions/AuthActions\";\nimport { isAuthenticated } from \"../../../store/selectors/AuthSelectors\";\nimport Switch from \"react-switch\";\nimport { verification2FaAuth } from '../../../store/actions/AuthActions';\nimport { mfaEnablePost } from '../../../utils/api';\nimport base32Decode from 'base32-decode';\nimport base32Encode from 'base32-encode';\nimport util from 'util';\nimport crypto from 'crypto';\n\n\nfunction MfaPage(props){\n    const dispatch = useDispatch();\n    const [mfaEnabled, setMfaEnabled] = useState(props.auth.vendor.mfaEnabled ? true : false);\n    const handleMfa = async (e) => {\n        setMfaEnabled(!mfaEnabled);\n        //makeApi for MFA\n        //await mfaEnablePost(mfaEnabled);\n        const buffer = await util.promisify(crypto.randomBytes)(14);\n        const mfaSecret = props.auth.vendor.mfa ? props.auth.vendor.mfa : base32Encode(buffer, 'RFC4648', { padding: false })\n\n        const payload = {\n            mfa:mfaSecret,\n            mfaEnabled:!mfaEnabled\n        }\n        //console.log('pa',payload);\n        dispatch(verification2FaAuth(payload, props.history));\n    }\n    return(\n        <div className=\"align-items-center justify-content-between\">\n            <div className=\"d-flex align-items-center mb-4 ml-4\">\n                <label className=\"mb-0 mr-3 text-white\">MFA Enabled</label>\n                <Switch\n                onColor=\"#B3005E\"\n                onChange={(e) => {\n                    handleMfa(e);\n                }}\n                checked={mfaEnabled}\n                name=\"deviceTime\"\n                id=\"deviceTime\"\n                className=\"react-switch\"\n                />\n            </div>\n        </div>\n    )\n} \nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: isAuthenticated(state),\n        auth:state.auth.auth\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(MfaPage));\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/modals/TemplateAddContent.jsx",["1403","1404","1405","1406","1407"],"import React, {useEffect, useState} from 'react';\nimport { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\nimport cancelIcon from \"../../img/cancel-icon.png\";\n\n\nconst TemplateAddContent = ({ setShowUrlApp, show, setSlides, slides,editItem, setEditItem, slideIndex }) => {\n  console.log(\"editing\",editItem);\n  const [name, setName] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [err, setErr] = useState(false);\n  const [errMessage, setErrorMessage] = useState(\"\");\n  const [slideId, setSlideId] = useState(null);\n\n  useEffect(() => {\n    console.log(\"eeee\", editItem)\n    if(editItem && editItem !== null){\n      console.log(\"editIte\", editItem)\n      setSlideId(editItem.id);\n      setName(editItem.name);\n      setMessage(editItem.message);\n    }else{\n      setSlideId(null);\n      setName(\"\");\n      setMessage(\"\");\n    }\n  },[editItem, slideId])\n\n  const addSlides = (e) => {\n    e.preventDefault();\n    console.log(\"title\",name, message)\n    setErr(false);\n    setErrorMessage(\"\");\n    if (name == \"\" || name == null) {\n      setErr(true);\n      setErrorMessage(\"Name is required\");\n      return;\n    }\n    if (message == \"\" || message == null) {\n      setErr(true);\n      setErrorMessage(\"Message is required\");\n      return;\n    }\n    var newArr = slides;\n    if(editItem){\n      console.log(slideId)\n      newArr[slideId].name    = name;\n      newArr[slideId].message = message\n    }else{\n      newArr = [\n          ...slides.slice(0, slideIndex+1),\n          {name,message},\n          ...slides.slice(slideIndex+1)\n      ];\n    }\n    setSlides(newArr);\n    setEditItem(null)\n    setShowUrlApp(false);\n    setMessage(\"\");\n    setName(\"\");\n  }\n  return (\n    <>\n      <Modal\n        className=\"fade bd-example-modal-lg mt-4 app-modal\"\n        show={show}\n        size=\"md\"\n        centered\n      >\n        <Modal.Header className=\"border-0\">\n          <Modal.Title className=\"mr-auto app-modal-heading\">\n            Add Content\n          </Modal.Title>\n          <Button\n            variant=\"\"\n            className=\"close\"\n            onClick={() => setShowUrlApp(false)}\n          >\n            <img\n              className=\"cancel-icon\"\n              src={cancelIcon}\n              alt=\"cancel-icon\"\n              height=\"25px\"\n              width=\"25px\"\n            />\n          </Button>\n        </Modal.Header>\n        <Modal.Body className=\"pt-0\">\n          <p>Enter content you need to add in your template</p>\n          {\n            err && errMessage ? <h6 className=\"alert alert-danger\">{errMessage}</h6> : ''\n          }\n          <form\n          // onSubmit={handleSubmit}\n          >\n            <div>\n              <strong>\n                <label>Name</label>\n              </strong>\n\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                id=\"name\"\n                onChange={(e) => setName(e.target.value)}\n                className=\"  form-control \"\n                placeholder=\"Give a name\"\n                required\n              />\n              <strong>\n                <label className=\"mt-3\">Message</label>\n              </strong>\n\n              <textarea\n                type=\"text\"\n                name=\"message\"\n                id=\"message\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                className=\"form-control\"\n                rows={5}\n                placeholder=\"Eg. Hope this year be full of colors\"\n              ></textarea>\n            </div>\n          </form>\n        </Modal.Body>\n        <Modal.Footer className=\"border-0 mb-2\">\n          <Button\n            variant=\"\"\n            type=\"button\"\n            className=\"btn btn-primary btn-block primary-btn\"\n            onClick={(e) => {addSlides(e)}}\n          >\n            Add Content\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default TemplateAddContent;\n","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/DefComplist.jsx",["1408","1409","1410","1411","1412","1413","1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439","1440","1441","1442"],"import React, { useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport scheduleIcon from \"../../../img/schedule-icon.png\";\nimport quickPlayIcon from \"../../../img/quickplay-icon.png\";\nimport defaultComparisonIcon from \"../../../img/comparison-icon.png\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Table, Dropdown } from \"react-bootstrap\";\nimport {\n    deleteSchedule,\n    getAllSchedule,\n    getQuickPlay,\n    deleteQuickPlay,\n    getDefaultComposition,\n    getAllScreens,\n    getAllComposition,\n    setDefaultComposition,\n    BASE_URL\n  } from \"../../../utils/api\";\n  import { useEffect } from \"react\";\n  import {\n    getDatetimeIn12Hours,\n    humanReadableFormattedDateString,\n  } from \"../../../utils/UtilsService\";\n  import moment from \"moment\";\n  import menuIcon from \"../../../img/menu-icon.png\";\n  import deleteIcon from \"../../../img/delete-icon.png\";\n  import edit from \"../../../img/edit-composition.png\";\n  import { useHistory } from \"react-router-dom\";\n  import TableLoader from \"../../components/TableLoader\";\n  import LockScreen from \"../../pages/LockScreen\";\n  import SelectScreenModal from '../../modals/SelectScreenModal';\n\n    import AddNewTagModal from \"../../modals/AddNewTagModal\";\n    import downArrow from \"../../../img/down-arrow.png\";\n    import listIcon from \"../../../img/list-icon.png\";\n\nimport {\n    DataGrid,\n    GridToolbarExport,\n    gridPageCountSelector,\n    gridPageSelector,\n    useGridApiContext,\n    useGridSelector,\n  } from \"@mui/x-data-grid\";\n  import Pagination from \"@mui/material/Pagination\";\n  import LinearProgress from \"@mui/material/LinearProgress\";\n  import CustomNoRowsOverlay from \"../CustomNoRowsOverlay\";\n  import QuickSearchToolbar from \"../QuickSearchToolbar\";\n  import { GridToolbarContainer } from \"@mui/x-data-grid\";\n  import FilterModal from \"../../modals/FilterModal\";\n  \n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer>\n        <QuickSearchToolbar />\n      </GridToolbarContainer>\n    );\n  }\n  \n  function CustomPagination() {\n    const apiRef = useGridApiContext();\n    const page = useGridSelector(apiRef, gridPageSelector);\n    const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  \n    return (\n      <Pagination\n        color=\"primary\"\n        count={pageCount}\n        page={page + 1}\n        onChange={(event, value) => apiRef.current.setPage(value - 1)}\n      />\n    );\n  }\nconst DefComplist = ({history,permission, setIsRefresh, data,setShowPublishPopUp, setSelectedSchdule, handleDeleteSchedule}) => {\n\n    const [filterData, setFilterData] = useState([])\n    const [showNewTagModal, setNewTagModal] = useState(false);\n    const [selectedScreen, setSelectedScreen] = useState(\"\");\n    const [showFilterModal, setFilterModal] = useState(false);\n\n\n\n    const rows = [];\n    if (data && data.length > 0) {\n      data.forEach((item) => {\n        rows.push({\n          id: item._id,\n          name: item._id,\n          createdAt: humanReadableFormattedDateString(item.createdAt),\n          screens:item.screens.length,\n          startDate:item.createdAt,\n          endDate:item.createdAt,\n          tags:item,\n          action: item,\n        });\n      });\n    }\n  \n    // const renderAction = (params) => {\n    //   const {value} = params;\n    //   return (\n    //     <Dropdown \n    //     className=\"dropdown-toggle-menu\"\n    //     >\n    //     <Dropdown.Toggle variant=\"\" className=\"p-0  mb-2\">\n    //         <span className=\"table-menu-icon\">\n    //         <img\n    //             className=\"menu-img img-fluid\"\n    //             src={menuIcon}\n    //             alt=\"menu-icon\"\n    //         />\n    //         </span>\n    //     </Dropdown.Toggle>\n    //     <Dropdown.Menu>\n    //         <Dropdown.Item\n    //         href={`/design-month-schedule/${value._id}`}\n    //         disabled={permission && !permission.permission.SCHEDULE.edit}\n    //         className=\"dropdown-list-item\"\n    //         >\n    //         <div className=\"d-flex\">\n    //             <div className=\"dropdown-list-icon\">\n    //             <img\n    //                 className=\"dropdown-list-img img-fluid\"\n    //                 src={edit}\n    //                 alt=\"menu-icon\"\n    //             />\n    //             </div>\n    //             <div className=\"dropdown-menu-list\">\n    //             <span className=\"menu-heading\">Edit</span>\n    //             <span className=\"menu-description\">\n    //                 Get to know more about screen info\n    //             </span>\n    //             </div>\n    //         </div>\n    //         </Dropdown.Item>\n    //         <Dropdown.Item\n    //         onClick={() => {\n    //             setShowPublishPopUp(true);\n    //             setSelectedSchdule(value)\n    //             //setSelectedScreen(screen._id);\n    //         }}\n    //         //disabled={permission && !permission.permission.SCHEDULE.edit}\n    //         className=\"dropdown-list-item\"\n    //         >\n    //         <div className=\"d-flex\">\n    //             <div className=\"dropdown-list-icon\">\n    //             <img\n    //                 className=\"dropdown-list-img img-fluid\"\n    //                 src={edit}\n    //                 alt=\"menu-icon\"\n    //             />\n    //             </div>\n    //             <div className=\"dropdown-menu-list\">\n    //             <span className=\"menu-heading\">Assign Screen</span>\n    //             <span className=\"menu-description\">\n    //                 Get to know more about screen info\n    //             </span>\n    //             </div>\n    //         </div>\n    //         </Dropdown.Item>\n    //         <Dropdown.Item\n    //         href=\"#\"\n    //         className=\"dropdown-list-item\"\n    //         onClick={() => {\n    //             handleDeleteSchedule(value._id);\n    //             console.log(\"oooo\");\n    //         }}\n    //         disabled={permission && !permission.permission.SCHEDULE.delete}\n    //         >\n    //         <div className=\"d-flex\">\n    //             <div className=\"dropdown-list-icon\">\n    //             <img\n    //                 className=\"dropdown-list-img img-fluid\"\n    //                 src={deleteIcon}\n    //                 alt=\"menu-icon\"\n    //             />\n    //             </div>\n    //             <div className=\"dropdown-menu-list\">\n    //             <span className=\"menu-heading\">Delete</span>\n    //             <span className=\"menu-description\">\n    //                 Get to know more about screen info\n    //             </span>\n    //             </div>\n    //         </div>\n    //         </Dropdown.Item>\n    //         <Dropdown.Item\n    //         href=\"#\"\n    //         className=\"dropdown-list-item\"\n    //         disabled={permission && !permission.permission.SCHEDULE.view}\n    //         onClick={() => {\n    //             history.push(`/push/view/${value._id}`);\n    //         }}\n    //         >\n    //         <div className=\"d-flex\">\n    //             <div className=\"dropdown-list-icon\">\n    //             <img\n    //                 className=\"dropdown-list-img img-fluid\"\n    //                 src={deleteIcon}\n    //                 alt=\"menu-icon\"\n    //             />\n    //             </div>\n    //             <div className=\"dropdown-menu-list\">\n    //             <span className=\"menu-heading\">\n    //                 View Schedule\n    //             </span>\n    //             <span className=\"menu-description\">\n    //                 Get to know more about screen info\n    //             </span>\n    //             </div>\n    //         </div>\n    //         </Dropdown.Item>\n    //     </Dropdown.Menu>\n    //     </Dropdown>\n    //   )\n    // }\n\n    const tagsRender = (params) => {\n      const { value } = params;\n      return (\n        <div>\n              <span className=\"tag-container\">\n                {value.tags.map((tag) => {\n                  return (\n                    <span className=\"my-phone-tag text-truncate ml-1 mr-1 mb-1\">\n                      {tag}\n                    </span>\n                  );\n                })}\n              </span>\n              <span\n                className=\"down-arrow\"\n                onClick={(e) => {handleTags(e, value)}}\n              >\n                <img\n                  className=\"down-arrow-img img-fluid\"\n                  src={downArrow}\n                  alt=\"arrow\"\n                />\n              </span>\n        </div>\n      );\n    };\n\n    const renderDate = (params) => {\n        const {value} = params;\n        return (\n            <span className=\"td-content\" style={{marginTop:\"20px\", marginBottom:\"20px\"}}>\n                <strong>\n                    {humanReadableFormattedDateString(\n                    value\n                    )}\n                </strong>\n                {\" \"}\n                <span>\n                    {getDatetimeIn12Hours(value)}\n                </span>\n            </span>\n        )\n    }\n    \n    const renderEndDate = (params) => {\n        const { value } = params;\n        return (\n        <span className=\"td-content\">\n            <strong>\n              {humanReadableFormattedDateString(value)}\n            </strong>\n            {\" \"}\n            <span>\n              {moment(value)\n                .add(10, \"minutes\")\n                .format(\"hh:mm A\")}\n            </span>\n        </span>\n        )\n    }\n  \n    const columns = [\n      { field: \"name\", headerName: \"Name\", flex: 1 },\n      {\n        field: \"createdAt\",\n        headerName: \"Crated At\",\n        flex: 1,\n        renderCell:renderDate,\n        disableExport: true,\n      },\n      {\n        field: \"screens\",\n        headerName: \"Assigned Screens\",\n        flex: 1,\n      },\n      {\n        field: \"startDate\",\n        headerName: \"Start Date\",\n        renderCell:renderDate,\n        flex: 1,\n      },\n      {\n        field: \"endDate\",\n        headerName: \"End Date\",\n        renderCell:renderEndDate,\n        flex: 1,\n      },\n    //   {\n    //     field: \"tags\",\n    //     headerName: \"Tags\",\n    //     renderCell:tagsRender,\n    //     flex: 1,\n    //   },\n    //   {\n    //     field: \"action\",\n    //     headerName: \"More\",\n    //     flex: 1,\n    //     renderCell: renderAction,\n    //     disableExport: true,\n    //   },\n    ];\n  \n    const handleTags = ( e, item ) => {\n      e.preventDefault();\n      setSelectedScreen(item);\n      setNewTagModal(!showNewTagModal);\n    }\n    return (\n        <>\n        {/* <FilterModal\n          showFilterModal={showFilterModal}\n          setFilterModal={setFilterModal}\n          setFilterData={setFilterData}\n          setIsRefresh={setIsRefresh}\n          type={[\"tags\"]}\n          selectedType={'composition'}\n        />\n        <Button\n          className=\"ml-2 icon-btn\"\n          variant=\"primary\"\n          onClick={() => {\n            setFilterModal(true);\n          }}\n        >\n          <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\n        </Button> */}\n        <DataGrid\n            getRowHeight={() => 'auto'}\n            components={{\n            NoRowsOverlay: CustomNoRowsOverlay,\n            Toolbar: CustomToolbar,\n            LoadingOverlay: LinearProgress,\n            Pagination: CustomPagination,\n            }}\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            rowsPerPageOptions={[5]}\n            disableSelectionOnClick\n            experimentalFeatures={{ newEditingApi: true }}\n            pagination\n            zIndex={-1}\n        />\n      {showNewTagModal && (\n        <AddNewTagModal\n          setNewTagModal={setNewTagModal}\n          allScreens={data}\n          selected={selectedScreen}\n          setIsRefresh={setIsRefresh}\n          type={\"schedule\"}\n        />\n      )}\n        </>\n    )\n}\nexport default DefComplist","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/QuickPlayList.jsx",["1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1470","1471","1472","1473","1474","1475"],"import React, { useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport scheduleIcon from \"../../../img/schedule-icon.png\";\nimport quickPlayIcon from \"../../../img/quickplay-icon.png\";\nimport defaultComparisonIcon from \"../../../img/comparison-icon.png\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Table, Dropdown } from \"react-bootstrap\";\nimport {\n    deleteSchedule,\n    getAllSchedule,\n    getQuickPlay,\n    deleteQuickPlay,\n    getDefaultComposition,\n    getAllScreens,\n    getAllComposition,\n    setDefaultComposition,\n    BASE_URL\n  } from \"../../../utils/api\";\n  import { useEffect } from \"react\";\n  import {\n    getDatetimeIn12Hours,\n    humanReadableFormattedDateString,\n  } from \"../../../utils/UtilsService\";\n  import moment from \"moment\";\n  import menuIcon from \"../../../img/menu-icon.png\";\n  import deleteIcon from \"../../../img/delete-icon.png\";\n  import edit from \"../../../img/edit-composition.png\";\n  import { useHistory } from \"react-router-dom\";\n  import TableLoader from \"../../components/TableLoader\";\n  import LockScreen from \"../../pages/LockScreen\";\n  import SelectScreenModal from '../../modals/SelectScreenModal';\n\n    import AddNewTagModal from \"../../modals/AddNewTagModal\";\n    import downArrow from \"../../../img/down-arrow.png\";\n    import listIcon from \"../../../img/list-icon.png\";\n\nimport {\n    DataGrid,\n    GridToolbarExport,\n    gridPageCountSelector,\n    gridPageSelector,\n    useGridApiContext,\n    useGridSelector,\n  } from \"@mui/x-data-grid\";\n  import Pagination from \"@mui/material/Pagination\";\n  import LinearProgress from \"@mui/material/LinearProgress\";\n  import CustomNoRowsOverlay from \"../CustomNoRowsOverlay\";\n  import QuickSearchToolbar from \"../QuickSearchToolbar\";\n  import { GridToolbarContainer } from \"@mui/x-data-grid\";\n  import FilterModal from \"../../modals/FilterModal\";\n  \n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer>\n        <QuickSearchToolbar />\n      </GridToolbarContainer>\n    );\n  }\n  \n  function CustomPagination() {\n    const apiRef = useGridApiContext();\n    const page = useGridSelector(apiRef, gridPageSelector);\n    const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  \n    return (\n      <Pagination\n        color=\"primary\"\n        count={pageCount}\n        page={page + 1}\n        onChange={(event, value) => apiRef.current.setPage(value - 1)}\n      />\n    );\n  }\nconst QuickPlayList = ({history,permission, setIsRefresh, data,handleDeleteQuickPlay}) => {\n\n    const [filterData, setFilterData] = useState([])\n    const [showNewTagModal, setNewTagModal] = useState(false);\n    const [selectedScreen, setSelectedScreen] = useState(\"\");\n    const [showFilterModal, setFilterModal] = useState(false);\n\n\n    const rows = [];\n    if (data && data.length > 0) {\n      data.forEach((item) => {\n        rows.push({\n          id: item._id,\n          name: item.name,\n          createdAt: humanReadableFormattedDateString(item.createdAt),\n          screens:item.screens.length,\n          startDate:item.startTime,\n          endDate:item.endTime,\n          tags:item,\n          action: item,\n        });\n      });\n    }\n  \n    const renderAction = (params) => {\n      const {value} = params;\n      return (\n        <Dropdown className=\"dropdown-toggle-menu\">\n            <Dropdown.Toggle variant=\"\" className=\"p-0  mb-2\">\n            <span className=\"table-menu-icon\">\n                <img\n                className=\"menu-img img-fluid\"\n                src={menuIcon}\n                alt=\"menu-icon\"\n                />\n            </span>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n            <Dropdown.Item\n                href=\"#\"\n                className=\"dropdown-list-item\"\n                onClick={(e) => {\n                    handleDeleteQuickPlay(e, value._id);\n                }}\n                disabled={permission && !permission.permission.QUICKPLAY.delete}\n            >\n                <div className=\"d-flex\">\n                <div className=\"dropdown-list-icon\">\n                    <img\n                    className=\"dropdown-list-img img-fluid\"\n                    src={deleteIcon}\n                    alt=\"menu-icon\"\n                    />\n                </div>\n                <div className=\"dropdown-menu-list\">\n                    <span className=\"menu-heading\">Delete</span>\n                    <span className=\"menu-description\">\n                    Get to know more about screen info\n                    </span>\n                </div>\n                </div>\n            </Dropdown.Item>\n            </Dropdown.Menu>\n        </Dropdown>\n      )\n    }\n    const tagsRender = (params) => {\n      const { value } = params;\n      return (\n        <div>\n              <span className=\"tag-container\">\n                {value.tags.map((tag) => {\n                  return (\n                    <span className=\"my-phone-tag text-truncate ml-1 mr-1 mb-1\">\n                      {tag}\n                    </span>\n                  );\n                })}\n              </span>\n              <span\n                className=\"down-arrow\"\n                onClick={(e) => {handleTags(e, value)}}\n              >\n                <img\n                  className=\"down-arrow-img img-fluid\"\n                  src={downArrow}\n                  alt=\"arrow\"\n                />\n              </span>\n        </div>\n      );\n    };\n\n    const renderDate = (params) => {\n        const {value} = params;\n        return (\n            <span className=\"td-content\">\n                <strong>\n                    {humanReadableFormattedDateString(\n                    value\n                    )}\n                </strong>\n                {\" \"}\n                <span>\n                    {getDatetimeIn12Hours(value)}\n                </span>\n            </span>\n        )\n    }\n  \n    const columns = [\n      { field: \"name\", headerName: \"Name\", flex: 1 },\n      {\n        field: \"createdAt\",\n        headerName: \"Crated At\",\n        flex: 1,\n        renderCell:renderDate,\n        disableExport: true,\n      },\n      {\n        field: \"screens\",\n        headerName: \"Assigned Screens\",\n        flex: 1,\n      },\n      {\n        field: \"startDate\",\n        headerName: \"Start Date\",\n        renderCell:renderDate,\n        flex: 1,\n      },\n      {\n        field: \"endDate\",\n        headerName: \"End Date\",\n        renderCell:renderDate,\n        flex: 1,\n      },\n    //   {\n    //     field: \"tags\",\n    //     headerName: \"Tags\",\n    //     renderCell:tagsRender,\n    //     flex: 1,\n    //   },\n      {\n        field: \"action\",\n        headerName: \"More\",\n        flex: 1,\n        renderCell: renderAction,\n        disableExport: true,\n      },\n    ];\n  \n    const handleTags = ( e, item ) => {\n      e.preventDefault();\n      setSelectedScreen(item);\n      setNewTagModal(!showNewTagModal);\n    }\n    return (\n        <>\n        {/* <FilterModal\n          showFilterModal={showFilterModal}\n          setFilterModal={setFilterModal}\n          setFilterData={setFilterData}\n          setIsRefresh={setIsRefresh}\n          type={[\"tags\"]}\n          selectedType={'composition'}\n        />\n        <Button\n          className=\"ml-2 icon-btn\"\n          variant=\"primary\"\n          onClick={() => {\n            setFilterModal(true);\n          }}\n        >\n          <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\n        </Button> */}\n        <DataGrid\n            getRowHeight={() => 'auto'}\n            components={{\n            NoRowsOverlay: CustomNoRowsOverlay,\n            Toolbar: CustomToolbar,\n            LoadingOverlay: LinearProgress,\n            Pagination: CustomPagination,\n            }}\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            rowsPerPageOptions={[5]}\n            disableSelectionOnClick\n            experimentalFeatures={{ newEditingApi: true }}\n            pagination\n            zIndex={-1}\n        />\n      {showNewTagModal && (\n        <AddNewTagModal\n          setNewTagModal={setNewTagModal}\n          allScreens={data}\n          selected={selectedScreen}\n          setIsRefresh={setIsRefresh}\n          type={\"schedule\"}\n        />\n      )}\n        </>\n    )\n}\nexport default QuickPlayList","/Users/mac/Desktop/trendy/web-copy/trendy-content-display-frontend/src/jsx/components/push/ScheduleList.jsx",["1476","1477","1478","1479","1480","1481","1482","1483","1484","1485","1486","1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501"],"import React, { useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport scheduleIcon from \"../../../img/schedule-icon.png\";\nimport quickPlayIcon from \"../../../img/quickplay-icon.png\";\nimport defaultComparisonIcon from \"../../../img/comparison-icon.png\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Table, Dropdown } from \"react-bootstrap\";\nimport {\n  deleteSchedule,\n  getAllSchedule,\n  getQuickPlay,\n  deleteQuickPlay,\n  getDefaultComposition,\n  getAllScreens,\n  getAllComposition,\n  setDefaultComposition,\n  BASE_URL,\n} from \"../../../utils/api\";\nimport { useEffect } from \"react\";\nimport {\n  getDatetimeIn12Hours,\n  humanReadableFormattedDateString,\n} from \"../../../utils/UtilsService\";\nimport moment from \"moment\";\nimport menuIcon from \"../../../img/menu-icon.png\";\nimport deleteIcon from \"../../../img/delete-icon.png\";\nimport edit from \"../../../img/edit-composition.png\";\nimport { useHistory } from \"react-router-dom\";\nimport TableLoader from \"../../components/TableLoader\";\nimport LockScreen from \"../../pages/LockScreen\";\nimport SelectScreenModal from \"../../modals/SelectScreenModal\";\n\nimport AddNewTagModal from \"../../modals/AddNewTagModal\";\nimport downArrow from \"../../../img/down-arrow.png\";\nimport listIcon from \"../../../img/list-icon.png\";\n\nimport {\n  DataGrid,\n  GridToolbarExport,\n  gridPageCountSelector,\n  gridPageSelector,\n  useGridApiContext,\n  useGridSelector,\n} from \"@mui/x-data-grid\";\nimport Pagination from \"@mui/material/Pagination\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport CustomNoRowsOverlay from \"../CustomNoRowsOverlay\";\nimport QuickSearchToolbar from \"../QuickSearchToolbar\";\nimport { GridToolbarContainer } from \"@mui/x-data-grid\";\nimport FilterModal from \"../../modals/FilterModal\";\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <QuickSearchToolbar />\n    </GridToolbarContainer>\n  );\n}\n\nfunction CustomPagination() {\n  const apiRef = useGridApiContext();\n  const page = useGridSelector(apiRef, gridPageSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <Pagination\n      color=\"primary\"\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    />\n  );\n}\nconst ScheduleList = ({\n  history,\n  permission,\n  setIsRefresh,\n  data,\n  setShowPublishPopUp,\n  setSelectedSchdule,\n  setFilterData,\n  handleDeleteSchedule,\n}) => {\n  const [showNewTagModal, setNewTagModal] = useState(false);\n  const [selectedScreen, setSelectedScreen] = useState(\"\");\n  const [showFilterModal, setFilterModal] = useState(false);\n  const findEndTime = (value) => {\n    if (!value || value === undefined) {\n      return \"time not find\";\n    }\n    if (value !== undefined) {\n      return value?.timings[value.timings.length - 1]?.endTime;\n    }\n  };\n\n  const convertTimestampTo12HourFormat = (timestamp) => {\n    if (!timestamp) {\n      return \"Invalid timestamp\";\n    }\n    if (timestamp === \"time not find\") {\n      return \"Invalid timestamp\";\n    }\n\n    const timeParts = timestamp.split(\"T\")[1].split(\".\")[0].split(\":\");\n    let hours = 0;\n    const minutes = timeParts[1];\n\n    if (timeParts.length >= 1) {\n      hours = parseInt(timeParts[0]);\n\n      let amPm;\n      if (hours >= 12) {\n        amPm = \"PM\";\n        if (hours > 12) {\n          hours -= 12;\n        }\n      } else {\n        amPm = \"AM\";\n        if (hours === 0) {\n          hours = 12;\n        }\n      }\n\n      const convertedTime = `${hours}:${minutes} ${amPm}`;\n      return convertedTime;\n    } else {\n      return \"Invalid timestamp format\";\n    }\n  };\n\n  const rows = [];\n  if (data && data.length > 0) {\n    data.forEach((item) => {\n      rows.push({\n        id: item._id,\n        name: item.name,\n        createdAt: humanReadableFormattedDateString(item.createdAt),\n        screens: item.screens.length,\n        startDate: item,\n        endDate: item,\n        tags: item,\n        action: item,\n      });\n    });\n  }\n\n  const renderAction = (params) => {\n    const { value } = params;\n    return (\n      <Dropdown className=\"dropdown-toggle-menu\">\n        <Dropdown.Toggle variant=\"\" className=\"p-0  mb-2\">\n          <span className=\"table-menu-icon\">\n            <img\n              className=\"menu-img img-fluid\"\n              src={menuIcon}\n              alt=\"menu-icon\"\n            />\n          </span>\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item\n            href={`/design-month-schedule/${value._id}`}\n            disabled={permission && !permission.permission.SCHEDULE.edit}\n            className=\"dropdown-list-item\"\n          >\n            <div className=\"d-flex\">\n              <div className=\"dropdown-list-icon\">\n                <img\n                  className=\"dropdown-list-img img-fluid\"\n                  src={edit}\n                  alt=\"menu-icon\"\n                />\n              </div>\n              <div className=\"dropdown-menu-list\">\n                <span className=\"menu-heading\">Edit</span>\n                <span className=\"menu-description\">\n                  Get to know more about screen info\n                </span>\n              </div>\n            </div>\n          </Dropdown.Item>\n          <Dropdown.Item\n            onClick={() => {\n              setShowPublishPopUp(true);\n              setSelectedSchdule(value);\n              //setSelectedScreen(screen._id);\n            }}\n            //disabled={permission && !permission.permission.SCHEDULE.edit}\n            className=\"dropdown-list-item\"\n          >\n            <div className=\"d-flex\">\n              <div className=\"dropdown-list-icon\">\n                <img\n                  className=\"dropdown-list-img img-fluid\"\n                  src={edit}\n                  alt=\"menu-icon\"\n                />\n              </div>\n              <div className=\"dropdown-menu-list\">\n                <span className=\"menu-heading\">Assign Screen</span>\n                <span className=\"menu-description\">\n                  Get to know more about screen info\n                </span>\n              </div>\n            </div>\n          </Dropdown.Item>\n          <Dropdown.Item\n            href=\"#\"\n            className=\"dropdown-list-item\"\n            onClick={() => {\n              handleDeleteSchedule(value._id);\n              console.log(\"oooo\");\n            }}\n            disabled={permission && !permission.permission.SCHEDULE.delete}\n          >\n            <div className=\"d-flex\">\n              <div className=\"dropdown-list-icon\">\n                <img\n                  className=\"dropdown-list-img img-fluid\"\n                  src={deleteIcon}\n                  alt=\"menu-icon\"\n                />\n              </div>\n              <div className=\"dropdown-menu-list\">\n                <span className=\"menu-heading\">Delete</span>\n                <span className=\"menu-description\">\n                  Get to know more about screen info\n                </span>\n              </div>\n            </div>\n          </Dropdown.Item>\n          <Dropdown.Item\n            href=\"#\"\n            className=\"dropdown-list-item\"\n            disabled={permission && !permission.permission.SCHEDULE.view}\n            onClick={() => {\n              history.push(`/push/view/${value._id}`);\n            }}\n          >\n            <div className=\"d-flex\">\n              <div className=\"dropdown-list-icon\">\n                <img\n                  className=\"dropdown-list-img img-fluid\"\n                  src={deleteIcon}\n                  alt=\"menu-icon\"\n                />\n              </div>\n              <div className=\"dropdown-menu-list\">\n                <span className=\"menu-heading\">View Schedule</span>\n                <span className=\"menu-description\">\n                  Get to know more about screen info\n                </span>\n              </div>\n            </div>\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  };\n  const tagsRender = (params) => {\n    const { value } = params;\n    return (\n      <div>\n        <span className=\"tag-container\">\n          {value.tags.map((tag) => {\n            return (\n              <span className=\"my-phone-tag text-truncate ml-1 mr-1 mb-1\">\n                {tag}\n              </span>\n            );\n          })}\n        </span>\n        <span\n          className=\"down-arrow\"\n          onClick={(e) => {\n            handleTags(e, value);\n          }}\n        >\n          <img\n            className=\"down-arrow-img img-fluid\"\n            src={downArrow}\n            alt=\"arrow\"\n          />\n        </span>\n      </div>\n    );\n  };\n\n  const renderDate = (params) => {\n    const { value } = params;\n    return (\n      <span className=\"td-content\">\n        <strong>{humanReadableFormattedDateString(value)}</strong>{\" \"}\n        <span>{getDatetimeIn12Hours(value)}</span>\n      </span>\n    );\n  };\n\n  const renderStartDate = (params) => {\n    const { value } = params;\n    const maxDates = value.sequence.reduce((max, obj) => {\n      const parseDts = obj.dates.map((dt) => new Date(dt));\n      const objMax = obj.dates.length > 0 ? Math.max(...parseDts) : null;\n      return objMax ? (max ? Math.max(max, objMax) : objMax) : max;\n    }, null);\n    const formatedDt = moment(new Date(maxDates)).format(\"YYYY-MM-DD\");\n\n    const minDates = value.sequence.reduce((min, obj) => {\n      const parseDt = obj.dates.map((dt) => new Date(dt));\n      const objMin = parseDt.length > 0 ? Math.min(...parseDt) : null;\n      return objMin ? (min ? Math.min(min, objMin) : objMin) : min;\n    }, null);\n\n    const formatedDtMin = moment(new Date(minDates)).format(\"YYYY-MM-DD\");\n\n    const maxTime = value.sequence.reduce((max, obj) => {\n      const parseDts = obj.dates.map((dt) => new Date(dt));\n      const objMax = obj.dates.length > 0 ? Math.max(...parseDts) : null;\n      return objMax ? (max ? Math.max(max, objMax) : objMax) : max;\n    }, null);\n    const endTime = findEndTime(value?.sequence[value?.sequence.length - 1]);\n    return (\n      <div>\n        <span className=\"td-content\">\n          <strong> {formatedDtMin}</strong>{\" \"}\n          <span>\n            {convertTimestampTo12HourFormat(\n              value?.sequence[0]?.timings[0]?.startTime\n            )}\n          </span>\n        </span>\n      </div>\n    );\n  };\n\n  const renderEndDate = (params) => {\n    const { value } = params;\n    const maxDates = value.sequence.reduce((max, obj) => {\n      const parseDts = obj.dates.map((dt) => new Date(dt));\n      const objMax = obj.dates.length > 0 ? Math.max(...parseDts) : null;\n      return objMax ? (max ? Math.max(max, objMax) : objMax) : max;\n    }, null);\n    const formatedDt = moment(new Date(maxDates)).format(\"YYYY-MM-DD\");\n    const endTime = findEndTime(value?.sequence[value?.sequence.length - 1]);\n    return (\n      <div>\n        <span className=\"td-content\">\n          <strong> {formatedDt}</strong>{\" \"}\n          <span>{convertTimestampTo12HourFormat(endTime)}</span>\n        </span>\n      </div>\n    );\n  };\n\n  const columns = [\n    { field: \"name\", headerName: \"Name\", flex: 1 },\n    {\n      field: \"createdAt\",\n      headerName: \"Crated At\",\n      flex: 1,\n      renderCell: renderDate,\n      disableExport: true,\n    },\n    {\n      field: \"screens\",\n      headerName: \"Assigned Screens\",\n      flex: 1,\n    },\n    {\n      field: \"startDate\",\n      headerName: \"Start Date\",\n      renderCell: renderStartDate,\n      flex: 1,\n    },\n    {\n      field: \"endDate\",\n      headerName: \"End Date\",\n      renderCell: renderEndDate,\n      flex: 1,\n    },\n    {\n      field: \"tags\",\n      headerName: \"Tags\",\n      renderCell: tagsRender,\n      flex: 1,\n    },\n    {\n      field: \"action\",\n      headerName: \"More\",\n      flex: 1,\n      renderCell: renderAction,\n      disableExport: true,\n    },\n  ];\n\n  const handleTags = (e, item) => {\n    e.preventDefault();\n    setSelectedScreen(item);\n    setNewTagModal(!showNewTagModal);\n  };\n  return (\n    <>\n      <FilterModal\n        showFilterModal={showFilterModal}\n        setFilterModal={setFilterModal}\n        setFilterData={setFilterData}\n        setIsRefresh={setIsRefresh}\n        type={[\"tags\"]}\n        selectedType={\"schedule\"}\n      />\n      <div className=\"d-flex justify-content-end\">\n        <Button\n          className=\"ml-2 icon-btn\"\n          variant=\"primary\"\n          onClick={() => {\n            setFilterModal(true);\n          }}\n          style={{ position: \"absolute\", top: \"10px\" }}\n        >\n          <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\n        </Button>\n      </div>\n\n      <DataGrid\n        getRowHeight={() => \"auto\"}\n        components={{\n          NoRowsOverlay: CustomNoRowsOverlay,\n          Toolbar: CustomToolbar,\n          LoadingOverlay: LinearProgress,\n          Pagination: CustomPagination,\n        }}\n        rows={rows}\n        columns={columns}\n        pageSize={10}\n        rowsPerPageOptions={[5]}\n        disableSelectionOnClick\n        experimentalFeatures={{ newEditingApi: true }}\n        pagination\n        zIndex={-1}\n      />\n      {showNewTagModal && (\n        <AddNewTagModal\n          setNewTagModal={setNewTagModal}\n          allScreens={data}\n          selected={selectedScreen}\n          setIsRefresh={setIsRefresh}\n          type={\"schedule\"}\n        />\n      )}\n    </>\n  );\n};\nexport default ScheduleList;\n",{"ruleId":"1502","replacedBy":"1503"},{"ruleId":"1504","replacedBy":"1505"},{"ruleId":"1506","severity":1,"message":"1507","line":1,"column":37,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":45},{"ruleId":"1506","severity":1,"message":"1510","line":2,"column":10,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":12},{"ruleId":"1506","severity":1,"message":"1511","line":16,"column":8,"nodeType":"1508","messageId":"1509","endLine":16,"endColumn":16},{"ruleId":"1512","severity":1,"message":"1513","line":41,"column":8,"nodeType":"1514","endLine":41,"endColumn":33,"suggestions":"1515"},{"ruleId":"1506","severity":1,"message":"1516","line":11,"column":10,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1517","line":11,"column":15,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1518","line":11,"column":20,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":24},{"ruleId":"1506","severity":1,"message":"1519","line":12,"column":10,"nodeType":"1508","messageId":"1509","endLine":12,"endColumn":27},{"ruleId":"1506","severity":1,"message":"1520","line":12,"column":29,"nodeType":"1508","messageId":"1509","endLine":12,"endColumn":43},{"ruleId":"1506","severity":1,"message":"1521","line":18,"column":8,"nodeType":"1508","messageId":"1509","endLine":18,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1522","line":21,"column":9,"nodeType":"1508","messageId":"1509","endLine":21,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1523","line":24,"column":16,"nodeType":"1508","messageId":"1509","endLine":24,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1524","line":52,"column":9,"nodeType":"1508","messageId":"1509","endLine":52,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1525","line":77,"column":10,"nodeType":"1508","messageId":"1509","endLine":77,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1526","line":77,"column":20,"nodeType":"1508","messageId":"1509","endLine":77,"endColumn":31},{"ruleId":"1506","severity":1,"message":"1527","line":78,"column":10,"nodeType":"1508","messageId":"1509","endLine":78,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1528","line":78,"column":19,"nodeType":"1508","messageId":"1509","endLine":78,"endColumn":29},{"ruleId":"1506","severity":1,"message":"1529","line":80,"column":9,"nodeType":"1508","messageId":"1509","endLine":80,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1530","line":92,"column":9,"nodeType":"1508","messageId":"1509","endLine":92,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1531","line":14,"column":5,"nodeType":"1508","messageId":"1509","endLine":14,"endColumn":33},{"ruleId":"1506","severity":1,"message":"1532","line":30,"column":8,"nodeType":"1508","messageId":"1509","endLine":30,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1533","line":42,"column":8,"nodeType":"1508","messageId":"1509","endLine":42,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1534","line":46,"column":8,"nodeType":"1508","messageId":"1509","endLine":46,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1535","line":3,"column":8,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1536","line":4,"column":8,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1537","line":7,"column":8,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":14},{"ruleId":"1512","severity":1,"message":"1538","line":46,"column":6,"nodeType":"1514","endLine":46,"endColumn":17,"suggestions":"1539"},{"ruleId":"1506","severity":1,"message":"1540","line":5,"column":8,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1541","line":6,"column":8,"nodeType":"1508","messageId":"1509","endLine":6,"endColumn":29},{"ruleId":"1506","severity":1,"message":"1542","line":8,"column":25,"nodeType":"1508","messageId":"1509","endLine":8,"endColumn":33},{"ruleId":"1506","severity":1,"message":"1543","line":24,"column":8,"nodeType":"1508","messageId":"1509","endLine":24,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1544","line":25,"column":8,"nodeType":"1508","messageId":"1509","endLine":25,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1545","line":26,"column":8,"nodeType":"1508","messageId":"1509","endLine":26,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1546","line":27,"column":8,"nodeType":"1508","messageId":"1509","endLine":27,"endColumn":12},{"ruleId":"1506","severity":1,"message":"1547","line":54,"column":10,"nodeType":"1508","messageId":"1509","endLine":54,"endColumn":24},{"ruleId":"1506","severity":1,"message":"1548","line":54,"column":26,"nodeType":"1508","messageId":"1509","endLine":54,"endColumn":43},{"ruleId":"1512","severity":1,"message":"1549","line":113,"column":6,"nodeType":"1514","endLine":113,"endColumn":30,"suggestions":"1550"},{"ruleId":"1506","severity":1,"message":"1551","line":132,"column":9,"nodeType":"1508","messageId":"1509","endLine":132,"endColumn":27},{"ruleId":"1506","severity":1,"message":"1552","line":137,"column":9,"nodeType":"1508","messageId":"1509","endLine":137,"endColumn":28},{"ruleId":"1506","severity":1,"message":"1553","line":142,"column":12,"nodeType":"1508","messageId":"1509","endLine":142,"endColumn":42},{"ruleId":"1506","severity":1,"message":"1554","line":177,"column":12,"nodeType":"1508","messageId":"1509","endLine":177,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":187,"column":14,"nodeType":"1557","messageId":"1558","endLine":187,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1556","line":221,"column":14,"nodeType":"1557","messageId":"1558","endLine":221,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1559","line":2,"column":5,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1560","line":3,"column":5,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1561","line":5,"column":5,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":11},{"ruleId":"1506","severity":1,"message":"1562","line":9,"column":92,"nodeType":"1508","messageId":"1509","endLine":9,"endColumn":107},{"ruleId":"1506","severity":1,"message":"1563","line":2,"column":8,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1564","line":82,"column":19,"nodeType":"1557","messageId":"1558","endLine":82,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1565","line":153,"column":9,"nodeType":"1508","messageId":"1509","endLine":153,"endColumn":17},{"ruleId":"1555","severity":1,"message":"1564","line":324,"column":17,"nodeType":"1557","messageId":"1558","endLine":324,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1556","line":412,"column":18,"nodeType":"1557","messageId":"1558","endLine":412,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1556","line":415,"column":18,"nodeType":"1557","messageId":"1558","endLine":415,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1556","line":418,"column":18,"nodeType":"1557","messageId":"1558","endLine":418,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1566","line":16,"column":8,"nodeType":"1508","messageId":"1509","endLine":16,"endColumn":10},{"ruleId":"1506","severity":1,"message":"1567","line":24,"column":10,"nodeType":"1508","messageId":"1509","endLine":24,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1568","line":24,"column":22,"nodeType":"1508","messageId":"1509","endLine":24,"endColumn":35},{"ruleId":"1506","severity":1,"message":"1569","line":25,"column":10,"nodeType":"1508","messageId":"1509","endLine":25,"endColumn":29},{"ruleId":"1512","severity":1,"message":"1570","line":60,"column":6,"nodeType":"1514","endLine":60,"endColumn":10,"suggestions":"1571"},{"ruleId":"1555","severity":1,"message":"1556","line":128,"column":18,"nodeType":"1557","messageId":"1558","endLine":128,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1556","line":283,"column":38,"nodeType":"1557","messageId":"1558","endLine":283,"endColumn":40},{"ruleId":"1555","severity":1,"message":"1556","line":334,"column":44,"nodeType":"1557","messageId":"1558","endLine":334,"endColumn":46},{"ruleId":"1572","severity":1,"message":"1573","line":449,"column":21,"nodeType":"1574","endLine":454,"endColumn":23},{"ruleId":"1572","severity":1,"message":"1573","line":457,"column":21,"nodeType":"1574","endLine":462,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1575","line":4,"column":10,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1542","line":17,"column":17,"nodeType":"1508","messageId":"1509","endLine":17,"endColumn":25},{"ruleId":"1506","severity":1,"message":"1544","line":20,"column":8,"nodeType":"1508","messageId":"1509","endLine":20,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1541","line":21,"column":8,"nodeType":"1508","messageId":"1509","endLine":21,"endColumn":29},{"ruleId":"1506","severity":1,"message":"1576","line":23,"column":8,"nodeType":"1508","messageId":"1509","endLine":23,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1545","line":24,"column":8,"nodeType":"1508","messageId":"1509","endLine":24,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1577","line":38,"column":11,"nodeType":"1508","messageId":"1509","endLine":38,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1578","line":39,"column":13,"nodeType":"1508","messageId":"1509","endLine":39,"endColumn":15},{"ruleId":"1506","severity":1,"message":"1579","line":57,"column":11,"nodeType":"1508","messageId":"1509","endLine":57,"endColumn":29},{"ruleId":"1506","severity":1,"message":"1580","line":630,"column":9,"nodeType":"1508","messageId":"1509","endLine":630,"endColumn":29},{"ruleId":"1506","severity":1,"message":"1581","line":1,"column":28,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":34},{"ruleId":"1506","severity":1,"message":"1582","line":11,"column":3,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1583","line":13,"column":3,"nodeType":"1508","messageId":"1509","endLine":13,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1542","line":20,"column":17,"nodeType":"1508","messageId":"1509","endLine":20,"endColumn":25},{"ruleId":"1506","severity":1,"message":"1584","line":25,"column":10,"nodeType":"1508","messageId":"1509","endLine":25,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1585","line":27,"column":7,"nodeType":"1508","messageId":"1509","endLine":27,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1586","line":36,"column":10,"nodeType":"1508","messageId":"1509","endLine":36,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1587","line":36,"column":20,"nodeType":"1508","messageId":"1509","endLine":36,"endColumn":31},{"ruleId":"1506","severity":1,"message":"1588","line":39,"column":15,"nodeType":"1508","messageId":"1509","endLine":39,"endColumn":27},{"ruleId":"1506","severity":1,"message":"1589","line":43,"column":33,"nodeType":"1508","messageId":"1509","endLine":43,"endColumn":39},{"ruleId":"1506","severity":1,"message":"1578","line":82,"column":11,"nodeType":"1508","messageId":"1509","endLine":82,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1564","line":83,"column":55,"nodeType":"1557","messageId":"1558","endLine":83,"endColumn":57},{"ruleId":"1555","severity":1,"message":"1556","line":85,"column":22,"nodeType":"1557","messageId":"1558","endLine":85,"endColumn":24},{"ruleId":"1590","severity":1,"message":"1591","line":89,"column":13,"nodeType":"1592","messageId":"1593","endLine":89,"endColumn":59,"fix":"1594"},{"ruleId":"1590","severity":1,"message":"1595","line":90,"column":13,"nodeType":"1592","messageId":"1593","endLine":90,"endColumn":77,"fix":"1596"},{"ruleId":"1590","severity":1,"message":"1597","line":91,"column":13,"nodeType":"1592","messageId":"1593","endLine":91,"endColumn":75,"fix":"1598"},{"ruleId":"1590","severity":1,"message":"1591","line":95,"column":13,"nodeType":"1592","messageId":"1593","endLine":95,"endColumn":59,"fix":"1599"},{"ruleId":"1555","severity":1,"message":"1556","line":137,"column":22,"nodeType":"1557","messageId":"1558","endLine":137,"endColumn":24},{"ruleId":"1555","severity":1,"message":"1556","line":142,"column":21,"nodeType":"1557","messageId":"1558","endLine":142,"endColumn":23},{"ruleId":"1590","severity":1,"message":"1591","line":146,"column":13,"nodeType":"1592","messageId":"1593","endLine":146,"endColumn":35,"fix":"1600"},{"ruleId":"1590","severity":1,"message":"1601","line":147,"column":13,"nodeType":"1592","messageId":"1593","endLine":147,"endColumn":54,"fix":"1602"},{"ruleId":"1590","severity":1,"message":"1603","line":148,"column":13,"nodeType":"1592","messageId":"1593","endLine":148,"endColumn":52,"fix":"1604"},{"ruleId":"1555","severity":1,"message":"1564","line":170,"column":43,"nodeType":"1557","messageId":"1558","endLine":170,"endColumn":45},{"ruleId":"1555","severity":1,"message":"1556","line":189,"column":19,"nodeType":"1557","messageId":"1558","endLine":189,"endColumn":21},{"ruleId":"1590","severity":1,"message":"1591","line":194,"column":13,"nodeType":"1592","messageId":"1593","endLine":194,"endColumn":59,"fix":"1605"},{"ruleId":"1590","severity":1,"message":"1601","line":195,"column":13,"nodeType":"1592","messageId":"1593","endLine":195,"endColumn":78,"fix":"1606"},{"ruleId":"1590","severity":1,"message":"1603","line":196,"column":13,"nodeType":"1592","messageId":"1593","endLine":196,"endColumn":76,"fix":"1607"},{"ruleId":"1590","severity":1,"message":"1591","line":199,"column":29,"nodeType":"1592","messageId":"1593","endLine":199,"endColumn":75,"fix":"1608"},{"ruleId":"1555","severity":1,"message":"1564","line":221,"column":40,"nodeType":"1557","messageId":"1558","endLine":221,"endColumn":42},{"ruleId":"1572","severity":1,"message":"1573","line":256,"column":13,"nodeType":"1574","endLine":256,"endColumn":75},{"ruleId":"1506","severity":1,"message":"1581","line":1,"column":28,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":34},{"ruleId":"1506","severity":1,"message":"1582","line":11,"column":3,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1583","line":13,"column":3,"nodeType":"1508","messageId":"1509","endLine":13,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1542","line":21,"column":17,"nodeType":"1508","messageId":"1509","endLine":21,"endColumn":25},{"ruleId":"1506","severity":1,"message":"1584","line":26,"column":10,"nodeType":"1508","messageId":"1509","endLine":26,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1585","line":28,"column":7,"nodeType":"1508","messageId":"1509","endLine":28,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1586","line":37,"column":10,"nodeType":"1508","messageId":"1509","endLine":37,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1587","line":37,"column":20,"nodeType":"1508","messageId":"1509","endLine":37,"endColumn":31},{"ruleId":"1506","severity":1,"message":"1589","line":44,"column":33,"nodeType":"1508","messageId":"1509","endLine":44,"endColumn":39},{"ruleId":"1512","severity":1,"message":"1609","line":118,"column":6,"nodeType":"1514","endLine":118,"endColumn":13,"suggestions":"1610"},{"ruleId":"1506","severity":1,"message":"1578","line":123,"column":11,"nodeType":"1508","messageId":"1509","endLine":123,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1564","line":124,"column":55,"nodeType":"1557","messageId":"1558","endLine":124,"endColumn":57},{"ruleId":"1555","severity":1,"message":"1556","line":126,"column":22,"nodeType":"1557","messageId":"1558","endLine":126,"endColumn":24},{"ruleId":"1590","severity":1,"message":"1591","line":130,"column":13,"nodeType":"1592","messageId":"1593","endLine":130,"endColumn":59,"fix":"1611"},{"ruleId":"1590","severity":1,"message":"1595","line":131,"column":13,"nodeType":"1592","messageId":"1593","endLine":131,"endColumn":77,"fix":"1612"},{"ruleId":"1590","severity":1,"message":"1597","line":132,"column":13,"nodeType":"1592","messageId":"1593","endLine":132,"endColumn":75,"fix":"1613"},{"ruleId":"1590","severity":1,"message":"1591","line":136,"column":13,"nodeType":"1592","messageId":"1593","endLine":136,"endColumn":59,"fix":"1614"},{"ruleId":"1555","severity":1,"message":"1556","line":157,"column":24,"nodeType":"1557","messageId":"1558","endLine":157,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":162,"column":26,"nodeType":"1557","messageId":"1558","endLine":162,"endColumn":28},{"ruleId":"1590","severity":1,"message":"1591","line":164,"column":15,"nodeType":"1592","messageId":"1593","endLine":164,"endColumn":37,"fix":"1615"},{"ruleId":"1590","severity":1,"message":"1595","line":165,"column":15,"nodeType":"1592","messageId":"1593","endLine":165,"endColumn":55,"fix":"1616"},{"ruleId":"1590","severity":1,"message":"1597","line":166,"column":15,"nodeType":"1592","messageId":"1593","endLine":166,"endColumn":53,"fix":"1617"},{"ruleId":"1555","severity":1,"message":"1564","line":186,"column":55,"nodeType":"1557","messageId":"1558","endLine":186,"endColumn":57},{"ruleId":"1555","severity":1,"message":"1564","line":290,"column":39,"nodeType":"1557","messageId":"1558","endLine":290,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1556","line":301,"column":60,"nodeType":"1557","messageId":"1558","endLine":301,"endColumn":62},{"ruleId":"1572","severity":1,"message":"1573","line":321,"column":13,"nodeType":"1574","endLine":321,"endColumn":75},{"ruleId":"1506","severity":1,"message":"1542","line":153,"column":18,"nodeType":"1508","messageId":"1509","endLine":153,"endColumn":26},{"ruleId":"1506","severity":1,"message":"1618","line":157,"column":10,"nodeType":"1508","messageId":"1509","endLine":157,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1619","line":164,"column":10,"nodeType":"1508","messageId":"1509","endLine":164,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1620","line":164,"column":21,"nodeType":"1508","messageId":"1509","endLine":164,"endColumn":33},{"ruleId":"1506","severity":1,"message":"1581","line":1,"column":28,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":34},{"ruleId":"1506","severity":1,"message":"1585","line":9,"column":7,"nodeType":"1508","messageId":"1509","endLine":9,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1621","line":18,"column":17,"nodeType":"1508","messageId":"1509","endLine":18,"endColumn":25},{"ruleId":"1506","severity":1,"message":"1622","line":100,"column":11,"nodeType":"1508","messageId":"1509","endLine":100,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1623","line":126,"column":20,"nodeType":"1508","messageId":"1509","endLine":126,"endColumn":28},{"ruleId":"1572","severity":1,"message":"1573","line":188,"column":17,"nodeType":"1574","endLine":188,"endColumn":43},{"ruleId":"1506","severity":1,"message":"1581","line":2,"column":28,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":34},{"ruleId":"1506","severity":1,"message":"1585","line":10,"column":7,"nodeType":"1508","messageId":"1509","endLine":10,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1621","line":19,"column":17,"nodeType":"1508","messageId":"1509","endLine":19,"endColumn":25},{"ruleId":"1506","severity":1,"message":"1622","line":99,"column":11,"nodeType":"1508","messageId":"1509","endLine":99,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1624","line":116,"column":9,"nodeType":"1508","messageId":"1509","endLine":116,"endColumn":25},{"ruleId":"1506","severity":1,"message":"1623","line":124,"column":20,"nodeType":"1508","messageId":"1509","endLine":124,"endColumn":28},{"ruleId":"1572","severity":1,"message":"1573","line":171,"column":17,"nodeType":"1574","endLine":171,"endColumn":43},{"ruleId":"1506","severity":1,"message":"1625","line":604,"column":13,"nodeType":"1508","messageId":"1509","endLine":604,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1626","line":741,"column":13,"nodeType":"1508","messageId":"1509","endLine":741,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1627","line":758,"column":11,"nodeType":"1508","messageId":"1509","endLine":758,"endColumn":24},{"ruleId":"1506","severity":1,"message":"1628","line":784,"column":15,"nodeType":"1508","messageId":"1509","endLine":784,"endColumn":28},{"ruleId":"1512","severity":1,"message":"1629","line":49,"column":6,"nodeType":"1514","endLine":49,"endColumn":17,"suggestions":"1630"},{"ruleId":"1631","severity":1,"message":"1632","line":52,"column":29,"nodeType":"1633","messageId":"1634","endLine":52,"endColumn":31},{"ruleId":"1512","severity":1,"message":"1635","line":58,"column":6,"nodeType":"1514","endLine":58,"endColumn":14,"suggestions":"1636"},{"ruleId":"1555","severity":1,"message":"1556","line":95,"column":25,"nodeType":"1557","messageId":"1558","endLine":95,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1556","line":98,"column":47,"nodeType":"1557","messageId":"1558","endLine":98,"endColumn":49},{"ruleId":"1506","severity":1,"message":"1537","line":2,"column":8,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":14},{"ruleId":"1512","severity":1,"message":"1637","line":27,"column":6,"nodeType":"1514","endLine":27,"endColumn":10,"suggestions":"1638"},{"ruleId":"1506","severity":1,"message":"1618","line":3,"column":10,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1639","line":5,"column":10,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1640","line":5,"column":18,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":83,"column":33,"nodeType":"1557","messageId":"1558","endLine":83,"endColumn":35},{"ruleId":"1555","severity":1,"message":"1556","line":84,"column":33,"nodeType":"1557","messageId":"1558","endLine":84,"endColumn":35},{"ruleId":"1555","severity":1,"message":"1556","line":85,"column":33,"nodeType":"1557","messageId":"1558","endLine":85,"endColumn":35},{"ruleId":"1506","severity":1,"message":"1641","line":2,"column":10,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":15},{"ruleId":"1506","severity":1,"message":"1639","line":2,"column":17,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1543","line":3,"column":8,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1642","line":6,"column":10,"nodeType":"1508","messageId":"1509","endLine":6,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1643","line":7,"column":8,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1644","line":9,"column":8,"nodeType":"1508","messageId":"1509","endLine":9,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1645","line":11,"column":8,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1646","line":13,"column":8,"nodeType":"1508","messageId":"1509","endLine":13,"endColumn":12},{"ruleId":"1647","severity":1,"message":"1648","line":96,"column":7,"nodeType":"1649","messageId":"1650","endLine":96,"endColumn":13},{"ruleId":"1647","severity":1,"message":"1648","line":99,"column":7,"nodeType":"1649","messageId":"1650","endLine":99,"endColumn":13},{"ruleId":"1647","severity":1,"message":"1648","line":102,"column":7,"nodeType":"1649","messageId":"1650","endLine":102,"endColumn":13},{"ruleId":"1647","severity":1,"message":"1648","line":105,"column":7,"nodeType":"1649","messageId":"1650","endLine":105,"endColumn":13},{"ruleId":"1555","severity":1,"message":"1556","line":201,"column":48,"nodeType":"1557","messageId":"1558","endLine":201,"endColumn":50},{"ruleId":"1555","severity":1,"message":"1556","line":211,"column":53,"nodeType":"1557","messageId":"1558","endLine":211,"endColumn":55},{"ruleId":"1651","severity":1,"message":"1652","line":241,"column":43,"nodeType":"1574","endLine":248,"endColumn":45},{"ruleId":"1651","severity":1,"message":"1652","line":298,"column":37,"nodeType":"1574","endLine":301,"endColumn":39},{"ruleId":"1651","severity":1,"message":"1652","line":324,"column":15,"nodeType":"1574","endLine":324,"endColumn":81},{"ruleId":"1555","severity":1,"message":"1556","line":365,"column":24,"nodeType":"1557","messageId":"1558","endLine":365,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":370,"column":23,"nodeType":"1557","messageId":"1558","endLine":370,"endColumn":25},{"ruleId":"1653","severity":1,"message":"1654","line":373,"column":9,"nodeType":"1574","endLine":377,"endColumn":10},{"ruleId":"1555","severity":1,"message":"1556","line":382,"column":30,"nodeType":"1557","messageId":"1558","endLine":382,"endColumn":32},{"ruleId":"1653","severity":1,"message":"1654","line":385,"column":9,"nodeType":"1574","endLine":389,"endColumn":10},{"ruleId":"1653","severity":1,"message":"1654","line":396,"column":7,"nodeType":"1574","endLine":400,"endColumn":8},{"ruleId":"1506","severity":1,"message":"1655","line":418,"column":7,"nodeType":"1508","messageId":"1509","endLine":418,"endColumn":10},{"ruleId":"1555","severity":1,"message":"1556","line":419,"column":17,"nodeType":"1557","messageId":"1558","endLine":419,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1556","line":435,"column":24,"nodeType":"1557","messageId":"1558","endLine":435,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":484,"column":20,"nodeType":"1557","messageId":"1558","endLine":484,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1556","line":485,"column":20,"nodeType":"1557","messageId":"1558","endLine":485,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1556","line":517,"column":24,"nodeType":"1557","messageId":"1558","endLine":517,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":519,"column":31,"nodeType":"1557","messageId":"1558","endLine":519,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1556","line":560,"column":33,"nodeType":"1557","messageId":"1558","endLine":560,"endColumn":35},{"ruleId":"1555","severity":1,"message":"1556","line":561,"column":21,"nodeType":"1557","messageId":"1558","endLine":561,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":562,"column":23,"nodeType":"1557","messageId":"1558","endLine":562,"endColumn":25},{"ruleId":"1572","severity":1,"message":"1573","line":599,"column":19,"nodeType":"1574","endLine":599,"endColumn":40},{"ruleId":"1555","severity":1,"message":"1556","line":623,"column":28,"nodeType":"1557","messageId":"1558","endLine":623,"endColumn":30},{"ruleId":"1555","severity":1,"message":"1556","line":624,"column":29,"nodeType":"1557","messageId":"1558","endLine":624,"endColumn":31},{"ruleId":"1555","severity":1,"message":"1556","line":625,"column":29,"nodeType":"1557","messageId":"1558","endLine":625,"endColumn":31},{"ruleId":"1555","severity":1,"message":"1556","line":626,"column":29,"nodeType":"1557","messageId":"1558","endLine":626,"endColumn":31},{"ruleId":"1572","severity":1,"message":"1573","line":642,"column":31,"nodeType":"1574","endLine":642,"endColumn":52},{"ruleId":"1572","severity":1,"message":"1573","line":677,"column":13,"nodeType":"1574","endLine":680,"endColumn":15},{"ruleId":"1555","severity":1,"message":"1556","line":706,"column":28,"nodeType":"1557","messageId":"1558","endLine":706,"endColumn":30},{"ruleId":"1656","severity":1,"message":"1657","line":722,"column":21,"nodeType":"1658","messageId":"1659","endLine":724,"endColumn":22},{"ruleId":"1572","severity":1,"message":"1573","line":734,"column":33,"nodeType":"1574","endLine":740,"endColumn":35},{"ruleId":"1555","severity":1,"message":"1556","line":775,"column":35,"nodeType":"1557","messageId":"1558","endLine":775,"endColumn":37},{"ruleId":"1555","severity":1,"message":"1556","line":777,"column":27,"nodeType":"1557","messageId":"1558","endLine":777,"endColumn":29},{"ruleId":"1572","severity":1,"message":"1573","line":846,"column":19,"nodeType":"1574","endLine":852,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1556","line":859,"column":34,"nodeType":"1557","messageId":"1558","endLine":859,"endColumn":36},{"ruleId":"1572","severity":1,"message":"1573","line":909,"column":21,"nodeType":"1574","endLine":915,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":923,"column":34,"nodeType":"1557","messageId":"1558","endLine":923,"endColumn":36},{"ruleId":"1572","severity":1,"message":"1573","line":983,"column":19,"nodeType":"1574","endLine":989,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1556","line":996,"column":34,"nodeType":"1557","messageId":"1558","endLine":996,"endColumn":36},{"ruleId":"1572","severity":1,"message":"1573","line":1051,"column":19,"nodeType":"1574","endLine":1057,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1556","line":1064,"column":34,"nodeType":"1557","messageId":"1558","endLine":1064,"endColumn":36},{"ruleId":"1572","severity":1,"message":"1573","line":1093,"column":21,"nodeType":"1574","endLine":1099,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":1139,"column":34,"nodeType":"1557","messageId":"1558","endLine":1139,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":1150,"column":35,"nodeType":"1557","messageId":"1558","endLine":1150,"endColumn":37},{"ruleId":"1555","severity":1,"message":"1556","line":1152,"column":27,"nodeType":"1557","messageId":"1558","endLine":1152,"endColumn":29},{"ruleId":"1572","severity":1,"message":"1573","line":1215,"column":19,"nodeType":"1574","endLine":1221,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1556","line":1228,"column":34,"nodeType":"1557","messageId":"1558","endLine":1228,"endColumn":36},{"ruleId":"1572","severity":1,"message":"1573","line":1278,"column":21,"nodeType":"1574","endLine":1284,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":1292,"column":34,"nodeType":"1557","messageId":"1558","endLine":1292,"endColumn":36},{"ruleId":"1572","severity":1,"message":"1573","line":1352,"column":19,"nodeType":"1574","endLine":1358,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1556","line":1365,"column":34,"nodeType":"1557","messageId":"1558","endLine":1365,"endColumn":36},{"ruleId":"1572","severity":1,"message":"1573","line":1420,"column":19,"nodeType":"1574","endLine":1426,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1556","line":1433,"column":34,"nodeType":"1557","messageId":"1558","endLine":1433,"endColumn":36},{"ruleId":"1572","severity":1,"message":"1573","line":1462,"column":21,"nodeType":"1574","endLine":1468,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":1508,"column":34,"nodeType":"1557","messageId":"1558","endLine":1508,"endColumn":36},{"ruleId":"1506","severity":1,"message":"1660","line":1679,"column":9,"nodeType":"1508","messageId":"1509","endLine":1679,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1556","line":1713,"column":30,"nodeType":"1557","messageId":"1558","endLine":1713,"endColumn":32},{"ruleId":"1555","severity":1,"message":"1556","line":1714,"column":31,"nodeType":"1557","messageId":"1558","endLine":1714,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1556","line":1715,"column":31,"nodeType":"1557","messageId":"1558","endLine":1715,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1556","line":1716,"column":31,"nodeType":"1557","messageId":"1558","endLine":1716,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1556","line":1779,"column":42,"nodeType":"1557","messageId":"1558","endLine":1779,"endColumn":44},{"ruleId":"1555","severity":1,"message":"1556","line":1791,"column":42,"nodeType":"1557","messageId":"1558","endLine":1791,"endColumn":44},{"ruleId":"1555","severity":1,"message":"1556","line":1800,"column":42,"nodeType":"1557","messageId":"1558","endLine":1800,"endColumn":44},{"ruleId":"1555","severity":1,"message":"1556","line":1825,"column":50,"nodeType":"1557","messageId":"1558","endLine":1825,"endColumn":52},{"ruleId":"1555","severity":1,"message":"1556","line":1831,"column":32,"nodeType":"1557","messageId":"1558","endLine":1831,"endColumn":34},{"ruleId":"1555","severity":1,"message":"1556","line":1841,"column":36,"nodeType":"1557","messageId":"1558","endLine":1841,"endColumn":38},{"ruleId":"1656","severity":1,"message":"1657","line":1855,"column":21,"nodeType":"1658","messageId":"1659","endLine":1857,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1556","line":1867,"column":50,"nodeType":"1557","messageId":"1558","endLine":1867,"endColumn":52},{"ruleId":"1555","severity":1,"message":"1556","line":1877,"column":50,"nodeType":"1557","messageId":"1558","endLine":1877,"endColumn":52},{"ruleId":"1555","severity":1,"message":"1556","line":1887,"column":50,"nodeType":"1557","messageId":"1558","endLine":1887,"endColumn":52},{"ruleId":"1555","severity":1,"message":"1556","line":1906,"column":57,"nodeType":"1557","messageId":"1558","endLine":1906,"endColumn":59},{"ruleId":"1555","severity":1,"message":"1556","line":1912,"column":32,"nodeType":"1557","messageId":"1558","endLine":1912,"endColumn":34},{"ruleId":"1555","severity":1,"message":"1556","line":1921,"column":36,"nodeType":"1557","messageId":"1558","endLine":1921,"endColumn":38},{"ruleId":"1656","severity":1,"message":"1657","line":1934,"column":21,"nodeType":"1658","messageId":"1659","endLine":1936,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1556","line":1946,"column":50,"nodeType":"1557","messageId":"1558","endLine":1946,"endColumn":52},{"ruleId":"1555","severity":1,"message":"1556","line":1956,"column":50,"nodeType":"1557","messageId":"1558","endLine":1956,"endColumn":52},{"ruleId":"1555","severity":1,"message":"1556","line":1965,"column":50,"nodeType":"1557","messageId":"1558","endLine":1965,"endColumn":52},{"ruleId":"1555","severity":1,"message":"1556","line":1983,"column":57,"nodeType":"1557","messageId":"1558","endLine":1983,"endColumn":59},{"ruleId":"1555","severity":1,"message":"1556","line":1988,"column":30,"nodeType":"1557","messageId":"1558","endLine":1988,"endColumn":32},{"ruleId":"1555","severity":1,"message":"1556","line":1997,"column":34,"nodeType":"1557","messageId":"1558","endLine":1997,"endColumn":36},{"ruleId":"1656","severity":1,"message":"1657","line":2010,"column":19,"nodeType":"1658","messageId":"1659","endLine":2012,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1556","line":2022,"column":48,"nodeType":"1557","messageId":"1558","endLine":2022,"endColumn":50},{"ruleId":"1555","severity":1,"message":"1556","line":2033,"column":48,"nodeType":"1557","messageId":"1558","endLine":2033,"endColumn":50},{"ruleId":"1555","severity":1,"message":"1556","line":2042,"column":48,"nodeType":"1557","messageId":"1558","endLine":2042,"endColumn":50},{"ruleId":"1555","severity":1,"message":"1556","line":2087,"column":38,"nodeType":"1557","messageId":"1558","endLine":2087,"endColumn":40},{"ruleId":"1555","severity":1,"message":"1556","line":2182,"column":45,"nodeType":"1557","messageId":"1558","endLine":2182,"endColumn":47},{"ruleId":"1555","severity":1,"message":"1556","line":2276,"column":45,"nodeType":"1557","messageId":"1558","endLine":2276,"endColumn":47},{"ruleId":"1555","severity":1,"message":"1556","line":2353,"column":45,"nodeType":"1557","messageId":"1558","endLine":2353,"endColumn":47},{"ruleId":"1555","severity":1,"message":"1556","line":2430,"column":45,"nodeType":"1557","messageId":"1558","endLine":2430,"endColumn":47},{"ruleId":"1555","severity":1,"message":"1556","line":2508,"column":45,"nodeType":"1557","messageId":"1558","endLine":2508,"endColumn":47},{"ruleId":"1506","severity":1,"message":"1535","line":6,"column":8,"nodeType":"1508","messageId":"1509","endLine":6,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1536","line":7,"column":8,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1661","line":17,"column":10,"nodeType":"1508","messageId":"1509","endLine":17,"endColumn":25},{"ruleId":"1506","severity":1,"message":"1662","line":17,"column":27,"nodeType":"1508","messageId":"1509","endLine":17,"endColumn":41},{"ruleId":"1512","severity":1,"message":"1663","line":29,"column":6,"nodeType":"1514","endLine":29,"endColumn":17,"suggestions":"1664"},{"ruleId":"1506","severity":1,"message":"1665","line":4,"column":8,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1535","line":6,"column":8,"nodeType":"1508","messageId":"1509","endLine":6,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1536","line":7,"column":8,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1666","line":9,"column":8,"nodeType":"1508","messageId":"1509","endLine":9,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1667","line":11,"column":19,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":30},{"ruleId":"1506","severity":1,"message":"1668","line":11,"column":32,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":43},{"ruleId":"1506","severity":1,"message":"1537","line":13,"column":8,"nodeType":"1508","messageId":"1509","endLine":13,"endColumn":14},{"ruleId":"1512","severity":1,"message":"1669","line":53,"column":6,"nodeType":"1514","endLine":53,"endColumn":17,"suggestions":"1670"},{"ruleId":"1506","severity":1,"message":"1671","line":4,"column":10,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":15},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1673","line":4,"column":39,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":51},{"ruleId":"1506","severity":1,"message":"1674","line":11,"column":10,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1523","line":11,"column":16,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1516","line":1,"column":25,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":28},{"ruleId":"1506","severity":1,"message":"1517","line":1,"column":30,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":33},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1542","line":1,"column":42,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":50},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1542","line":1,"column":42,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":50},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1675","line":7,"column":10,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":15},{"ruleId":"1506","severity":1,"message":"1620","line":12,"column":21,"nodeType":"1508","messageId":"1509","endLine":12,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1556","line":106,"column":32,"nodeType":"1557","messageId":"1558","endLine":106,"endColumn":34},{"ruleId":"1555","severity":1,"message":"1556","line":40,"column":50,"nodeType":"1557","messageId":"1558","endLine":40,"endColumn":52},{"ruleId":"1506","severity":1,"message":"1672","line":2,"column":35,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":40},{"ruleId":"1555","severity":1,"message":"1556","line":78,"column":22,"nodeType":"1557","messageId":"1558","endLine":78,"endColumn":24},{"ruleId":"1555","severity":1,"message":"1556","line":165,"column":27,"nodeType":"1557","messageId":"1558","endLine":165,"endColumn":29},{"ruleId":"1555","severity":1,"message":"1556","line":273,"column":48,"nodeType":"1557","messageId":"1558","endLine":273,"endColumn":50},{"ruleId":"1555","severity":1,"message":"1556","line":282,"column":36,"nodeType":"1557","messageId":"1558","endLine":282,"endColumn":38},{"ruleId":"1590","severity":1,"message":"1676","line":300,"column":31,"nodeType":"1592","messageId":"1593","endLine":300,"endColumn":52,"fix":"1677"},{"ruleId":"1590","severity":1,"message":"1678","line":318,"column":31,"nodeType":"1592","messageId":"1593","endLine":318,"endColumn":52,"fix":"1679"},{"ruleId":"1506","severity":1,"message":"1672","line":2,"column":35,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1680","line":4,"column":8,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1681","line":5,"column":8,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1682","line":20,"column":11,"nodeType":"1508","messageId":"1509","endLine":20,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1556","line":27,"column":17,"nodeType":"1557","messageId":"1558","endLine":27,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1556","line":30,"column":29,"nodeType":"1557","messageId":"1558","endLine":30,"endColumn":31},{"ruleId":"1555","severity":1,"message":"1556","line":39,"column":16,"nodeType":"1557","messageId":"1558","endLine":39,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1556","line":100,"column":39,"nodeType":"1557","messageId":"1558","endLine":100,"endColumn":41},{"ruleId":"1506","severity":1,"message":"1542","line":4,"column":3,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":11},{"ruleId":"1506","severity":1,"message":"1639","line":5,"column":3,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":9},{"ruleId":"1506","severity":1,"message":"1683","line":6,"column":3,"nodeType":"1508","messageId":"1509","endLine":6,"endColumn":8},{"ruleId":"1506","severity":1,"message":"1672","line":9,"column":3,"nodeType":"1508","messageId":"1509","endLine":9,"endColumn":8},{"ruleId":"1506","severity":1,"message":"1684","line":13,"column":10,"nodeType":"1508","messageId":"1509","endLine":13,"endColumn":16},{"ruleId":"1512","severity":1,"message":"1685","line":25,"column":6,"nodeType":"1514","endLine":25,"endColumn":30,"suggestions":"1686"},{"ruleId":"1555","severity":1,"message":"1556","line":119,"column":37,"nodeType":"1557","messageId":"1558","endLine":119,"endColumn":39},{"ruleId":"1555","severity":1,"message":"1556","line":648,"column":37,"nodeType":"1557","messageId":"1558","endLine":648,"endColumn":39},{"ruleId":"1555","severity":1,"message":"1556","line":1177,"column":37,"nodeType":"1557","messageId":"1558","endLine":1177,"endColumn":39},{"ruleId":"1506","severity":1,"message":"1687","line":1,"column":27,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":36},{"ruleId":"1506","severity":1,"message":"1640","line":2,"column":10,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":15},{"ruleId":"1506","severity":1,"message":"1518","line":2,"column":27,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":31},{"ruleId":"1506","severity":1,"message":"1639","line":2,"column":33,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":39},{"ruleId":"1506","severity":1,"message":"1688","line":6,"column":10,"nodeType":"1508","messageId":"1509","endLine":6,"endColumn":26},{"ruleId":"1506","severity":1,"message":"1689","line":13,"column":20,"nodeType":"1508","messageId":"1509","endLine":13,"endColumn":37},{"ruleId":"1506","severity":1,"message":"1690","line":168,"column":9,"nodeType":"1508","messageId":"1509","endLine":168,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1687","line":1,"column":27,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":36},{"ruleId":"1506","severity":1,"message":"1691","line":3,"column":8,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1692","line":4,"column":8,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1693","line":6,"column":8,"nodeType":"1508","messageId":"1509","endLine":6,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1541","line":7,"column":8,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":29},{"ruleId":"1506","severity":1,"message":"1694","line":8,"column":8,"nodeType":"1508","messageId":"1509","endLine":8,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1695","line":10,"column":24,"nodeType":"1508","messageId":"1509","endLine":10,"endColumn":36},{"ruleId":"1506","severity":1,"message":"1672","line":2,"column":35,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1680","line":4,"column":8,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1556","line":32,"column":17,"nodeType":"1557","messageId":"1558","endLine":32,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1556","line":35,"column":26,"nodeType":"1557","messageId":"1558","endLine":35,"endColumn":28},{"ruleId":"1555","severity":1,"message":"1556","line":38,"column":23,"nodeType":"1557","messageId":"1558","endLine":38,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":50,"column":16,"nodeType":"1557","messageId":"1558","endLine":50,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1556","line":112,"column":35,"nodeType":"1557","messageId":"1558","endLine":112,"endColumn":37},{"ruleId":"1506","severity":1,"message":"1687","line":1,"column":27,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":36},{"ruleId":"1506","severity":1,"message":"1691","line":3,"column":8,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1692","line":4,"column":8,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1693","line":6,"column":8,"nodeType":"1508","messageId":"1509","endLine":6,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1541","line":7,"column":8,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":29},{"ruleId":"1506","severity":1,"message":"1696","line":10,"column":23,"nodeType":"1508","messageId":"1509","endLine":10,"endColumn":34},{"ruleId":"1555","severity":1,"message":"1556","line":78,"column":40,"nodeType":"1557","messageId":"1558","endLine":78,"endColumn":42},{"ruleId":"1506","severity":1,"message":"1697","line":5,"column":8,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1516","line":2,"column":25,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":28},{"ruleId":"1506","severity":1,"message":"1517","line":2,"column":30,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":33},{"ruleId":"1506","severity":1,"message":"1672","line":2,"column":35,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1680","line":4,"column":8,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1584","line":5,"column":10,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":14},{"ruleId":"1512","severity":1,"message":"1698","line":25,"column":6,"nodeType":"1514","endLine":25,"endColumn":8,"suggestions":"1699"},{"ruleId":"1555","severity":1,"message":"1556","line":42,"column":26,"nodeType":"1557","messageId":"1558","endLine":42,"endColumn":28},{"ruleId":"1555","severity":1,"message":"1556","line":45,"column":47,"nodeType":"1557","messageId":"1558","endLine":45,"endColumn":49},{"ruleId":"1555","severity":1,"message":"1556","line":49,"column":26,"nodeType":"1557","messageId":"1558","endLine":49,"endColumn":28},{"ruleId":"1555","severity":1,"message":"1556","line":52,"column":47,"nodeType":"1557","messageId":"1558","endLine":52,"endColumn":49},{"ruleId":"1555","severity":1,"message":"1556","line":57,"column":28,"nodeType":"1557","messageId":"1558","endLine":57,"endColumn":30},{"ruleId":"1555","severity":1,"message":"1556","line":60,"column":51,"nodeType":"1557","messageId":"1558","endLine":60,"endColumn":53},{"ruleId":"1590","severity":1,"message":"1700","line":123,"column":23,"nodeType":"1592","messageId":"1593","endLine":123,"endColumn":49,"fix":"1701"},{"ruleId":"1590","severity":1,"message":"1702","line":141,"column":23,"nodeType":"1592","messageId":"1593","endLine":141,"endColumn":52,"fix":"1703"},{"ruleId":"1590","severity":1,"message":"1704","line":159,"column":23,"nodeType":"1592","messageId":"1593","endLine":159,"endColumn":56,"fix":"1705"},{"ruleId":"1506","severity":1,"message":"1516","line":1,"column":25,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":28},{"ruleId":"1506","severity":1,"message":"1517","line":1,"column":30,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":33},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1706","line":3,"column":8,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":12},{"ruleId":"1506","severity":1,"message":"1584","line":7,"column":10,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1681","line":8,"column":8,"nodeType":"1508","messageId":"1509","endLine":8,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1707","line":13,"column":10,"nodeType":"1508","messageId":"1509","endLine":13,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1708","line":13,"column":19,"nodeType":"1508","messageId":"1509","endLine":13,"endColumn":29},{"ruleId":"1572","severity":1,"message":"1573","line":87,"column":17,"nodeType":"1574","endLine":91,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1564","line":16,"column":21,"nodeType":"1557","messageId":"1558","endLine":16,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":20,"column":23,"nodeType":"1557","messageId":"1558","endLine":20,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":22,"column":29,"nodeType":"1557","messageId":"1558","endLine":22,"endColumn":31},{"ruleId":"1555","severity":1,"message":"1556","line":24,"column":29,"nodeType":"1557","messageId":"1558","endLine":24,"endColumn":31},{"ruleId":"1555","severity":1,"message":"1564","line":40,"column":21,"nodeType":"1557","messageId":"1558","endLine":40,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":43,"column":23,"nodeType":"1557","messageId":"1558","endLine":43,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":45,"column":29,"nodeType":"1557","messageId":"1558","endLine":45,"endColumn":31},{"ruleId":"1555","severity":1,"message":"1556","line":47,"column":29,"nodeType":"1557","messageId":"1558","endLine":47,"endColumn":31},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1674","line":11,"column":10,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1523","line":11,"column":16,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1620","line":14,"column":21,"nodeType":"1508","messageId":"1509","endLine":14,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1556","line":256,"column":66,"nodeType":"1557","messageId":"1558","endLine":256,"endColumn":68},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1687","line":1,"column":27,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":36},{"ruleId":"1506","severity":1,"message":"1640","line":2,"column":10,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":15},{"ruleId":"1506","severity":1,"message":"1694","line":9,"column":8,"nodeType":"1508","messageId":"1509","endLine":9,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1709","line":11,"column":8,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":26},{"ruleId":"1506","severity":1,"message":"1689","line":19,"column":3,"nodeType":"1508","messageId":"1509","endLine":19,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1640","line":2,"column":10,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":15},{"ruleId":"1506","severity":1,"message":"1697","line":7,"column":8,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1516","line":8,"column":25,"nodeType":"1508","messageId":"1509","endLine":8,"endColumn":28},{"ruleId":"1506","severity":1,"message":"1517","line":8,"column":30,"nodeType":"1508","messageId":"1509","endLine":8,"endColumn":33},{"ruleId":"1506","severity":1,"message":"1672","line":8,"column":35,"nodeType":"1508","messageId":"1509","endLine":8,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1689","line":22,"column":3,"nodeType":"1508","messageId":"1509","endLine":22,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1710","line":93,"column":9,"nodeType":"1508","messageId":"1509","endLine":93,"endColumn":18},{"ruleId":"1555","severity":1,"message":"1556","line":96,"column":20,"nodeType":"1557","messageId":"1558","endLine":96,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1556","line":96,"column":45,"nodeType":"1557","messageId":"1558","endLine":96,"endColumn":47},{"ruleId":"1506","severity":1,"message":"1711","line":99,"column":13,"nodeType":"1508","messageId":"1509","endLine":99,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1556","line":159,"column":33,"nodeType":"1557","messageId":"1558","endLine":159,"endColumn":35},{"ruleId":"1555","severity":1,"message":"1556","line":159,"column":59,"nodeType":"1557","messageId":"1558","endLine":159,"endColumn":61},{"ruleId":"1572","severity":1,"message":"1573","line":402,"column":15,"nodeType":"1574","endLine":405,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1712","line":5,"column":8,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":24},{"ruleId":"1506","severity":1,"message":"1713","line":9,"column":8,"nodeType":"1508","messageId":"1509","endLine":9,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1714","line":14,"column":9,"nodeType":"1508","messageId":"1509","endLine":14,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1715","line":7,"column":8,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":12},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1674","line":15,"column":10,"nodeType":"1508","messageId":"1509","endLine":15,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1523","line":15,"column":16,"nodeType":"1508","messageId":"1509","endLine":15,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1716","line":16,"column":10,"nodeType":"1508","messageId":"1509","endLine":16,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1717","line":48,"column":9,"nodeType":"1508","messageId":"1509","endLine":48,"endColumn":30},{"ruleId":"1555","severity":1,"message":"1556","line":84,"column":65,"nodeType":"1557","messageId":"1558","endLine":84,"endColumn":67},{"ruleId":"1506","severity":1,"message":"1507","line":1,"column":17,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":25},{"ruleId":"1506","severity":1,"message":"1639","line":2,"column":10,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1640","line":2,"column":18,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1542","line":2,"column":25,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":33},{"ruleId":"1506","severity":1,"message":"1507","line":1,"column":17,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":25},{"ruleId":"1506","severity":1,"message":"1639","line":2,"column":10,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1640","line":2,"column":18,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1542","line":2,"column":25,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":33},{"ruleId":"1506","severity":1,"message":"1718","line":4,"column":5,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":37},{"ruleId":"1506","severity":1,"message":"1577","line":17,"column":9,"nodeType":"1508","messageId":"1509","endLine":17,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1556","line":65,"column":20,"nodeType":"1557","messageId":"1558","endLine":65,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1556","line":125,"column":41,"nodeType":"1557","messageId":"1558","endLine":125,"endColumn":43},{"ruleId":"1555","severity":1,"message":"1556","line":137,"column":40,"nodeType":"1557","messageId":"1558","endLine":137,"endColumn":42},{"ruleId":"1555","severity":1,"message":"1556","line":148,"column":43,"nodeType":"1557","messageId":"1558","endLine":148,"endColumn":45},{"ruleId":"1555","severity":1,"message":"1556","line":164,"column":46,"nodeType":"1557","messageId":"1558","endLine":164,"endColumn":48},{"ruleId":"1555","severity":1,"message":"1556","line":176,"column":46,"nodeType":"1557","messageId":"1558","endLine":176,"endColumn":48},{"ruleId":"1555","severity":1,"message":"1556","line":187,"column":41,"nodeType":"1557","messageId":"1558","endLine":187,"endColumn":43},{"ruleId":"1555","severity":1,"message":"1556","line":200,"column":44,"nodeType":"1557","messageId":"1558","endLine":200,"endColumn":46},{"ruleId":"1555","severity":1,"message":"1556","line":209,"column":44,"nodeType":"1557","messageId":"1558","endLine":209,"endColumn":46},{"ruleId":"1506","severity":1,"message":"1507","line":1,"column":17,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":25},{"ruleId":"1506","severity":1,"message":"1640","line":2,"column":10,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":15},{"ruleId":"1506","severity":1,"message":"1535","line":4,"column":8,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1536","line":5,"column":8,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":16},{"ruleId":"1590","severity":1,"message":"1719","line":36,"column":37,"nodeType":"1592","messageId":"1593","endLine":36,"endColumn":56,"fix":"1720"},{"ruleId":"1555","severity":1,"message":"1556","line":60,"column":19,"nodeType":"1557","messageId":"1558","endLine":60,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1556","line":64,"column":19,"nodeType":"1557","messageId":"1558","endLine":64,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1556","line":68,"column":19,"nodeType":"1557","messageId":"1558","endLine":68,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1556","line":98,"column":22,"nodeType":"1557","messageId":"1558","endLine":98,"endColumn":24},{"ruleId":"1555","severity":1,"message":"1556","line":98,"column":47,"nodeType":"1557","messageId":"1558","endLine":98,"endColumn":49},{"ruleId":"1506","severity":1,"message":"1721","line":110,"column":13,"nodeType":"1508","messageId":"1509","endLine":110,"endColumn":15},{"ruleId":"1555","severity":1,"message":"1564","line":120,"column":25,"nodeType":"1557","messageId":"1558","endLine":120,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1564","line":120,"column":49,"nodeType":"1557","messageId":"1558","endLine":120,"endColumn":51},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1542","line":1,"column":42,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":50},{"ruleId":"1506","severity":1,"message":"1680","line":3,"column":8,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1584","line":4,"column":10,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1535","line":5,"column":8,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1722","line":5,"column":3,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1517","line":8,"column":10,"nodeType":"1508","messageId":"1509","endLine":8,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1537","line":12,"column":8,"nodeType":"1508","messageId":"1509","endLine":12,"endColumn":14},{"ruleId":"1512","severity":1,"message":"1723","line":68,"column":6,"nodeType":"1514","endLine":68,"endColumn":18,"suggestions":"1724"},{"ruleId":"1512","severity":1,"message":"1725","line":244,"column":6,"nodeType":"1514","endLine":244,"endColumn":19,"suggestions":"1726"},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1680","line":3,"column":8,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1556","line":23,"column":39,"nodeType":"1557","messageId":"1558","endLine":23,"endColumn":41},{"ruleId":"1555","severity":1,"message":"1556","line":34,"column":46,"nodeType":"1557","messageId":"1558","endLine":34,"endColumn":48},{"ruleId":"1555","severity":1,"message":"1556","line":56,"column":46,"nodeType":"1557","messageId":"1558","endLine":56,"endColumn":48},{"ruleId":"1512","severity":1,"message":"1727","line":92,"column":6,"nodeType":"1514","endLine":92,"endColumn":35,"suggestions":"1728"},{"ruleId":"1555","severity":1,"message":"1556","line":167,"column":40,"nodeType":"1557","messageId":"1558","endLine":167,"endColumn":42},{"ruleId":"1555","severity":1,"message":"1556","line":198,"column":33,"nodeType":"1557","messageId":"1558","endLine":198,"endColumn":35},{"ruleId":"1555","severity":1,"message":"1556","line":271,"column":33,"nodeType":"1557","messageId":"1558","endLine":271,"endColumn":35},{"ruleId":"1555","severity":1,"message":"1556","line":49,"column":19,"nodeType":"1557","messageId":"1558","endLine":49,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1556","line":51,"column":26,"nodeType":"1557","messageId":"1558","endLine":51,"endColumn":28},{"ruleId":"1555","severity":1,"message":"1556","line":54,"column":23,"nodeType":"1557","messageId":"1558","endLine":54,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":57,"column":23,"nodeType":"1557","messageId":"1558","endLine":57,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":60,"column":23,"nodeType":"1557","messageId":"1558","endLine":60,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":63,"column":23,"nodeType":"1557","messageId":"1558","endLine":63,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":66,"column":23,"nodeType":"1557","messageId":"1558","endLine":66,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":69,"column":23,"nodeType":"1557","messageId":"1558","endLine":69,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":72,"column":23,"nodeType":"1557","messageId":"1558","endLine":72,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":75,"column":23,"nodeType":"1557","messageId":"1558","endLine":75,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":78,"column":23,"nodeType":"1557","messageId":"1558","endLine":78,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":81,"column":23,"nodeType":"1557","messageId":"1558","endLine":81,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":84,"column":23,"nodeType":"1557","messageId":"1558","endLine":84,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":87,"column":23,"nodeType":"1557","messageId":"1558","endLine":87,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":235,"column":35,"nodeType":"1557","messageId":"1558","endLine":235,"endColumn":37},{"ruleId":"1555","severity":1,"message":"1556","line":236,"column":34,"nodeType":"1557","messageId":"1558","endLine":236,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":237,"column":34,"nodeType":"1557","messageId":"1558","endLine":237,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":238,"column":34,"nodeType":"1557","messageId":"1558","endLine":238,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":239,"column":34,"nodeType":"1557","messageId":"1558","endLine":239,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":240,"column":34,"nodeType":"1557","messageId":"1558","endLine":240,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":241,"column":34,"nodeType":"1557","messageId":"1558","endLine":241,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":242,"column":34,"nodeType":"1557","messageId":"1558","endLine":242,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":243,"column":34,"nodeType":"1557","messageId":"1558","endLine":243,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":244,"column":34,"nodeType":"1557","messageId":"1558","endLine":244,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":245,"column":34,"nodeType":"1557","messageId":"1558","endLine":245,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":246,"column":34,"nodeType":"1557","messageId":"1558","endLine":246,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":247,"column":34,"nodeType":"1557","messageId":"1558","endLine":247,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":248,"column":34,"nodeType":"1557","messageId":"1558","endLine":248,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":249,"column":34,"nodeType":"1557","messageId":"1558","endLine":249,"endColumn":36},{"ruleId":"1506","severity":1,"message":"1729","line":19,"column":10,"nodeType":"1508","messageId":"1509","endLine":19,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1730","line":19,"column":23,"nodeType":"1508","messageId":"1509","endLine":19,"endColumn":37},{"ruleId":"1555","severity":1,"message":"1556","line":37,"column":31,"nodeType":"1557","messageId":"1558","endLine":37,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1556","line":134,"column":48,"nodeType":"1557","messageId":"1558","endLine":134,"endColumn":50},{"ruleId":"1555","severity":1,"message":"1556","line":139,"column":54,"nodeType":"1557","messageId":"1558","endLine":139,"endColumn":56},{"ruleId":"1555","severity":1,"message":"1556","line":163,"column":48,"nodeType":"1557","messageId":"1558","endLine":163,"endColumn":50},{"ruleId":"1555","severity":1,"message":"1556","line":163,"column":76,"nodeType":"1557","messageId":"1558","endLine":163,"endColumn":78},{"ruleId":"1555","severity":1,"message":"1556","line":168,"column":54,"nodeType":"1557","messageId":"1558","endLine":168,"endColumn":56},{"ruleId":"1555","severity":1,"message":"1556","line":186,"column":54,"nodeType":"1557","messageId":"1558","endLine":186,"endColumn":56},{"ruleId":"1555","severity":1,"message":"1556","line":244,"column":37,"nodeType":"1557","messageId":"1558","endLine":244,"endColumn":39},{"ruleId":"1506","severity":1,"message":"1731","line":3,"column":8,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1732","line":4,"column":10,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1733","line":5,"column":8,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1734","line":6,"column":8,"nodeType":"1508","messageId":"1509","endLine":6,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1735","line":7,"column":10,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1642","line":11,"column":10,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1556","line":21,"column":43,"nodeType":"1557","messageId":"1558","endLine":21,"endColumn":45},{"ruleId":"1555","severity":1,"message":"1556","line":33,"column":50,"nodeType":"1557","messageId":"1558","endLine":33,"endColumn":52},{"ruleId":"1555","severity":1,"message":"1556","line":56,"column":50,"nodeType":"1557","messageId":"1558","endLine":56,"endColumn":52},{"ruleId":"1512","severity":1,"message":"1736","line":93,"column":6,"nodeType":"1514","endLine":93,"endColumn":50,"suggestions":"1737"},{"ruleId":"1555","severity":1,"message":"1556","line":103,"column":42,"nodeType":"1557","messageId":"1558","endLine":103,"endColumn":44},{"ruleId":"1555","severity":1,"message":"1556","line":111,"column":33,"nodeType":"1557","messageId":"1558","endLine":111,"endColumn":35},{"ruleId":"1555","severity":1,"message":"1556","line":119,"column":33,"nodeType":"1557","messageId":"1558","endLine":119,"endColumn":35},{"ruleId":"1506","severity":1,"message":"1738","line":2,"column":8,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":15},{"ruleId":"1512","severity":1,"message":"1739","line":21,"column":16,"nodeType":"1508","endLine":21,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1640","line":2,"column":10,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":15},{"ruleId":"1506","severity":1,"message":"1689","line":17,"column":3,"nodeType":"1508","messageId":"1509","endLine":17,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1740","line":126,"column":9,"nodeType":"1508","messageId":"1509","endLine":126,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1741","line":127,"column":13,"nodeType":"1508","messageId":"1509","endLine":127,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1577","line":10,"column":9,"nodeType":"1508","messageId":"1509","endLine":10,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1742","line":12,"column":18,"nodeType":"1508","messageId":"1509","endLine":12,"endColumn":27},{"ruleId":"1506","severity":1,"message":"1743","line":13,"column":10,"nodeType":"1508","messageId":"1509","endLine":13,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1744","line":22,"column":11,"nodeType":"1508","messageId":"1509","endLine":22,"endColumn":19},{"ruleId":"1745","severity":1,"message":"1746","line":28,"column":40,"nodeType":"1633","messageId":"1747","endLine":30,"endColumn":10},{"ruleId":"1512","severity":1,"message":"1570","line":41,"column":6,"nodeType":"1514","endLine":41,"endColumn":10,"suggestions":"1748"},{"ruleId":"1506","severity":1,"message":"1749","line":43,"column":10,"nodeType":"1508","messageId":"1509","endLine":43,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1750","line":50,"column":11,"nodeType":"1508","messageId":"1509","endLine":50,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1751","line":74,"column":9,"nodeType":"1508","messageId":"1509","endLine":74,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1555","severity":1,"message":"1556","line":37,"column":20,"nodeType":"1557","messageId":"1558","endLine":37,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1556","line":43,"column":23,"nodeType":"1557","messageId":"1558","endLine":43,"endColumn":25},{"ruleId":"1555","severity":1,"message":"1556","line":54,"column":33,"nodeType":"1557","messageId":"1558","endLine":54,"endColumn":35},{"ruleId":"1572","severity":1,"message":"1573","line":153,"column":19,"nodeType":"1574","endLine":153,"endColumn":81},{"ruleId":"1555","severity":1,"message":"1556","line":178,"column":43,"nodeType":"1557","messageId":"1558","endLine":178,"endColumn":45},{"ruleId":"1572","severity":1,"message":"1573","line":212,"column":17,"nodeType":"1574","endLine":212,"endColumn":79},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1512","severity":1,"message":"1752","line":50,"column":5,"nodeType":"1514","endLine":50,"endColumn":16,"suggestions":"1753"},{"ruleId":"1555","severity":1,"message":"1556","line":58,"column":20,"nodeType":"1557","messageId":"1558","endLine":58,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1556","line":64,"column":20,"nodeType":"1557","messageId":"1558","endLine":64,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1556","line":82,"column":35,"nodeType":"1557","messageId":"1558","endLine":82,"endColumn":37},{"ruleId":"1572","severity":1,"message":"1573","line":235,"column":19,"nodeType":"1574","endLine":235,"endColumn":81},{"ruleId":"1555","severity":1,"message":"1556","line":259,"column":45,"nodeType":"1557","messageId":"1558","endLine":259,"endColumn":47},{"ruleId":"1572","severity":1,"message":"1573","line":292,"column":17,"nodeType":"1574","endLine":292,"endColumn":79},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1754","line":16,"column":10,"nodeType":"1508","messageId":"1509","endLine":16,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1755","line":17,"column":10,"nodeType":"1508","messageId":"1509","endLine":17,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1756","line":18,"column":10,"nodeType":"1508","messageId":"1509","endLine":18,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1757","line":18,"column":21,"nodeType":"1508","messageId":"1509","endLine":18,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1556","line":40,"column":21,"nodeType":"1557","messageId":"1558","endLine":40,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":46,"column":24,"nodeType":"1557","messageId":"1558","endLine":46,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":57,"column":34,"nodeType":"1557","messageId":"1558","endLine":57,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":208,"column":54,"nodeType":"1557","messageId":"1558","endLine":208,"endColumn":56},{"ruleId":"1555","severity":1,"message":"1556","line":239,"column":43,"nodeType":"1557","messageId":"1558","endLine":239,"endColumn":45},{"ruleId":"1572","severity":1,"message":"1573","line":271,"column":19,"nodeType":"1574","endLine":271,"endColumn":81},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1758","line":11,"column":10,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1759","line":19,"column":9,"nodeType":"1508","messageId":"1509","endLine":19,"endColumn":24},{"ruleId":"1506","severity":1,"message":"1755","line":44,"column":10,"nodeType":"1508","messageId":"1509","endLine":44,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1760","line":52,"column":10,"nodeType":"1508","messageId":"1509","endLine":52,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1756","line":54,"column":10,"nodeType":"1508","messageId":"1509","endLine":54,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1761","line":61,"column":9,"nodeType":"1508","messageId":"1509","endLine":61,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1556","line":92,"column":21,"nodeType":"1557","messageId":"1558","endLine":92,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":98,"column":18,"nodeType":"1557","messageId":"1558","endLine":98,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1556","line":119,"column":34,"nodeType":"1557","messageId":"1558","endLine":119,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":218,"column":53,"nodeType":"1557","messageId":"1558","endLine":218,"endColumn":55},{"ruleId":"1555","severity":1,"message":"1556","line":435,"column":43,"nodeType":"1557","messageId":"1558","endLine":435,"endColumn":45},{"ruleId":"1572","severity":1,"message":"1573","line":467,"column":19,"nodeType":"1574","endLine":467,"endColumn":81},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1762","line":4,"column":10,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":25},{"ruleId":"1506","severity":1,"message":"1763","line":10,"column":8,"nodeType":"1508","messageId":"1509","endLine":10,"endColumn":12},{"ruleId":"1555","severity":1,"message":"1556","line":84,"column":21,"nodeType":"1557","messageId":"1558","endLine":84,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":90,"column":24,"nodeType":"1557","messageId":"1558","endLine":90,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":91,"column":25,"nodeType":"1557","messageId":"1558","endLine":91,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1556","line":92,"column":26,"nodeType":"1557","messageId":"1558","endLine":92,"endColumn":28},{"ruleId":"1555","severity":1,"message":"1556","line":111,"column":34,"nodeType":"1557","messageId":"1558","endLine":111,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":389,"column":43,"nodeType":"1557","messageId":"1558","endLine":389,"endColumn":45},{"ruleId":"1572","severity":1,"message":"1573","line":421,"column":19,"nodeType":"1574","endLine":421,"endColumn":81},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1754","line":20,"column":10,"nodeType":"1508","messageId":"1509","endLine":20,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1755","line":21,"column":10,"nodeType":"1508","messageId":"1509","endLine":21,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1756","line":27,"column":10,"nodeType":"1508","messageId":"1509","endLine":27,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1757","line":27,"column":21,"nodeType":"1508","messageId":"1509","endLine":27,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1556","line":65,"column":21,"nodeType":"1557","messageId":"1558","endLine":65,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":71,"column":24,"nodeType":"1557","messageId":"1558","endLine":71,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":77,"column":25,"nodeType":"1557","messageId":"1558","endLine":77,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1556","line":83,"column":24,"nodeType":"1557","messageId":"1558","endLine":83,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":99,"column":34,"nodeType":"1557","messageId":"1558","endLine":99,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":341,"column":53,"nodeType":"1557","messageId":"1558","endLine":341,"endColumn":55},{"ruleId":"1555","severity":1,"message":"1556","line":379,"column":43,"nodeType":"1557","messageId":"1558","endLine":379,"endColumn":45},{"ruleId":"1572","severity":1,"message":"1573","line":411,"column":19,"nodeType":"1574","endLine":411,"endColumn":81},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1764","line":8,"column":41,"nodeType":"1508","messageId":"1509","endLine":8,"endColumn":50},{"ruleId":"1506","severity":1,"message":"1765","line":9,"column":8,"nodeType":"1508","messageId":"1509","endLine":9,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1766","line":11,"column":8,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1767","line":12,"column":8,"nodeType":"1508","messageId":"1509","endLine":12,"endColumn":11},{"ruleId":"1506","severity":1,"message":"1641","line":13,"column":8,"nodeType":"1508","messageId":"1509","endLine":13,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1768","line":14,"column":8,"nodeType":"1508","messageId":"1509","endLine":14,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1769","line":15,"column":8,"nodeType":"1508","messageId":"1509","endLine":15,"endColumn":15},{"ruleId":"1506","severity":1,"message":"1754","line":37,"column":10,"nodeType":"1508","messageId":"1509","endLine":37,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1770","line":40,"column":10,"nodeType":"1508","messageId":"1509","endLine":40,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1771","line":40,"column":19,"nodeType":"1508","messageId":"1509","endLine":40,"endColumn":29},{"ruleId":"1506","severity":1,"message":"1756","line":41,"column":10,"nodeType":"1508","messageId":"1509","endLine":41,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1757","line":41,"column":21,"nodeType":"1508","messageId":"1509","endLine":41,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1556","line":64,"column":21,"nodeType":"1557","messageId":"1558","endLine":64,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":70,"column":24,"nodeType":"1557","messageId":"1558","endLine":70,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":85,"column":34,"nodeType":"1557","messageId":"1558","endLine":85,"endColumn":36},{"ruleId":"1506","severity":1,"message":"1772","line":138,"column":9,"nodeType":"1508","messageId":"1509","endLine":138,"endColumn":13},{"ruleId":"1773","severity":1,"message":"1774","line":172,"column":9,"nodeType":"1775","messageId":"1558","endLine":172,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1556","line":410,"column":43,"nodeType":"1557","messageId":"1558","endLine":410,"endColumn":45},{"ruleId":"1572","severity":1,"message":"1573","line":442,"column":19,"nodeType":"1574","endLine":442,"endColumn":81},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1755","line":50,"column":10,"nodeType":"1508","messageId":"1509","endLine":50,"endColumn":20},{"ruleId":"1512","severity":1,"message":"1752","line":76,"column":6,"nodeType":"1514","endLine":76,"endColumn":17,"suggestions":"1776"},{"ruleId":"1555","severity":1,"message":"1556","line":83,"column":21,"nodeType":"1557","messageId":"1558","endLine":83,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":89,"column":24,"nodeType":"1557","messageId":"1558","endLine":89,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":109,"column":36,"nodeType":"1557","messageId":"1558","endLine":109,"endColumn":38},{"ruleId":"1572","severity":1,"message":"1573","line":349,"column":19,"nodeType":"1574","endLine":349,"endColumn":81},{"ruleId":"1555","severity":1,"message":"1556","line":373,"column":43,"nodeType":"1557","messageId":"1558","endLine":373,"endColumn":45},{"ruleId":"1572","severity":1,"message":"1573","line":405,"column":19,"nodeType":"1574","endLine":405,"endColumn":81},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1754","line":31,"column":10,"nodeType":"1508","messageId":"1509","endLine":31,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1755","line":32,"column":10,"nodeType":"1508","messageId":"1509","endLine":32,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1556","line":62,"column":21,"nodeType":"1557","messageId":"1558","endLine":62,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":79,"column":34,"nodeType":"1557","messageId":"1558","endLine":79,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":334,"column":35,"nodeType":"1557","messageId":"1558","endLine":334,"endColumn":37},{"ruleId":"1555","severity":1,"message":"1556","line":347,"column":35,"nodeType":"1557","messageId":"1558","endLine":347,"endColumn":37},{"ruleId":"1555","severity":1,"message":"1556","line":360,"column":35,"nodeType":"1557","messageId":"1558","endLine":360,"endColumn":37},{"ruleId":"1555","severity":1,"message":"1556","line":398,"column":43,"nodeType":"1557","messageId":"1558","endLine":398,"endColumn":45},{"ruleId":"1572","severity":1,"message":"1573","line":430,"column":19,"nodeType":"1574","endLine":430,"endColumn":81},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1754","line":31,"column":10,"nodeType":"1508","messageId":"1509","endLine":31,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1755","line":32,"column":10,"nodeType":"1508","messageId":"1509","endLine":32,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1564","line":83,"column":19,"nodeType":"1557","messageId":"1558","endLine":83,"endColumn":21},{"ruleId":"1555","severity":1,"message":"1556","line":131,"column":14,"nodeType":"1557","messageId":"1558","endLine":131,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1556","line":146,"column":34,"nodeType":"1557","messageId":"1558","endLine":146,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":295,"column":49,"nodeType":"1557","messageId":"1558","endLine":295,"endColumn":51},{"ruleId":"1555","severity":1,"message":"1556","line":305,"column":49,"nodeType":"1557","messageId":"1558","endLine":305,"endColumn":51},{"ruleId":"1555","severity":1,"message":"1556","line":322,"column":48,"nodeType":"1557","messageId":"1558","endLine":322,"endColumn":50},{"ruleId":"1555","severity":1,"message":"1556","line":587,"column":43,"nodeType":"1557","messageId":"1558","endLine":587,"endColumn":45},{"ruleId":"1572","severity":1,"message":"1573","line":619,"column":19,"nodeType":"1574","endLine":619,"endColumn":81},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1765","line":10,"column":8,"nodeType":"1508","messageId":"1509","endLine":10,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1756","line":40,"column":10,"nodeType":"1508","messageId":"1509","endLine":40,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1556","line":70,"column":14,"nodeType":"1557","messageId":"1558","endLine":70,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1556","line":76,"column":24,"nodeType":"1557","messageId":"1558","endLine":76,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":77,"column":25,"nodeType":"1557","messageId":"1558","endLine":77,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1556","line":78,"column":26,"nodeType":"1557","messageId":"1558","endLine":78,"endColumn":28},{"ruleId":"1555","severity":1,"message":"1556","line":93,"column":34,"nodeType":"1557","messageId":"1558","endLine":93,"endColumn":36},{"ruleId":"1555","severity":1,"message":"1556","line":352,"column":43,"nodeType":"1557","messageId":"1558","endLine":352,"endColumn":45},{"ruleId":"1572","severity":1,"message":"1573","line":384,"column":19,"nodeType":"1574","endLine":384,"endColumn":81},{"ruleId":"1506","severity":1,"message":"1777","line":1,"column":10,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1731","line":4,"column":8,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1778","line":20,"column":21,"nodeType":"1508","messageId":"1509","endLine":20,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1556","line":121,"column":38,"nodeType":"1557","messageId":"1558","endLine":121,"endColumn":40},{"ruleId":"1555","severity":1,"message":"1556","line":122,"column":35,"nodeType":"1557","messageId":"1558","endLine":122,"endColumn":37},{"ruleId":"1506","severity":1,"message":"1687","line":1,"column":17,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":26},{"ruleId":"1506","severity":1,"message":"1660","line":88,"column":11,"nodeType":"1508","messageId":"1509","endLine":88,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1556","line":115,"column":42,"nodeType":"1557","messageId":"1558","endLine":115,"endColumn":44},{"ruleId":"1506","severity":1,"message":"1660","line":152,"column":11,"nodeType":"1508","messageId":"1509","endLine":152,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1660","line":166,"column":11,"nodeType":"1508","messageId":"1509","endLine":166,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1556","line":203,"column":42,"nodeType":"1557","messageId":"1558","endLine":203,"endColumn":44},{"ruleId":"1506","severity":1,"message":"1660","line":204,"column":11,"nodeType":"1508","messageId":"1509","endLine":204,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1660","line":218,"column":11,"nodeType":"1508","messageId":"1509","endLine":218,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1660","line":233,"column":11,"nodeType":"1508","messageId":"1509","endLine":233,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1556","line":278,"column":42,"nodeType":"1557","messageId":"1558","endLine":278,"endColumn":44},{"ruleId":"1555","severity":1,"message":"1556","line":40,"column":71,"nodeType":"1557","messageId":"1558","endLine":40,"endColumn":73},{"ruleId":"1555","severity":1,"message":"1556","line":54,"column":36,"nodeType":"1557","messageId":"1558","endLine":54,"endColumn":38},{"ruleId":"1555","severity":1,"message":"1556","line":57,"column":36,"nodeType":"1557","messageId":"1558","endLine":57,"endColumn":38},{"ruleId":"1555","severity":1,"message":"1556","line":60,"column":36,"nodeType":"1557","messageId":"1558","endLine":60,"endColumn":38},{"ruleId":"1512","severity":1,"message":"1779","line":64,"column":6,"nodeType":"1514","endLine":64,"endColumn":18,"suggestions":"1780"},{"ruleId":"1555","severity":1,"message":"1556","line":210,"column":37,"nodeType":"1557","messageId":"1558","endLine":210,"endColumn":39},{"ruleId":"1555","severity":1,"message":"1556","line":215,"column":37,"nodeType":"1557","messageId":"1558","endLine":215,"endColumn":39},{"ruleId":"1555","severity":1,"message":"1556","line":220,"column":37,"nodeType":"1557","messageId":"1558","endLine":220,"endColumn":39},{"ruleId":"1506","severity":1,"message":"1687","line":1,"column":17,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":26},{"ruleId":"1506","severity":1,"message":"1642","line":17,"column":10,"nodeType":"1508","messageId":"1509","endLine":17,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1639","line":21,"column":10,"nodeType":"1508","messageId":"1509","endLine":21,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1766","line":26,"column":8,"nodeType":"1508","messageId":"1509","endLine":26,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1767","line":27,"column":8,"nodeType":"1508","messageId":"1509","endLine":27,"endColumn":11},{"ruleId":"1506","severity":1,"message":"1765","line":28,"column":8,"nodeType":"1508","messageId":"1509","endLine":28,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1641","line":29,"column":8,"nodeType":"1508","messageId":"1509","endLine":29,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1768","line":30,"column":8,"nodeType":"1508","messageId":"1509","endLine":30,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1781","line":31,"column":8,"nodeType":"1508","messageId":"1509","endLine":31,"endColumn":24},{"ruleId":"1555","severity":1,"message":"1556","line":74,"column":24,"nodeType":"1557","messageId":"1558","endLine":74,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":77,"column":24,"nodeType":"1557","messageId":"1558","endLine":77,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":80,"column":24,"nodeType":"1557","messageId":"1558","endLine":80,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":83,"column":24,"nodeType":"1557","messageId":"1558","endLine":83,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":86,"column":24,"nodeType":"1557","messageId":"1558","endLine":86,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":89,"column":24,"nodeType":"1557","messageId":"1558","endLine":89,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":92,"column":24,"nodeType":"1557","messageId":"1558","endLine":92,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":95,"column":24,"nodeType":"1557","messageId":"1558","endLine":95,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":98,"column":24,"nodeType":"1557","messageId":"1558","endLine":98,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":101,"column":24,"nodeType":"1557","messageId":"1558","endLine":101,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":104,"column":24,"nodeType":"1557","messageId":"1558","endLine":104,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":107,"column":24,"nodeType":"1557","messageId":"1558","endLine":107,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":110,"column":24,"nodeType":"1557","messageId":"1558","endLine":110,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":113,"column":24,"nodeType":"1557","messageId":"1558","endLine":113,"endColumn":26},{"ruleId":"1555","severity":1,"message":"1556","line":116,"column":24,"nodeType":"1557","messageId":"1558","endLine":116,"endColumn":26},{"ruleId":"1506","severity":1,"message":"1782","line":131,"column":9,"nodeType":"1508","messageId":"1509","endLine":131,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1783","line":164,"column":10,"nodeType":"1508","messageId":"1509","endLine":164,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1784","line":164,"column":19,"nodeType":"1508","messageId":"1509","endLine":164,"endColumn":29},{"ruleId":"1572","severity":1,"message":"1573","line":320,"column":19,"nodeType":"1574","endLine":320,"endColumn":57},{"ruleId":"1506","severity":1,"message":"1541","line":5,"column":8,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":29},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1680","line":3,"column":8,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1785","line":2,"column":8,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1786","line":5,"column":8,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":21},{"ruleId":"1512","severity":1,"message":"1787","line":19,"column":6,"nodeType":"1514","endLine":19,"endColumn":8,"suggestions":"1788"},{"ruleId":"1506","severity":1,"message":"1789","line":7,"column":8,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1680","line":3,"column":8,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1790","line":7,"column":2,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1521","line":13,"column":8,"nodeType":"1508","messageId":"1509","endLine":13,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1790","line":11,"column":3,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1639","line":14,"column":10,"nodeType":"1508","messageId":"1509","endLine":14,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1521","line":17,"column":8,"nodeType":"1508","messageId":"1509","endLine":17,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1791","line":18,"column":10,"nodeType":"1508","messageId":"1509","endLine":18,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1792","line":29,"column":10,"nodeType":"1508","messageId":"1509","endLine":29,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1793","line":30,"column":10,"nodeType":"1508","messageId":"1509","endLine":30,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1794","line":30,"column":23,"nodeType":"1508","messageId":"1509","endLine":30,"endColumn":37},{"ruleId":"1506","severity":1,"message":"1795","line":31,"column":18,"nodeType":"1508","messageId":"1509","endLine":31,"endColumn":27},{"ruleId":"1506","severity":1,"message":"1796","line":38,"column":12,"nodeType":"1508","messageId":"1509","endLine":38,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1797","line":85,"column":9,"nodeType":"1508","messageId":"1509","endLine":85,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1798","line":90,"column":9,"nodeType":"1508","messageId":"1509","endLine":90,"endColumn":25},{"ruleId":"1506","severity":1,"message":"1799","line":118,"column":9,"nodeType":"1508","messageId":"1509","endLine":118,"endColumn":16},{"ruleId":"1512","severity":1,"message":"1800","line":162,"column":6,"nodeType":"1514","endLine":162,"endColumn":8,"suggestions":"1801"},{"ruleId":"1572","severity":1,"message":"1573","line":187,"column":19,"nodeType":"1574","endLine":187,"endColumn":60},{"ruleId":"1555","severity":1,"message":"1556","line":29,"column":27,"nodeType":"1557","messageId":"1558","endLine":29,"endColumn":29},{"ruleId":"1555","severity":1,"message":"1556","line":29,"column":51,"nodeType":"1557","messageId":"1558","endLine":29,"endColumn":53},{"ruleId":"1555","severity":1,"message":"1556","line":47,"column":31,"nodeType":"1557","messageId":"1558","endLine":47,"endColumn":33},{"ruleId":"1555","severity":1,"message":"1556","line":48,"column":18,"nodeType":"1557","messageId":"1558","endLine":48,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1556","line":49,"column":18,"nodeType":"1557","messageId":"1558","endLine":49,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1556","line":50,"column":18,"nodeType":"1557","messageId":"1558","endLine":50,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1556","line":71,"column":18,"nodeType":"1557","messageId":"1558","endLine":71,"endColumn":20},{"ruleId":"1555","severity":1,"message":"1556","line":90,"column":20,"nodeType":"1557","messageId":"1558","endLine":90,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1556","line":110,"column":20,"nodeType":"1557","messageId":"1558","endLine":110,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1556","line":129,"column":20,"nodeType":"1557","messageId":"1558","endLine":129,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1556","line":148,"column":20,"nodeType":"1557","messageId":"1558","endLine":148,"endColumn":22},{"ruleId":"1555","severity":1,"message":"1556","line":167,"column":20,"nodeType":"1557","messageId":"1558","endLine":167,"endColumn":22},{"ruleId":"1512","severity":1,"message":"1802","line":221,"column":6,"nodeType":"1514","endLine":221,"endColumn":35,"suggestions":"1803"},{"ruleId":"1512","severity":1,"message":"1804","line":227,"column":6,"nodeType":"1514","endLine":227,"endColumn":10,"suggestions":"1805"},{"ruleId":"1555","severity":1,"message":"1556","line":239,"column":17,"nodeType":"1557","messageId":"1558","endLine":239,"endColumn":19},{"ruleId":"1555","severity":1,"message":"1556","line":250,"column":25,"nodeType":"1557","messageId":"1558","endLine":250,"endColumn":27},{"ruleId":"1555","severity":1,"message":"1556","line":261,"column":30,"nodeType":"1557","messageId":"1558","endLine":261,"endColumn":32},{"ruleId":"1656","severity":1,"message":"1657","line":290,"column":11,"nodeType":"1658","messageId":"1659","endLine":303,"endColumn":12},{"ruleId":"1656","severity":1,"message":"1657","line":313,"column":11,"nodeType":"1658","messageId":"1659","endLine":327,"endColumn":12},{"ruleId":"1651","severity":1,"message":"1652","line":511,"column":15,"nodeType":"1574","endLine":517,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1516","line":2,"column":25,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":28},{"ruleId":"1506","severity":1,"message":"1517","line":2,"column":30,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":33},{"ruleId":"1506","severity":1,"message":"1672","line":2,"column":35,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1640","line":2,"column":42,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":47},{"ruleId":"1506","severity":1,"message":"1806","line":3,"column":8,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1577","line":14,"column":9,"nodeType":"1508","messageId":"1509","endLine":14,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1516","line":1,"column":25,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":28},{"ruleId":"1506","severity":1,"message":"1517","line":1,"column":30,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":33},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1807","line":24,"column":10,"nodeType":"1508","messageId":"1509","endLine":24,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1808","line":24,"column":19,"nodeType":"1508","messageId":"1509","endLine":24,"endColumn":29},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1756","line":38,"column":10,"nodeType":"1508","messageId":"1509","endLine":38,"endColumn":19},{"ruleId":"1512","severity":1,"message":"1752","line":54,"column":6,"nodeType":"1514","endLine":54,"endColumn":17,"suggestions":"1809"},{"ruleId":"1555","severity":1,"message":"1556","line":61,"column":21,"nodeType":"1557","messageId":"1558","endLine":61,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":75,"column":36,"nodeType":"1557","messageId":"1558","endLine":75,"endColumn":38},{"ruleId":"1506","severity":1,"message":"1660","line":101,"column":11,"nodeType":"1508","messageId":"1509","endLine":101,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1556","line":324,"column":43,"nodeType":"1557","messageId":"1558","endLine":324,"endColumn":45},{"ruleId":"1572","severity":1,"message":"1573","line":356,"column":19,"nodeType":"1574","endLine":356,"endColumn":81},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1765","line":9,"column":8,"nodeType":"1508","messageId":"1509","endLine":9,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1755","line":43,"column":10,"nodeType":"1508","messageId":"1509","endLine":43,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1756","line":45,"column":10,"nodeType":"1508","messageId":"1509","endLine":45,"endColumn":19},{"ruleId":"1512","severity":1,"message":"1752","line":62,"column":6,"nodeType":"1514","endLine":62,"endColumn":17,"suggestions":"1810"},{"ruleId":"1555","severity":1,"message":"1556","line":69,"column":21,"nodeType":"1557","messageId":"1558","endLine":69,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":85,"column":36,"nodeType":"1557","messageId":"1558","endLine":85,"endColumn":38},{"ruleId":"1506","severity":1,"message":"1660","line":112,"column":11,"nodeType":"1508","messageId":"1509","endLine":112,"endColumn":14},{"ruleId":"1555","severity":1,"message":"1556","line":340,"column":43,"nodeType":"1557","messageId":"1558","endLine":340,"endColumn":45},{"ruleId":"1572","severity":1,"message":"1573","line":372,"column":19,"nodeType":"1574","endLine":372,"endColumn":81},{"ruleId":"1506","severity":1,"message":"1672","line":1,"column":35,"nodeType":"1508","messageId":"1509","endLine":1,"endColumn":40},{"ruleId":"1506","severity":1,"message":"1811","line":16,"column":27,"nodeType":"1508","messageId":"1509","endLine":16,"endColumn":39},{"ruleId":"1506","severity":1,"message":"1707","line":23,"column":10,"nodeType":"1508","messageId":"1509","endLine":23,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1708","line":23,"column":19,"nodeType":"1508","messageId":"1509","endLine":23,"endColumn":29},{"ruleId":"1506","severity":1,"message":"1756","line":24,"column":10,"nodeType":"1508","messageId":"1509","endLine":24,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1757","line":24,"column":21,"nodeType":"1508","messageId":"1509","endLine":24,"endColumn":33},{"ruleId":"1512","severity":1,"message":"1812","line":87,"column":6,"nodeType":"1514","endLine":87,"endColumn":36,"suggestions":"1813"},{"ruleId":"1555","severity":1,"message":"1556","line":94,"column":21,"nodeType":"1557","messageId":"1558","endLine":94,"endColumn":23},{"ruleId":"1555","severity":1,"message":"1556","line":115,"column":36,"nodeType":"1557","messageId":"1558","endLine":115,"endColumn":38},{"ruleId":"1555","severity":1,"message":"1556","line":364,"column":43,"nodeType":"1557","messageId":"1558","endLine":364,"endColumn":45},{"ruleId":"1572","severity":1,"message":"1573","line":396,"column":19,"nodeType":"1574","endLine":396,"endColumn":81},{"ruleId":"1506","severity":1,"message":"1584","line":3,"column":10,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1814","line":4,"column":10,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1815","line":8,"column":10,"nodeType":"1508","messageId":"1509","endLine":8,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1816","line":9,"column":8,"nodeType":"1508","messageId":"1509","endLine":9,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1516","line":2,"column":25,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":28},{"ruleId":"1506","severity":1,"message":"1517","line":2,"column":30,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":33},{"ruleId":"1506","severity":1,"message":"1672","line":2,"column":35,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":40},{"ruleId":"1555","severity":1,"message":"1556","line":33,"column":14,"nodeType":"1557","messageId":"1558","endLine":33,"endColumn":16},{"ruleId":"1555","severity":1,"message":"1556","line":38,"column":17,"nodeType":"1557","messageId":"1558","endLine":38,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1517","line":2,"column":10,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1516","line":2,"column":15,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1817","line":3,"column":10,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1818","line":4,"column":8,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1540","line":5,"column":8,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1541","line":6,"column":8,"nodeType":"1508","messageId":"1509","endLine":6,"endColumn":29},{"ruleId":"1506","severity":1,"message":"1584","line":7,"column":10,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1639","line":8,"column":10,"nodeType":"1508","messageId":"1509","endLine":8,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1640","line":8,"column":18,"nodeType":"1508","messageId":"1509","endLine":8,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1542","line":8,"column":25,"nodeType":"1508","messageId":"1509","endLine":8,"endColumn":33},{"ruleId":"1506","severity":1,"message":"1819","line":10,"column":5,"nodeType":"1508","messageId":"1509","endLine":10,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1820","line":11,"column":5,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1821","line":12,"column":5,"nodeType":"1508","messageId":"1509","endLine":12,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1822","line":13,"column":5,"nodeType":"1508","messageId":"1509","endLine":13,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1823","line":14,"column":5,"nodeType":"1508","messageId":"1509","endLine":14,"endColumn":26},{"ruleId":"1506","severity":1,"message":"1824","line":15,"column":5,"nodeType":"1508","messageId":"1509","endLine":15,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1825","line":16,"column":5,"nodeType":"1508","messageId":"1509","endLine":16,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1826","line":17,"column":5,"nodeType":"1508","messageId":"1509","endLine":17,"endColumn":26},{"ruleId":"1506","severity":1,"message":"1732","line":18,"column":5,"nodeType":"1508","messageId":"1509","endLine":18,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1687","line":20,"column":12,"nodeType":"1508","messageId":"1509","endLine":20,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1544","line":26,"column":10,"nodeType":"1508","messageId":"1509","endLine":26,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1545","line":27,"column":10,"nodeType":"1508","messageId":"1509","endLine":27,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1546","line":28,"column":10,"nodeType":"1508","messageId":"1509","endLine":28,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1827","line":29,"column":12,"nodeType":"1508","messageId":"1509","endLine":29,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1828","line":30,"column":10,"nodeType":"1508","messageId":"1509","endLine":30,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1829","line":31,"column":10,"nodeType":"1508","messageId":"1509","endLine":31,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1830","line":32,"column":10,"nodeType":"1508","messageId":"1509","endLine":32,"endColumn":27},{"ruleId":"1506","severity":1,"message":"1536","line":36,"column":12,"nodeType":"1508","messageId":"1509","endLine":36,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1689","line":40,"column":5,"nodeType":"1508","messageId":"1509","endLine":40,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1665","line":51,"column":10,"nodeType":"1508","messageId":"1509","endLine":51,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1831","line":77,"column":12,"nodeType":"1508","messageId":"1509","endLine":77,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1832","line":77,"column":24,"nodeType":"1508","messageId":"1509","endLine":77,"endColumn":37},{"ruleId":"1506","severity":1,"message":"1661","line":80,"column":12,"nodeType":"1508","messageId":"1509","endLine":80,"endColumn":27},{"ruleId":"1506","severity":1,"message":"1662","line":80,"column":29,"nodeType":"1508","messageId":"1509","endLine":80,"endColumn":43},{"ruleId":"1506","severity":1,"message":"1833","line":218,"column":11,"nodeType":"1508","messageId":"1509","endLine":218,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1517","line":2,"column":10,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1516","line":2,"column":15,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1817","line":3,"column":10,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1818","line":4,"column":8,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1540","line":5,"column":8,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1541","line":6,"column":8,"nodeType":"1508","messageId":"1509","endLine":6,"endColumn":29},{"ruleId":"1506","severity":1,"message":"1584","line":7,"column":10,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1639","line":8,"column":10,"nodeType":"1508","messageId":"1509","endLine":8,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1640","line":8,"column":18,"nodeType":"1508","messageId":"1509","endLine":8,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1819","line":10,"column":5,"nodeType":"1508","messageId":"1509","endLine":10,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1820","line":11,"column":5,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1821","line":12,"column":5,"nodeType":"1508","messageId":"1509","endLine":12,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1822","line":13,"column":5,"nodeType":"1508","messageId":"1509","endLine":13,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1823","line":14,"column":5,"nodeType":"1508","messageId":"1509","endLine":14,"endColumn":26},{"ruleId":"1506","severity":1,"message":"1824","line":15,"column":5,"nodeType":"1508","messageId":"1509","endLine":15,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1825","line":16,"column":5,"nodeType":"1508","messageId":"1509","endLine":16,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1826","line":17,"column":5,"nodeType":"1508","messageId":"1509","endLine":17,"endColumn":26},{"ruleId":"1506","severity":1,"message":"1732","line":18,"column":5,"nodeType":"1508","messageId":"1509","endLine":18,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1687","line":20,"column":12,"nodeType":"1508","messageId":"1509","endLine":20,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1543","line":25,"column":10,"nodeType":"1508","messageId":"1509","endLine":25,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1546","line":28,"column":10,"nodeType":"1508","messageId":"1509","endLine":28,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1827","line":29,"column":12,"nodeType":"1508","messageId":"1509","endLine":29,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1828","line":30,"column":10,"nodeType":"1508","messageId":"1509","endLine":30,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1829","line":31,"column":10,"nodeType":"1508","messageId":"1509","endLine":31,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1830","line":32,"column":10,"nodeType":"1508","messageId":"1509","endLine":32,"endColumn":27},{"ruleId":"1506","severity":1,"message":"1536","line":36,"column":12,"nodeType":"1508","messageId":"1509","endLine":36,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1689","line":40,"column":5,"nodeType":"1508","messageId":"1509","endLine":40,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1665","line":51,"column":10,"nodeType":"1508","messageId":"1509","endLine":51,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1831","line":77,"column":12,"nodeType":"1508","messageId":"1509","endLine":77,"endColumn":22},{"ruleId":"1506","severity":1,"message":"1832","line":77,"column":24,"nodeType":"1508","messageId":"1509","endLine":77,"endColumn":37},{"ruleId":"1506","severity":1,"message":"1661","line":80,"column":12,"nodeType":"1508","messageId":"1509","endLine":80,"endColumn":27},{"ruleId":"1506","severity":1,"message":"1662","line":80,"column":29,"nodeType":"1508","messageId":"1509","endLine":80,"endColumn":43},{"ruleId":"1506","severity":1,"message":"1833","line":141,"column":11,"nodeType":"1508","messageId":"1509","endLine":141,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1517","line":2,"column":10,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":13},{"ruleId":"1506","severity":1,"message":"1516","line":2,"column":15,"nodeType":"1508","messageId":"1509","endLine":2,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1817","line":3,"column":10,"nodeType":"1508","messageId":"1509","endLine":3,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1818","line":4,"column":8,"nodeType":"1508","messageId":"1509","endLine":4,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1540","line":5,"column":8,"nodeType":"1508","messageId":"1509","endLine":5,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1541","line":6,"column":8,"nodeType":"1508","messageId":"1509","endLine":6,"endColumn":29},{"ruleId":"1506","severity":1,"message":"1584","line":7,"column":10,"nodeType":"1508","messageId":"1509","endLine":7,"endColumn":14},{"ruleId":"1506","severity":1,"message":"1640","line":8,"column":18,"nodeType":"1508","messageId":"1509","endLine":8,"endColumn":23},{"ruleId":"1506","severity":1,"message":"1819","line":10,"column":3,"nodeType":"1508","messageId":"1509","endLine":10,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1820","line":11,"column":3,"nodeType":"1508","messageId":"1509","endLine":11,"endColumn":17},{"ruleId":"1506","severity":1,"message":"1821","line":12,"column":3,"nodeType":"1508","messageId":"1509","endLine":12,"endColumn":15},{"ruleId":"1506","severity":1,"message":"1822","line":13,"column":3,"nodeType":"1508","messageId":"1509","endLine":13,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1823","line":14,"column":3,"nodeType":"1508","messageId":"1509","endLine":14,"endColumn":24},{"ruleId":"1506","severity":1,"message":"1824","line":15,"column":3,"nodeType":"1508","messageId":"1509","endLine":15,"endColumn":16},{"ruleId":"1506","severity":1,"message":"1825","line":16,"column":3,"nodeType":"1508","messageId":"1509","endLine":16,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1826","line":17,"column":3,"nodeType":"1508","messageId":"1509","endLine":17,"endColumn":24},{"ruleId":"1506","severity":1,"message":"1732","line":18,"column":3,"nodeType":"1508","messageId":"1509","endLine":18,"endColumn":11},{"ruleId":"1506","severity":1,"message":"1687","line":20,"column":10,"nodeType":"1508","messageId":"1509","endLine":20,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1827","line":29,"column":10,"nodeType":"1508","messageId":"1509","endLine":29,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1828","line":30,"column":8,"nodeType":"1508","messageId":"1509","endLine":30,"endColumn":19},{"ruleId":"1506","severity":1,"message":"1829","line":31,"column":8,"nodeType":"1508","messageId":"1509","endLine":31,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1830","line":32,"column":8,"nodeType":"1508","messageId":"1509","endLine":32,"endColumn":25},{"ruleId":"1506","severity":1,"message":"1689","line":40,"column":3,"nodeType":"1508","messageId":"1509","endLine":40,"endColumn":20},{"ruleId":"1506","severity":1,"message":"1834","line":307,"column":11,"nodeType":"1508","messageId":"1509","endLine":307,"endColumn":21},{"ruleId":"1506","severity":1,"message":"1835","line":317,"column":11,"nodeType":"1508","messageId":"1509","endLine":317,"endColumn":18},{"ruleId":"1506","severity":1,"message":"1836","line":322,"column":11,"nodeType":"1508","messageId":"1509","endLine":322,"endColumn":18},"no-native-reassign",["1837"],"no-negated-in-lhs",["1838"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'io' is defined but never used.","'Error404' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.","ArrayExpression",["1839"],"'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'LoginSocialGoogle' is defined but never used.","'IResolveParams' is defined but never used.","'googleIcon' is defined but never used.","'REDIRECT_URI' is assigned a value but never used.","'setName' is assigned a value but never used.","'onSignup' is assigned a value but never used.","'provider' is assigned a value but never used.","'setProvider' is assigned a value but never used.","'profile' is assigned a value but never used.","'setProfile' is assigned a value but never used.","'onLoginStart' is assigned a value but never used.","'onSocialLogin' is assigned a value but never used.","'GET_PERMISSION_FAILED_ACTION' is defined but never used.","'testDaySchudele' is defined but never used.","'reportsList' is defined but never used.","'Verification' is defined but never used.","'searchIcon' is defined but never used.","'listIcon' is defined but never used.","'useSWR' is defined but never used.","React Hook useEffect has a missing dependency: 'callAllCompApi'. Either include it or remove the dependency array.",["1840"],"'quickPlayIcon' is defined but never used.","'defaultComparisonIcon' is defined but never used.","'Dropdown' is defined but never used.","'moment' is defined but never used.","'menuIcon' is defined but never used.","'deleteIcon' is defined but never used.","'edit' is defined but never used.","'selectedScreen' is assigned a value but never used.","'setSelectedScreen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSchedule'. Either include it or remove the dependency array.",["1841"],"'handleEditSchedule' is assigned a value but never used.","'handleDefaultScreen' is assigned a value but never used.","'convertTimestampTo12HourFormat' is defined but never used.","'findEndTime' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'formatError' is defined but never used.","'runLogoutTimer' is defined but never used.","'signUp' is defined but never used.","'verification2fa' is defined but never used.","'axios' is defined but never used.","Expected '!==' and instead saw '!='.","'response' is assigned a value but never used.","'da' is defined but never used.","'activeCard' is assigned a value but never used.","'setActiveCard' is assigned a value but never used.","'selectedButtonIndex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callAllDaySequence'. Either include it or remove the dependency array.",["1842"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'submitHandler' is assigned a value but never used.","'nameAvatar' is defined but never used.","'history' is assigned a value but never used.","'id' is assigned a value but never used.","'handlePublishcOpen' is assigned a value but never used.","'handleWeekCellChange' is assigned a value but never used.","'useRef' is defined but never used.","'getAllMedia' is defined but never used.","'getAllDaySequence' is defined but never used.","'Link' is defined but never used.","'MyCustomPlugin' is assigned a value but never used.","'sequence' is assigned a value but never used.","'setSequence' is assigned a value but never used.","'schedulename' is assigned a value but never used.","'mutate' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"timing\"] found.","Property","unnecessarilyComputedProperty",{"range":"1843","text":"1844"},"Unnecessarily computed property ['startTime'] found.",{"range":"1845","text":"1846"},"Unnecessarily computed property ['endTime'] found.",{"range":"1847","text":"1848"},{"range":"1849","text":"1844"},{"range":"1850","text":"1844"},"Unnecessarily computed property [\"startTime\"] found.",{"range":"1851","text":"1852"},"Unnecessarily computed property [\"endTime\"] found.",{"range":"1853","text":"1854"},{"range":"1855","text":"1844"},{"range":"1856","text":"1852"},{"range":"1857","text":"1854"},{"range":"1858","text":"1844"},"React Hook useEffect has a missing dependency: 'callSingleDaySequence'. Either include it or remove the dependency array.",["1859"],{"range":"1860","text":"1844"},{"range":"1861","text":"1846"},{"range":"1862","text":"1848"},{"range":"1863","text":"1844"},{"range":"1864","text":"1844"},{"range":"1865","text":"1846"},{"range":"1866","text":"1848"},"'useParams' is defined but never used.","'published' is assigned a value but never used.","'setPublished' is assigned a value but never used.","'setState' is assigned a value but never used.","'newEvent' is assigned a value but never used.","'timeText' is assigned a value but never used.","'handleEventClick' is assigned a value but never used.","'hasEvent' is assigned a value but never used.","'event' is assigned a value but never used.","'desiredFormat' is assigned a value but never used.","'eventToRemove' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callAllScreenApi'. Either include it or remove the dependency array.",["1867"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'selectedGroups'. Either include it or remove the dependency array. You can also do a functional update 'setSelectedGroups(s => ...)' if you only need 'selectedGroups' in the 'setSelectedGroups' call.",["1868"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["1869"],"'Button' is defined but never used.","'Table' is defined but never used.","'Paper' is defined but never used.","'getWeather' is defined but never used.","'Parser' is defined but never used.","'weathericon' is defined but never used.","'yellow' is defined but never used.","'blue' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","'txt' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'prp' is assigned a value but never used.","'showFilterModal' is assigned a value but never used.","'setFilterModal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'callAllScreenApi' and 'filterData'. Either include them or remove the dependency array.",["1870"],"'FilterModal' is defined but never used.","'canvaIcon' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'callAllMedialApi'. Either include it or remove the dependency array.",["1871"],"'roles' is defined but never used.","'Badge' is defined but never used.","'setQuickplay' is defined but never used.","'name' is assigned a value but never used.","'toast' is defined but never used.","Unnecessarily computed property [\"x\"] found.",{"range":"1872","text":"1873"},"Unnecessarily computed property [\"y\"] found.",{"range":"1874","text":"1875"},"'tagCloseIcon' is defined but never used.","'Select' is defined but never used.","'options' is assigned a value but never used.","'Modal' is defined but never used.","'Editor' is defined but never used.","React Hook useEffect has a missing dependency: 'roles'. Either include it or remove the dependency array.",["1876"],"'useEffect' is defined but never used.","'addDeviceProfile' is defined but never used.","'GridToolbarExport' is defined but never used.","'columns' is assigned a value but never used.","'AddNewTagModal' is defined but never used.","'downArrow' is defined but never used.","'veiwDetailIcon' is defined but never used.","'assignIcon' is defined but never used.","'updateGroups' is defined but never used.","'updateUsers' is defined but never used.","'emptyMediaImg' is defined but never used.","React Hook useEffect has a missing dependency: 'callAllTagsApi'. Either include it or remove the dependency array.",["1877"],"Unnecessarily computed property [\"live\"] found.",{"range":"1878","text":"1879"},"Unnecessarily computed property [\"offline\"] found.",{"range":"1880","text":"1881"},"Unnecessarily computed property [\"deactivated\"] found.",{"range":"1882","text":"1883"},"'icon' is defined but never used.","'preview' is assigned a value but never used.","'setPreview' is assigned a value but never used.","'takeScreenshotIcon' is defined but never used.","'parseMeta' is assigned a value but never used.","'jsonData' is assigned a value but never used.","'PerfectScrollbar' is defined but never used.","'avatar' is defined but never used.","'onFullScreen' is assigned a value but never used.","'logo' is defined but never used.","'checkedItems' is assigned a value but never used.","'handleSelectAllChange' is assigned a value but never used.","'humanReadableFormattedDateString' is defined but never used.","Unnecessarily computed property [\"zone\"] found.",{"range":"1884","text":"1885"},"'dt' is assigned a value but never used.","'getCompositionById' is defined but never used.","React Hook useEffect has a missing dependency: 'getScreenCode'. Either include it or remove the dependency array.",["1886"],"React Hook useEffect has a missing dependency: 'handleAddClass'. Either include it or remove the dependency array. If 'handleAddClass' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1887"],"React Hook useEffect has missing dependencies: 'contentnew.Zone1', 'contentnew.Zone2', 'contentnew.Zone3', 'current2Index', and 'layout'. Either include them or remove the dependency array.",["1888"],"'activeClass' is assigned a value but never used.","'setActiveClass' is assigned a value but never used.","'WebVideoPlayer' is defined but never used.","'BASE_URL' is defined but never used.","'ReactPlayer' is defined but never used.","'Iframe' is defined but never used.","'fontSize' is defined but never used.","React Hook useEffect has a missing dependency: 'contents'. Either include it or remove the dependency array.",["1889"],"'videojs' is defined but never used.","The ref value 'videoRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'videoRef.current' to a variable inside the effect, and use that variable in the cleanup function.","'renderSchedule' is assigned a value but never used.","'value' is assigned a value but never used.","'setEvents' is assigned a value but never used.","'daySequence' is assigned a value but never used.","'seqArray' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","unsafeRefs",["1890"],"'currentMonth' is assigned a value but never used.","'checkboxKey' is assigned a value but never used.","'disablePrp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'actionType'. Either include it or remove the dependency array.",["1891"],"'err' is assigned a value but never used.","'errMessage' is assigned a value but never used.","'isRefresh' is assigned a value but never used.","'setIsRefresh' is assigned a value but never used.","'Preview' is defined but never used.","'languageOptions' is assigned a value but never used.","'language' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'usePlacesWidget' is defined but never used.","'Form' is defined but never used.","'rssParser' is defined but never used.","'Switch' is defined but never used.","'Carousel' is defined but never used.","'Box' is defined but never used.","'Slide' is defined but never used.","'newsimg' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'data' is assigned a value but never used.","no-dupe-keys","Duplicate key 'urlLink'.","ObjectExpression",["1892"],"'useCallback' is defined but never used.","'setIsLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'permission' and 'reportSlug'. Either include them or remove the dependency array.",["1893"],"'FormControlLabel' is defined but never used.","'list' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'ReactDOM' is defined but never used.","'getCroppedImg' is defined but never used.","React Hook useCallback has a missing dependency: 'setCroppedAreaPixels'. Either include it or remove the dependency array. If 'setCroppedAreaPixels' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1894"],"'layoutSelected' is defined but never used.","'clearErrors' is defined but never used.","'authenticator' is defined but never used.","'validCode' is assigned a value but never used.","'isCodeValid' is assigned a value but never used.","'setIsCodeValid' is assigned a value but never used.","'setSecret' is assigned a value but never used.","'onLogin' is defined but never used.","'sendOtpAgain' is assigned a value but never used.","'handleLoginAgain' is assigned a value but never used.","'getCode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSecret'. Either include it or remove the dependency array.",["1895"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["1896"],"React Hook useEffect has a missing dependency: 'callMediaDetailApi'. Either include it or remove the dependency array.",["1897"],"'person' is defined but never used.","'bgStyle' is assigned a value but never used.","'setBgStyle' is assigned a value but never used.",["1898"],["1899"],"'authResponse' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'actionType' and 'data'. Either include them or remove the dependency array.",["1900"],"'logout' is defined but never used.","'mfaEnablePost' is defined but never used.","'base32Decode' is defined but never used.","'connect' is defined but never used.","'scheduleIcon' is defined but never used.","'deleteSchedule' is defined but never used.","'getAllSchedule' is defined but never used.","'getQuickPlay' is defined but never used.","'deleteQuickPlay' is defined but never used.","'getDefaultComposition' is defined but never used.","'getAllScreens' is defined but never used.","'getAllComposition' is defined but never used.","'setDefaultComposition' is defined but never used.","'useHistory' is defined but never used.","'TableLoader' is defined but never used.","'LockScreen' is defined but never used.","'SelectScreenModal' is defined but never used.","'filterData' is assigned a value but never used.","'setFilterData' is assigned a value but never used.","'tagsRender' is assigned a value but never used.","'formatedDt' is assigned a value but never used.","'maxTime' is assigned a value but never used.","'endTime' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1901","fix":"1902"},{"desc":"1903","fix":"1904"},{"desc":"1905","fix":"1906"},{"desc":"1907","fix":"1908"},[2854,2864],"\"timing\"",[2914,2927],"'startTime'",[2992,3003],"'endTime'",[3123,3133],[4924,4934],[4960,4973],"\"startTime\"",[5015,5026],"\"endTime\"",[6322,6332],[6382,6395],[6461,6472],[6584,6594],{"desc":"1909","fix":"1910"},[4337,4347],[4397,4410],[4475,4486],[4606,4616],[5581,5591],[5619,5632],[5675,5686],{"desc":"1911","fix":"1912"},{"desc":"1913","fix":"1914"},{"desc":"1915","fix":"1916"},{"desc":"1917","fix":"1918"},{"desc":"1919","fix":"1920"},[9928,9933],"\"x\"",[10696,10701],"\"y\"",{"desc":"1921","fix":"1922"},{"desc":"1923","fix":"1924"},[3571,3579],"\"live\"",[4242,4253],"\"offline\"",[4934,4949],"\"deactivated\"",[1423,1431],"\"zone\"",{"desc":"1925","fix":"1926"},{"desc":"1927","fix":"1928"},{"desc":"1929","fix":"1930"},{"desc":"1931","fix":"1932"},{"desc":"1907","fix":"1933"},{"desc":"1934","fix":"1935"},{"desc":"1934","fix":"1936"},{"desc":"1937","fix":"1938"},{"desc":"1939","fix":"1940"},{"desc":"1941","fix":"1942"},{"desc":"1943","fix":"1944"},{"desc":"1945","fix":"1946"},{"desc":"1934","fix":"1947"},{"desc":"1934","fix":"1948"},{"desc":"1949","fix":"1950"},"Update the dependencies array to be: [dispatch, path, props.history]",{"range":"1951","text":"1952"},"Update the dependencies array to be: [callAllCompApi, isRefresh]",{"range":"1953","text":"1954"},"Update the dependencies array to be: [publishType, isRefresh, getSchedule]",{"range":"1955","text":"1956"},"Update the dependencies array to be: [callAllDaySequence, id]",{"range":"1957","text":"1958"},"Update the dependencies array to be: [callSingleDaySequence, schId]",{"range":"1959","text":"1960"},"Update the dependencies array to be: [callAllScreenApi, isRefresh]",{"range":"1961","text":"1962"},"Update the dependencies array to be: [screen, selectedGroups]",{"range":"1963","text":"1964"},"Update the dependencies array to be: [getData, id]",{"range":"1965","text":"1966"},"Update the dependencies array to be: [callAllScreenApi, filterData, isRefresh]",{"range":"1967","text":"1968"},"Update the dependencies array to be: [callAllMedialApi, isRefresh]",{"range":"1969","text":"1970"},"Update the dependencies array to be: [makeRefresh, roles, rolesData]",{"range":"1971","text":"1972"},"Update the dependencies array to be: [callAllTagsApi]",{"range":"1973","text":"1974"},"Update the dependencies array to be: [getScreenCode, isVerified]",{"range":"1975","text":"1976"},"Update the dependencies array to be: [composition, handleAddClass]",{"range":"1977","text":"1978"},"Update the dependencies array to be: [currentIndex, current1Index, layout, contentnew.Zone1, contentnew.Zone2, contentnew.Zone3, current2Index]",{"range":"1979","text":"1980"},"Update the dependencies array to be: [currentIndex, current1Index, current2Index, contents]",{"range":"1981","text":"1982"},{"range":"1983","text":"1958"},"Update the dependencies array to be: [actionType, mediaData]",{"range":"1984","text":"1985"},{"range":"1986","text":"1985"},"Update the dependencies array to be: [permission, reportData, reportSlug]",{"range":"1987","text":"1988"},"Update the dependencies array to be: [setCroppedAreaPixels]",{"range":"1989","text":"1990"},"Update the dependencies array to be: [getSecret]",{"range":"1991","text":"1992"},"Update the dependencies array to be: [editItem, slides, isRefresh, id]",{"range":"1993","text":"1994"},"Update the dependencies array to be: [callMediaDetailApi, id]",{"range":"1995","text":"1996"},{"range":"1997","text":"1985"},{"range":"1998","text":"1985"},"Update the dependencies array to be: [actionType, data, mediaData, tokenDetailsString]",{"range":"1999","text":"2000"},[1576,1601],"[dispatch, path, props.history]",[1599,1610],"[callAllCompApi, isRefresh]",[3901,3925],"[publishType, isRefresh, getSchedule]",[2247,2251],"[callAllDaySequence, id]",[3825,3832],"[callSingleDaySequence, schId]",[1832,1843],"[callAllScreenApi, isRefresh]",[2058,2066],"[screen, selectedGroups]",[910,914],"[getData, id]",[1088,1099],"[callAllScreenApi, filterData, isRefresh]",[1818,1829],"[callAllMedialApi, isRefresh]",[615,639],"[makeRefresh, roles, rolesData]",[748,750],"[callAllTagsApi]",[2276,2288],"[getScreenCode, isVerified]",[8009,8022],"[composition, handleAddClass]",[3500,3529],"[currentIndex, current1Index, layout, contentnew.Zone1, contentnew.Zone2, contentnew.Zone3, current2Index]",[3780,3824],"[currentIndex, current1Index, current2Index, contents]",[1583,1587],[2069,2080],"[actionType, mediaData]",[3028,3039],[2206,2218],"[permission, reportData, reportSlug]",[499,501],"[setCroppedAreaPixels]",[4723,4725],"[getSecret]",[7260,7289],"[editItem, slides, isRefresh, id]",[7368,7372],"[callMediaDetailApi, id]",[2084,2095],[2559,2570],[3322,3352],"[actionType, data, mediaData, tokenDetailsString]"]